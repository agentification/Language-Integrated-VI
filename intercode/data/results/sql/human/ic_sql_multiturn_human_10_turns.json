{
  "809": {
    "environment": "ic_sql",
    "query_idx": 809,
    "query": "Which languages are spoken by only one country in republic governments?",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = \"Republic\" GROUP BY T2.Language HAVING COUNT(*) = 1",
    "reward": 0.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('city',)('country',)('countrylanguage',)"
      },
      {
        "action": "desc country;",
        "observation": "('Code', 'char(3)', 'NO', 'PRI', '', '')('Name', 'char(52)', 'NO', '', '', '')('Continent', 'text', 'NO', '', None, '')('Region', 'char(26)', 'NO', '', '', '')('SurfaceArea', 'float(10,2)', 'NO', '', '0.00', '')('IndepYear', 'int', 'YES', '', None, '')('Population', 'int', 'NO', '', '0', '')('LifeExpectancy', 'float(3,1)', 'YES', '', None, '')('GNP', 'float(10,2)', 'YES', '', None, '')('GNPOld', 'float(10,2)', 'YES', '', None, '')('LocalName', 'char(45)', 'NO', '', '', '')('GovernmentForm', 'char(45)', 'NO', '', '', '')('HeadOfState', 'char(60)', 'YES', '', None, '')('Capital', 'int', 'YES', '', None, '')('Code2', 'char(2)', 'NO', '', '', '')"
      },
      {
        "action": "desc countrylanguage;",
        "observation": "('CountryCode', 'char(3)', 'NO', 'PRI', '', '')('Language', 'char(30)', 'NO', 'PRI', '', '')('IsOfficial', 'text', 'NO', '', None, '')('Percentage', 'float(4,1)', 'NO', '', '0.0', '')"
      },
      {
        "action": "select count(*) from country;",
        "observation": "(239,)"
      },
      {
        "action": "select count(*) from countrylanguage;",
        "observation": "(984,)"
      },
      {
        "action": "select * from country where country.GovernmentForm = \"Republic\";",
        "observation": "('AGO', 'Angola', 'Africa', 'Central Africa', 1246700.0, 1975, 12878000, 38.3, 6648.0, 7984.0, 'Angola', 'Republic', 'Jos\u00e9 Eduardo dos Santos', 56, 'AO')('ALB', 'Albania', 'Europe', 'Southern Europe', 28748.0, 1912, 3401200, 71.6, 3205.0, 2500.0, 'Shqip\u00ebria', 'Republic', 'Rexhep Mejdani', 34, 'AL')('ARM', 'Armenia', 'Asia', 'Middle East', 29800.0, 1991, 3520000, 66.4, 1813.0, 1627.0, 'Hajastan', 'Republic', 'Robert Kot\u0161arjan', 126, 'AM')('BDI', 'Burundi', 'Africa', 'Eastern Africa', 27834.0, 1962, 6695000, 46.2, 903.0, 982.0, 'Burundi/Uburundi', 'Republic', 'Pierre Buyoya', 552, 'BI')('BEN', 'Benin', 'Africa', 'Western Africa', 112622.0, 1960, 6097000, 50.2, 2357.0, 2141.0, 'B\u00e9nin', 'Republic', 'Mathieu K\u00e9r\u00e9kou', 187, 'BJ')('BFA', 'Burkina Faso', 'Africa', 'Western Africa', 274000.0, 1960, 11937000, 46.7, 2425.0, 2201.0, 'Burkina Faso', 'Republic', 'Blaise Compaor\u00e9', 549, 'BF')('BGD', 'Bangladesh', 'Asia', 'Southern and Central Asia', 143998.0, 1971, 129155000, 60.2, 32852.0, 31966.0, 'Bangladesh', 'Republic', 'Shahabuddin Ahmad', 150, 'BD')('BGR', 'Bulgaria', 'Europe', 'Eastern Europe', 110994.0, 1908, 8190900, 70.9, 12178.0, 10169.0, 'Balgarija', 'Republic', 'Petar Stojanov', 539, 'BG')('BLR', 'Belarus', 'Europe', 'Eastern Europe', 207600.0, 1991, 10236000, 68.0, 13714.0, None, 'Belarus', 'Republic', 'Aljaksandr Luka\u0161enka', 3520, 'BY')('BOL', 'Bolivia', 'South America', 'South America', 1098581.0, 1825, 8329000, 63.7, 8571.0, 7967.0, 'Bolivia', 'Republic', 'Hugo B\u00e1nzer Su\u00e1rez', 194, 'BO')('BWA', 'Botswana', 'Africa', 'Southern Africa', 581730.0, 1966, 1622000, 39.3, 4834.0, 4935.0, 'Botswana', 'Republic', 'Festus G. Mogae', 204, 'BW')('CAF', 'Central African Republic', 'Africa', 'Central Africa', 622984.0, 1960, 3615000, 44.0, 1054.0, 993.0, 'Centrafrique/B\u00ea-Afr\u00eeka', 'Republic', 'Ange-F\u00e9lix Patass\u00e9', 1889, 'CF')('CHL', 'Chile', 'South America', 'South America', 756626.0, 1810, 15211000, 75.7, 72949.0, 75780.0, 'Chile', 'Republic', 'Ricardo Lagos Escobar', 554, 'CL')('CIV', 'C\u00f4te d\u2019Ivoire', 'Africa', 'Western Africa', 322463.0, 1960, 14786000, 45.2, 11345.0, 10285.0, 'C\u00f4te d\u2019Ivoire', 'Republic', 'Laurent Gbagbo', 2814, 'CI')('CMR', 'Cameroon', 'Africa', 'Central Africa', 475442.0, 1960, 15085000, 54.8, 9174.0, 8596.0, 'Cameroun/Cameroon', 'Republic', 'Paul Biya', 1804, 'CM')('COD', 'Congo, The Democratic Republic of the', 'Africa', 'Central Africa', 2344858.0, 1960, 51654000, 48.8, 6964.0, 2474.0, 'R\u00e9publique D\u00e9mocratique du Congo', 'Republic', 'Joseph Kabila', 2298, 'CD')('COG', 'Congo', 'Africa', 'Central Africa', 342000.0, 1960, 2943000, 47.4, 2108.0, 2287.0, 'Congo', 'Republic', 'Denis Sassou-Nguesso', 2296, 'CG')('COL', 'Colombia', 'South America', 'South America', 1138914.0, 1810, 42321000, 70.3, 102896.0, 105116.0, 'Colombia', 'Republic', 'Andr\u00e9s Pastrana Arango', 2257, 'CO')('COM', 'Comoros', 'Africa', 'Eastern Africa', 1862.0, 1975, 578000, 60.0, 4401.0, 4361.0, 'Komori/Comores', 'Republic', 'Azali Assoumani', 2295, 'KM')('CPV', 'Cape Verde', 'Africa', 'Western Africa', 4033.0, 1975, 428000, 68.9, 435.0, 420.0, 'Cabo Verde', 'Republic', 'Ant\u00f3nio Mascarenhas Monteiro', 1859, 'CV')('CRI', 'Costa Rica', 'North America', 'Central America', 51100.0, 1821, 4023000, 75.8, 10226.0, 9757.0, 'Costa Rica', 'Republic', 'Miguel \u00c1ngel Rodr\u00edguez Echeverr\u00eda', 584, 'CR')('CYP', 'Cyprus', 'Asia', 'Middle East', 9251.0, 1960, 754700, 76.7, 9333.0, 8246.0, 'K\u00fdpros/Kibris', 'Republic', 'Glafkos Klerides', 2430, 'CY')('CZE', 'Czech Republic', 'Europe', 'Eastern Europe', 78866.0, 1993, 10278100, 74.5, 55017.0, 52037.0, '\u00b8esko', 'Republic', 'V\u00e1clav Havel', 3339, 'CZ')('DJI', 'Djibouti', 'Africa', 'Eastern Africa', 23200.0, 1977, 638000, 50.8, 382.0, 373.0, 'Djibouti/Jibuti', 'Republic', 'Ismail Omar Guelleh', 585, 'DJ')('DMA', 'Dominica', 'North America', 'Caribbean', 751.0, 1978, 71000, 73.4, 256.0, 243.0, 'Dominica', 'Republic', 'Vernon Shaw', 586, 'DM')('DOM', 'Dominican Republic', 'North America', 'Caribbean', 48511.0, 1844, 8495000, 73.2, 15846.0, 15076.0, 'Rep\u00fablica Dominicana', 'Republic', 'Hip\u00f3lito Mej\u00eda Dom\u00ednguez', 587, 'DO')('DZA', 'Algeria', 'Africa', 'Northern Africa', 2381741.0, 1962, 31471000, 69.7, 49982.0, 46966.0, 'Al-Jaza\u2019ir/Alg\u00e9rie', 'Republic', 'Abdelaziz Bouteflika', 35, 'DZ')('ECU', 'Ecuador', 'South America', 'South America', 283561.0, 1822, 12646000, 71.1, 19770.0, 19769.0, 'Ecuador', 'Republic', 'Gustavo Noboa Bejarano', 594, 'EC')('EGY', 'Egypt', 'Africa', 'Northern Africa', 1001449.0, 1922, 68470000, 63.3, 82710.0, 75617.0, 'Misr', 'Republic', 'Hosni Mubarak', 608, 'EG')('ERI', 'Eritrea', 'Africa', 'Eastern Africa', 117600.0, 1993, 3850000, 55.8, 650.0, 755.0, 'Ertra', 'Republic', 'Isayas Afewerki [Isaias Afwerki]', 652, 'ER')('EST', 'Estonia', 'Europe', 'Baltic Countries', 45227.0, 1991, 1439200, 69.5, 5328.0, 3371.0, 'Eesti', 'Republic', 'Lennart Meri', 3791, 'EE')('ETH', 'Ethiopia', 'Africa', 'Eastern Africa', 1104300.0, -1000, 62565000, 45.2, 6353.0, 6180.0, 'YeItyop\u00b4iya', 'Republic', 'Negasso Gidada', 756, 'ET')('FIN', 'Finland', 'Europe', 'Nordic Countries', 338145.0, 1917, 5171300, 77.4, 121914.0, 119833.0, 'Suomi', 'Republic', 'Tarja Halonen', 3236, 'FI')('FJI', 'Fiji Islands', 'Oceania', 'Melanesia', 18274.0, 1970, 817000, 67.9, 1536.0, 2149.0, 'Fiji Islands', 'Republic', 'Josefa Iloilo', 764, 'FJ')('FRA', 'France', 'Europe', 'Western Europe', 551500.0, 843, 59225700, 78.8, 1424285.0, 1392448.0, 'France', 'Republic', 'Jacques Chirac', 2974, 'FR')('GAB', 'Gabon', 'Africa', 'Central Africa', 267668.0, 1960, 1226000, 50.1, 5493.0, 5279.0, 'Le Gabon', 'Republic', 'Omar Bongo', 902, 'GA')('GEO', 'Georgia', 'Asia', 'Middle East', 69700.0, 1991, 4968000, 64.5, 6064.0, 5924.0, 'Sakartvelo', 'Republic', 'Eduard \u0160evardnadze', 905, 'GE')('GHA', 'Ghana', 'Africa', 'Western Africa', 238533.0, 1957, 20212000, 57.4, 7137.0, 6884.0, 'Ghana', 'Republic', 'John Kufuor', 910, 'GH')('GIN', 'Guinea', 'Africa', 'Western Africa', 245857.0, 1958, 7430000, 45.6, 2352.0, 2383.0, 'Guin\u00e9e', 'Republic', 'Lansana Cont\u00e9', 926, 'GN')('GMB', 'Gambia', 'Africa', 'Western Africa', 11295.0, 1965, 1305000, 53.2, 320.0, 325.0, 'The Gambia', 'Republic', 'Yahya Jammeh', 904, 'GM')('GNB', 'Guinea-Bissau', 'Africa', 'Western Africa', 36125.0, 1974, 1213000, 49.0, 293.0, 272.0, 'Guin\u00e9-Bissau', 'Republic', 'Kumba Ial\u00e1', 927, 'GW')('GNQ', 'Equatorial Guinea', 'Africa', 'Central Africa', 28051.0, 1968, 453000, 53.6, 283.0, 542.0, 'Guinea Ecuatorial', 'Republic', 'Teodoro Obiang Nguema Mbasogo', 2972, 'GQ')('GRC', 'Greece', 'Europe', 'Southern Europe', 131626.0, 1830, 10545700, 78.4, 120724.0, 119946.0, 'Ell\u00e1da', 'Republic', 'Kostis Stefanopoulos', 2401, 'GR')('GTM', 'Guatemala', 'North America', 'Central America', 108889.0, 1821, 11385000, 66.2, 19008.0, 17797.0, 'Guatemala', 'Republic', 'Alfonso Portillo Cabrera', 922, 'GT')('GUY', 'Guyana', 'South America', 'South America', 214969.0, 1966, 861000, 64.0, 722.0, 743.0, 'Guyana', 'Republic', 'Bharrat Jagdeo', 928, 'GY')('HND', 'Honduras', 'North America', 'Central America', 112088.0, 1838, 6485000, 69.9, 5333.0, 4697.0, 'Honduras', 'Republic', 'Carlos Roberto Flores Facuss\u00e9', 933, 'HN')('HRV', 'Croatia', 'Europe', 'Southern Europe', 56538.0, 1991, 4473000, 73.7, 20208.0, 19300.0, 'Hrvatska', 'Republic', '\u0160tipe Mesic', 2409, 'HR')('HTI', 'Haiti', 'North America', 'Caribbean', 27750.0, 1804, 8222000, 49.2, 3459.0, 3107.0, 'Ha\u00efti/Dayti', 'Republic', 'Jean-Bertrand Aristide', 929, 'HT')('HUN', 'Hungary', 'Europe', 'Eastern Europe', 93030.0, 1918, 10043200, 71.4, 48267.0, 45914.0, 'Magyarorsz\u00e1g', 'Republic', 'Ferenc M\u00e1dl', 3483, 'HU')('IDN', 'Indonesia', 'Asia', 'Southeast Asia', 1904569.0, 1945, 212107000, 68.0, 84982.0, 215002.0, 'Indonesia', 'Republic', 'Abdurrahman Wahid', 939, 'ID')('IRL', 'Ireland', 'Europe', 'British Islands', 70273.0, 1921, 3775100, 76.8, 75921.0, 73132.0, 'Ireland/\u00c9ire', 'Republic', 'Mary McAleese', 1447, 'IE')('IRQ', 'Iraq', 'Asia', 'Middle East', 438317.0, 1932, 23115000, 66.5, 11500.0, None, 'Al-\u00b4Iraq', 'Republic', 'Saddam Hussein al-Takriti', 1365, 'IQ')('ISL', 'Iceland', 'Europe', 'Nordic Countries', 103000.0, 1944, 279000, 79.4, 8255.0, 7474.0, '\u00cdsland', 'Republic', '\u00d3lafur Ragnar Gr\u00edmsson', 1449, 'IS')('ISR', 'Israel', 'Asia', 'Middle East', 21056.0, 1948, 6217000, 78.6, 97477.0, 98577.0, 'Yisra\u2019el/Isra\u2019il', 'Republic', 'Moshe Katzav', 1450, 'IL')('ITA', 'Italy', 'Europe', 'Southern Europe', 301316.0, 1861, 57680000, 79.0, 1161755.0, 1145372.0, 'Italia', 'Republic', 'Carlo Azeglio Ciampi', 1464, 'IT')('KAZ', 'Kazakstan', 'Asia', 'Southern and Central Asia', 2724900.0, 1991, 16223000, 63.2, 24375.0, 23383.0, 'Qazaqstan', 'Republic', 'Nursultan Nazarbajev', 1864, 'KZ')('KEN', 'Kenya', 'Africa', 'Eastern Africa', 580367.0, 1963, 30080000, 48.0, 9217.0, 10241.0, 'Kenya', 'Republic', 'Daniel arap Moi', 1881, 'KE')('KGZ', 'Kyrgyzstan', 'Asia', 'Southern and Central Asia', 199900.0, 1991, 4699000, 63.4, 1626.0, 1767.0, 'Kyrgyzstan', 'Republic', 'Askar Akajev', 2253, 'KG')('KIR', 'Kiribati', 'Oceania', 'Micronesia', 726.0, 1979, 83000, 59.8, 40.7, None, 'Kiribati', 'Republic', 'Teburoro Tito', 2256, 'KI')('KOR', 'South Korea', 'Asia', 'Eastern Asia', 99434.0, 1948, 46844000, 74.4, 320749.0, 442544.0, 'Taehan Min\u2019guk (Namhan)', 'Republic', 'Kim Dae-jung', 2331, 'KR')('LAO', 'Laos', 'Asia', 'Southeast Asia', 236800.0, 1953, 5433000, 53.1, 1292.0, 1746.0, 'Lao', 'Republic', 'Khamtay Siphandone', 2432, 'LA')('LBN', 'Lebanon', 'Asia', 'Middle East', 10400.0, 1941, 3282000, 71.3, 17121.0, 15129.0, 'Lubnan', 'Republic', '\u00c9mile Lahoud', 2438, 'LB')('LBR', 'Liberia', 'Africa', 'Western Africa', 111369.0, 1847, 3154000, 51.0, 2012.0, None, 'Liberia', 'Republic', 'Charles Taylor', 2440, 'LR')('LKA', 'Sri Lanka', 'Asia', 'Southern and Central Asia', 65610.0, 1948, 18827000, 71.8, 15706.0, 15091.0, 'Sri Lanka/Ilankai', 'Republic', 'Chandrika Kumaratunga', 3217, 'LK')('LTU', 'Lithuania', 'Europe', 'Baltic Countries', 65301.0, 1991, 3698500, 69.1, 10692.0, 9585.0, 'Lietuva', 'Republic', 'Valdas Adamkus', 2447, 'LT')('LVA', 'Latvia', 'Europe', 'Baltic Countries', 64589.0, 1991, 2424200, 68.4, 6398.0, 5639.0, 'Latvija', 'Republic', 'Vaira Vike-Freiberga', 2434, 'LV')('MDA', 'Moldova', 'Europe', 'Eastern Europe', 33851.0, 1991, 4380000, 64.5, 1579.0, 1872.0, 'Moldova', 'Republic', 'Vladimir Voronin', 2690, 'MD')('MDV', 'Maldives', 'Asia', 'Southern and Central Asia', 298.0, 1965, 286000, 62.2, 199.0, None, 'Dhivehi Raajje/Maldives', 'Republic', 'Maumoon Abdul Gayoom', 2463, 'MV')('MHL', 'Marshall Islands', 'Oceania', 'Micronesia', 181.0, 1990, 64000, 65.5, 97.0, None, 'Marshall Islands/Majol', 'Republic', 'Kessai Note', 2507, 'MH')('MKD', 'Macedonia', 'Europe', 'Southern Europe', 25713.0, 1991, 2024000, 73.8, 1694.0, 1915.0, 'Makedonija', 'Republic', 'Boris Trajkovski', 2460, 'MK')('MLI', 'Mali', 'Africa', 'Western Africa', 1240192.0, 1960, 11234000, 46.7, 2642.0, 2453.0, 'Mali', 'Republic', 'Alpha Oumar Konar\u00e9', 2482, 'ML')('MLT', 'Malta', 'Europe', 'Southern Europe', 316.0, 1964, 380200, 77.9, 3512.0, 3338.0, 'Malta', 'Republic', 'Guido de Marco', 2484, 'MT')('MMR', 'Myanmar', 'Asia', 'Southeast Asia', 676578.0, 1948, 45611000, 54.9, 180375.0, 171028.0, 'Myanma Pye', 'Republic', 'kenraali Than Shwe', 2710, 'MM')('MNG', 'Mongolia', 'Asia', 'Eastern Asia', 1566500.0, 1921, 2662000, 67.3, 1043.0, 933.0, 'Mongol Uls', 'Republic', 'Natsagiin Bagabandi', 2696, 'MN')('MOZ', 'Mozambique', 'Africa', 'Eastern Africa', 801590.0, 1975, 19680000, 37.5, 2891.0, 2711.0, 'Mo\u00e7ambique', 'Republic', 'Joaqu\u00edm A. Chissano', 2698, 'MZ')('MRT', 'Mauritania', 'Africa', 'Western Africa', 1025520.0, 1960, 2670000, 50.8, 998.0, 1081.0, 'Muritaniya/Mauritanie', 'Republic', 'Maaouiya Ould Sid\u00b4Ahmad Taya', 2509, 'MR')('MUS', 'Mauritius', 'Africa', 'Eastern Africa', 2040.0, 1968, 1158000, 71.0, 4251.0, 4186.0, 'Mauritius', 'Republic', 'Cassam Uteem', 2511, 'MU')('MWI', 'Malawi', 'Africa', 'Eastern Africa', 118484.0, 1964, 10925000, 37.6, 1687.0, 2527.0, 'Malawi', 'Republic', 'Bakili Muluzi', 2462, 'MW')('NAM', 'Namibia', 'Africa', 'Southern Africa', 824292.0, 1990, 1726000, 42.5, 3101.0, 3384.0, 'Namibia', 'Republic', 'Sam Nujoma', 2726, 'NA')('NER', 'Niger', 'Africa', 'Western Africa', 1267000.0, 1960, 10730000, 41.3, 1706.0, 1580.0, 'Niger', 'Republic', 'Mamadou Tandja', 2738, 'NE')('NIC', 'Nicaragua', 'North America', 'Central America', 130000.0, 1838, 5074000, 68.7, 1988.0, 2023.0, 'Nicaragua', 'Republic', 'Arnoldo Alem\u00e1n Lacayo', 2734, 'NI')('NRU', 'Nauru', 'Oceania', 'Micronesia', 21.0, 1968, 12000, 60.8, 197.0, None, 'Naoero/Nauru', 'Republic', 'Bernard Dowiyogo', 2728, 'NR')('PAK', 'Pakistan', 'Asia', 'Southern and Central Asia', 796095.0, 1947, 156483000, 61.1, 61289.0, 58549.0, 'Pakistan', 'Republic', 'Mohammad Rafiq Tarar', 2831, 'PK')('PAN', 'Panama', 'North America', 'Central America', 75517.0, 1903, 2856000, 75.5, 9131.0, 8700.0, 'Panam\u00e1', 'Republic', 'Mireya Elisa Moscoso Rodr\u00edguez', 2882, 'PA')('PER', 'Peru', 'South America', 'South America', 1285216.0, 1821, 25662000, 70.0, 64140.0, 65186.0, 'Per\u00fa/Piruw', 'Republic', 'Valentin Paniagua Corazao', 2890, 'PE')('PHL', 'Philippines', 'Asia', 'Southeast Asia', 300000.0, 1946, 75967000, 67.5, 65107.0, 82239.0, 'Pilipinas', 'Republic', 'Gloria Macapagal-Arroyo', 766, 'PH')('PLW', 'Palau', 'Oceania', 'Micronesia', 459.0, 1994, 19000, 68.6, 105.0, None, 'Belau/Palau', 'Republic', 'Kuniwo Nakamura', 2881, 'PW')('POL', 'Poland', 'Europe', 'Eastern Europe', 323250.0, 1918, 38653600, 73.2, 151697.0, 135636.0, 'Polska', 'Republic', 'Aleksander Kwasniewski', 2928, 'PL')('PRT', 'Portugal', 'Europe', 'Southern Europe', 91982.0, 1143, 9997600, 75.8, 105954.0, 102133.0, 'Portugal', 'Republic', 'Jorge Samp\u00e3io', 2914, 'PT')('PRY', 'Paraguay', 'South America', 'South America', 406752.0, 1811, 5496000, 73.7, 8444.0, 9555.0, 'Paraguay', 'Republic', 'Luis \u00c1ngel Gonz\u00e1lez Macchi', 2885, 'PY')('ROM', 'Romania', 'Europe', 'Eastern Europe', 238391.0, 1878, 22455500, 69.9, 38158.0, 34843.0, 'Rom\u00e2nia', 'Republic', 'Ion Iliescu', 3018, 'RO')('RWA', 'Rwanda', 'Africa', 'Eastern Africa', 26338.0, 1962, 7733000, 39.3, 2036.0, 1863.0, 'Rwanda/Urwanda', 'Republic', 'Paul Kagame', 3047, 'RW')('SEN', 'Senegal', 'Africa', 'Western Africa', 196722.0, 1960, 9481000, 62.2, 4787.0, 4542.0, 'S\u00e9n\u00e9gal/Sounougal', 'Republic', 'Abdoulaye Wade', 3198, 'SN')('SGP', 'Singapore', 'Asia', 'Southeast Asia', 618.0, 1965, 3567000, 80.1, 86503.0, 96318.0, 'Singapore/Singapura/Xinjiapo/Singapur', 'Republic', 'Sellapan Rama Nathan', 3208, 'SG')('SLE', 'Sierra Leone', 'Africa', 'Western Africa', 71740.0, 1961, 4854000, 45.3, 746.0, 858.0, 'Sierra Leone', 'Republic', 'Ahmed Tejan Kabbah', 3207, 'SL')('SLV', 'El Salvador', 'North America', 'Central America', 21041.0, 1841, 6276000, 69.7, 11863.0, 11203.0, 'El Salvador', 'Republic', 'Francisco Guillermo Flores P\u00e9rez', 645, 'SV')('SMR', 'San Marino', 'Europe', 'Southern Europe', 61.0, 885, 27000, 81.1, 510.0, None, 'San Marino', 'Republic', None, 3171, 'SM')('SOM', 'Somalia', 'Africa', 'Eastern Africa', 637657.0, 1960, 10097000, 46.2, 935.0, None, 'Soomaaliya', 'Republic', 'Abdiqassim Salad Hassan', 3214, 'SO')('STP', 'Sao Tome and Principe', 'Africa', 'Central Africa', 964.0, 1975, 147000, 65.3, 6.0, None, 'S\u00e3o Tom\u00e9 e Pr\u00edncipe', 'Republic', 'Miguel Trovoada', 3172, 'ST')('SUR', 'Suriname', 'South America', 'South America', 163265.0, 1975, 417000, 71.4, 870.0, 706.0, 'Suriname', 'Republic', 'Ronald Venetiaan', 3243, 'SR')('SVK', 'Slovakia', 'Europe', 'Eastern Europe', 49012.0, 1993, 5398700, 73.7, 20594.0, 19452.0, 'Slovensko', 'Republic', 'Rudolf Schuster', 3209, 'SK')('SVN', 'Slovenia', 'Europe', 'Southern Europe', 20256.0, 1991, 1987800, 74.9, 19756.0, 18202.0, 'Slovenija', 'Republic', 'Milan Kucan', 3212, 'SI')('SYC', 'Seychelles', 'Africa', 'Eastern Africa', 455.0, 1976, 77000, 70.4, 536.0, 539.0, 'Sesel/Seychelles', 'Republic', 'France-Albert Ren\u00e9', 3206, 'SC')('SYR', 'Syria', 'Asia', 'Middle East', 185180.0, 1941, 16125000, 68.5, 65984.0, 64926.0, 'Suriya', 'Republic', 'Bashar al-Assad', 3250, 'SY')('TCD', 'Chad', 'Africa', 'Central Africa', 1284000.0, 1960, 7651000, 50.5, 1208.0, 1102.0, 'Tchad/Tshad', 'Republic', 'Idriss D\u00e9by', 3337, 'TD')('TGO', 'Togo', 'Africa', 'Western Africa', 56785.0, 1960, 4629000, 54.7, 1449.0, 1400.0, 'Togo', 'Republic', 'Gnassingb\u00e9 Eyad\u00e9ma', 3332, 'TG')('TJK', 'Tajikistan', 'Asia', 'Southern and Central Asia', 143100.0, 1991, 6188000, 64.1, 1990.0, 1056.0, 'To\u00e7ikiston', 'Republic', 'Emomali Rahmonov', 3261, 'TJ')('TKM', 'Turkmenistan', 'Asia', 'Southern and Central Asia', 488100.0, 1991, 4459000, 60.9, 4397.0, 2000.0, 'T\u00fcrkmenostan', 'Republic', 'Saparmurad Nijazov', 3419, 'TM')('TTO', 'Trinidad and Tobago', 'North America', 'Caribbean', 5130.0, 1962, 1295000, 68.0, 6232.0, 5867.0, 'Trinidad and Tobago', 'Republic', 'Arthur N. R. Robinson', 3336, 'TT')('TUN', 'Tunisia', 'Africa', 'Northern Africa', 163610.0, 1956, 9586000, 73.7, 20026.0, 18898.0, 'Tunis/Tunisie', 'Republic', 'Zine al-Abidine Ben Ali', 3349, 'TN')('TUR', 'Turkey', 'Asia', 'Middle East', 774815.0, 1923, 66591000, 71.0, 210721.0, 189122.0, 'T\u00fcrkiye', 'Republic', 'Ahmet Necdet Sezer', 3358, 'TR')('TWN', 'Taiwan', 'Asia', 'Eastern Asia', 36188.0, 1945, 22256000, 76.4, 256254.0, 263451.0, 'T\u2019ai-wan', 'Republic', 'Chen Shui-bian', 3263, 'TW')('TZA', 'Tanzania', 'Africa', 'Eastern Africa', 883749.0, 1961, 33517000, 52.3, 8005.0, 7388.0, 'Tanzania', 'Republic', 'Benjamin William Mkapa', 3306, 'TZ')('UGA', 'Uganda', 'Africa', 'Eastern Africa', 241038.0, 1962, 21778000, 42.9, 6313.0, 6887.0, 'Uganda', 'Republic', 'Yoweri Museveni', 3425, 'UG')('UKR', 'Ukraine', 'Europe', 'Eastern Europe', 603700.0, 1991, 50456000, 66.0, 42168.0, 49677.0, 'Ukrajina', 'Republic', 'Leonid Kut\u0161ma', 3426, 'UA')('URY', 'Uruguay', 'South America', 'South America', 175016.0, 1828, 3337000, 75.2, 20831.0, 19967.0, 'Uruguay', 'Republic', 'Jorge Batlle Ib\u00e1\u00f1ez', 3492, 'UY')('UZB', 'Uzbekistan', 'Asia', 'Southern and Central Asia', 447400.0, 1991, 24318000, 63.7, 14194.0, 21300.0, 'Uzbekiston', 'Republic', 'Islam Karimov', 3503, 'UZ')('VUT', 'Vanuatu', 'Oceania', 'Melanesia', 12189.0, 1980, 190000, 60.6, 261.0, 246.0, 'Vanuatu', 'Republic', 'John Bani', 3537, 'VU')('YEM', 'Yemen', 'Asia', 'Middle East', 527968.0, 1918, 18112000, 59.8, 6041.0, 5729.0, 'Al-Yaman', 'Republic', 'Ali Abdallah Salih', 1780, 'YE')('ZAF', 'South Africa', 'Africa', 'Southern Africa', 1221037.0, 1910, 40377000, 51.1, 116729.0, 129092.0, 'South Africa', 'Republic', 'Thabo Mbeki', 716, 'ZA')('ZMB', 'Zambia', 'Africa', 'Eastern Africa', 752618.0, 1964, 9169000, 37.2, 3377.0, 3922.0, 'Zambia', 'Republic', 'Frederick Chiluba', 3162, 'ZM')('ZWE', 'Zimbabwe', 'Africa', 'Eastern Africa', 390757.0, 1980, 11669000, 37.8, 5951.0, 8670.0, 'Zimbabwe', 'Republic', 'Robert G. Mugabe', 4068, 'ZW')"
      },
      {
        "action": "select t2.language from country as t1 join countrylanguage as t2 on t1.Code = t2.CountryCode where t1.GovernmentForm = \"Republic\";",
        "observation": "('Ambo',)('Chokwe',)('Kongo',)('Luchazi',)('Luimbe-nganguela',)('Luvale',)('Mbundu',)('Nyaneka-nkhumbi',)('Ovimbundu',)('Albaniana',)('Greek',)('Macedonian',)('Armenian',)('Azerbaijani',)('French',)('Kirundi',)('Swahili',)('Adja',)('Aizo',)('Bariba',)('Fon',)('Ful',)('Joruba',)('Somba',)('Busansi',)('Dagara',)('Dyula',)('Ful',)('Gurma',)('Mossi',)('Bengali',)('Chakma',)('Garo',)('Khasi',)('Marma',)('Santhali',)('Tripuri',)('Bulgariana',)('Macedonian',)('Romani',)('Turkish',)('Belorussian',)('Polish',)('Russian',)('Ukrainian',)('Aimar\u00e1',)('Guaran\u00ed',)('Ket\u0161ua',)('Spanish',)('Khoekhoe',)('Ndebele',)('San',)('Shona',)('Tswana',)('Banda',)('Gbaya',)('Mandjia',)('Mbum',)('Ngbaka',)('Sara',)('Aimar\u00e1',)('Araucan',)('Rapa nui',)('Spanish',)('Akan',)('Gur',)('Kru',)('Malinke',)('[South]Mande',)('Bamileke-bamum',)('Duala',)('Fang',)('Ful',)('Maka',)('Mandara',)('Masana',)('Tikar',)('Boa',)('Chokwe',)('Kongo',)('Luba',)('Mongo',)('Ngala and Bangi',)('Rundi',)('Rwanda',)('Teke',)('Zande',)('Kongo',)('Mbete',)('Mboshi',)('Punu',)('Sango',)('Teke',)('Arawakan',)('Caribbean',)('Chibcha',)('Creole English',)('Spanish',)('Comorian',)('Comorian-Arabic',)('Comorian-French',)('Comorian-madagassi',)('Comorian-Swahili',)('Crioulo',)('Portuguese',)('Chibcha',)('Chinese',)('Creole English',)('Spanish',)('Greek',)('Turkish',)('Czech',)('German',)('Hungarian',)('Moravian',)('Polish',)('Romani',)('Silesiana',)('Slovak',)('Afar',)('Arabic',)('Somali',)('Creole English',)('Creole French',)('Creole French',)('Spanish',)('Arabic',)('Berberi',)('Ket\u0161ua',)('Spanish',)('Arabic',)('Sinaberberi',)('Afar',)('Bilin',)('Hadareb',)('Saho',)('Tigre',)('Tigrinja',)('Belorussian',)('Estonian',)('Finnish',)('Russian',)('Ukrainian',)('Amhara',)('Gurage',)('Oromo',)('Sidamo',)('Somali',)('Tigrinja',)('Walaita',)('Estonian',)('Finnish',)('Russian',)('Saame',)('Swedish',)('Fijian',)('Hindi',)('Arabic',)('French',)('Italian',)('Portuguese',)('Spanish',)('Turkish',)('Fang',)('Mbete',)('Mpongwe',)('Punu-sira-nzebi',)('Abhyasi',)('Armenian',)('Azerbaijani',)('Georgiana',)('Osseetti',)('Russian',)('Akan',)('Ewe',)('Ga-adangme',)('Gurma',)('Joruba',)('Mossi',)('Ful',)('Kissi',)('Kpelle',)('Loma',)('Malinke',)('Susu',)('Yalunka',)('Diola',)('Ful',)('Malinke',)('Soninke',)('Wolof',)('Balante',)('Crioulo',)('Ful',)('Malinke',)('Mandyako',)('Portuguese',)('Bubi',)('Fang',)('Greek',)('Turkish',)('Cakchiquel',)('Kekch\u00ed',)('Mam',)('Quich\u00e9',)('Spanish',)('Arawakan',)('Caribbean',)('Creole English',)('Creole English',)('Garifuna',)('Miskito',)('Spanish',)('Serbo-Croatian',)('Slovene',)('French',)('Haiti Creole',)('German',)('Hungarian',)('Romani',)('Romanian',)('Serbo-Croatian',)('Slovak',)('Bali',)('Banja',)('Batakki',)('Bugi',)('Javanese',)('Madura',)('Malay',)('Minangkabau',)('Sunda',)('English',)('Irish',)('Arabic',)('Assyrian',)('Azerbaijani',)('Kurdish',)('Persian',)('English',)('Icelandic',)('Arabic',)('Hebrew',)('Russian',)('Albaniana',)('French',)('Friuli',)('German',)('Italian',)('Romani',)('Sardinian',)('Slovene',)('German',)('Kazakh',)('Russian',)('Tatar',)('Ukrainian',)('Uzbek',)('Gusii',)('Kalenjin',)('Kamba',)('Kikuyu',)('Luhya',)('Luo',)('Masai',)('Meru',)('Nyika',)('Turkana',)('Kazakh',)('Kirgiz',)('Russian',)('Tadzhik',)('Tatar',)('Ukrainian',)('Uzbek',)('Kiribati',)('Tuvalu',)('Chinese',)('Korean',)('Lao',)('Lao-Soung',)('Mon-khmer',)('Thai',)('Arabic',)('Armenian',)('French',)('Bassa',)('Gio',)('Grebo',)('Kpelle',)('Kru',)('Loma',)('Malinke',)('Mano',)('Mixed Languages',)('Singali',)('Tamil',)('Belorussian',)('Lithuanian',)('Polish',)('Russian',)('Ukrainian',)('Belorussian',)('Latvian',)('Lithuanian',)('Polish',)('Russian',)('Ukrainian',)('Bulgariana',)('Gagauzi',)('Romanian',)('Russian',)('Ukrainian',)('Dhivehi',)('English',)('English',)('Marshallese',)('Albaniana',)('Macedonian',)('Romani',)('Serbo-Croatian',)('Turkish',)('Bambara',)('Ful',)('Senufo and Minianka',)('Songhai',)('Soninke',)('Tamashek',)('English',)('Maltese',)('Burmese',)('Chin',)('Kachin',)('Karen',)('Kayah',)('Mon',)('Rakhine',)('Shan',)('Bajad',)('Buryat',)('Dariganga',)('Dorbet',)('Kazakh',)('Mongolian',)('Chuabo',)('Lomwe',)('Makua',)('Marendje',)('Nyanja',)('Ronga',)('Sena',)('Shona',)('Tsonga',)('Tswa',)('Ful',)('Hassaniya',)('Soninke',)('Tukulor',)('Wolof',)('Zenaga',)('Bhojpuri',)('Creole French',)('French',)('Hindi',)('Marathi',)('Tamil',)('Chichewa',)('Lomwe',)('Ngoni',)('Yao',)('Afrikaans',)('Caprivi',)('German',)('Herero',)('Kavango',)('Nama',)('Ovambo',)('San',)('Ful',)('Hausa',)('Kanuri',)('Songhai-zerma',)('Tamashek',)('Creole English',)('Miskito',)('Spanish',)('Sumo',)('Chinese',)('English',)('Kiribati',)('Nauru',)('Tuvalu',)('Balochi',)('Brahui',)('Hindko',)('Pashto',)('Punjabi',)('Saraiki',)('Sindhi',)('Urdu',)('Arabic',)('Creole English',)('Cuna',)('Embera',)('Guaym\u00ed',)('Spanish',)('Aimar\u00e1',)('Ket\u0161ua',)('Spanish',)('Bicol',)('Cebuano',)('Hiligaynon',)('Ilocano',)('Maguindanao',)('Maranao',)('Pampango',)('Pangasinan',)('Pilipino',)('Waray-waray',)('Chinese',)('English',)('Palau',)('Philippene Languages',)('Belorussian',)('German',)('Polish',)('Ukrainian',)('Portuguese',)('German',)('Guaran\u00ed',)('Portuguese',)('Spanish',)('German',)('Hungarian',)('Romani',)('Romanian',)('Serbo-Croatian',)('Ukrainian',)('French',)('Rwanda',)('Diola',)('Ful',)('Malinke',)('Serer',)('Soninke',)('Wolof',)('Chinese',)('Malay',)('Tamil',)('Bullom-sherbro',)('Ful',)('Kono-vai',)('Kuranko',)('Limba',)('Mende',)('Temne',)('Yalunka',)('Nahua',)('Spanish',)('Italian',)('Arabic',)('Somali',)('Crioulo',)('French',)('Hindi',)('Sranantonga',)('Czech and Moravian',)('Hungarian',)('Romani',)('Slovak',)('Ukrainian and Russian',)('Hungarian',)('Serbo-Croatian',)('Slovene',)('English',)('French',)('Seselwa',)('Arabic',)('Kurdish',)('Arabic',)('Gorane',)('Hadjarai',)('Kanem-bornu',)('Mayo-kebbi',)('Ouaddai',)('Sara',)('Tandjile',)('Ane',)('Ewe',)('Gurma',)('Kaby\u00e9',)('Kotokoli',)('Moba',)('Naudemba',)('Watyi',)('Russian',)('Tadzhik',)('Uzbek',)('Kazakh',)('Russian',)('Turkmenian',)('Uzbek',)('Creole English',)('English',)('Hindi',)('Arabic',)('Arabic-French',)('Arabic-French-English',)('Arabic',)('Kurdish',)('Turkish',)('Ami',)('Atayal',)('Hakka',)('Mandarin Chinese',)('Min',)('Paiwan',)('Chaga and Pare',)('Gogo',)('Ha',)('Haya',)('Hehet',)('Luguru',)('Makonde',)('Nyakusa',)('Nyamwesi',)('Shambala',)('Swahili',)('Acholi',)('Ganda',)('Gisu',)('Kiga',)('Lango',)('Lugbara',)('Nkole',)('Rwanda',)('Soga',)('Teso',)('Belorussian',)('Bulgariana',)('Hungarian',)('Polish',)('Romanian',)('Russian',)('Ukrainian',)('Spanish',)('Karakalpak',)('Kazakh',)('Russian',)('Tadzhik',)('Tatar',)('Uzbek',)('Bislama',)('English',)('French',)('Arabic',)('Soqutri',)('Afrikaans',)('English',)('Ndebele',)('Northsotho',)('Southsotho',)('Swazi',)('Tsonga',)('Tswana',)('Venda',)('Xhosa',)('Zulu',)('Bemba',)('Chewa',)('Lozi',)('Nsenga',)('Nyanja',)('Tongan',)('English',)('Ndebele',)('Nyanja',)('Shona',)"
      },
      {
        "action": "select t2.language from country as t1 join countrylanguage as t2 on t1.Code = t2.CountryCode where t1.GovernmentForm = \"Republic\" group by t2.language;",
        "observation": "('Ambo',)('Chokwe',)('Kongo',)('Luchazi',)('Luimbe-nganguela',)('Luvale',)('Mbundu',)('Nyaneka-nkhumbi',)('Ovimbundu',)('Albaniana',)('Greek',)('Macedonian',)('Armenian',)('Azerbaijani',)('French',)('Kirundi',)('Swahili',)('Adja',)('Aizo',)('Bariba',)('Fon',)('Ful',)('Joruba',)('Somba',)('Busansi',)('Dagara',)('Dyula',)('Gurma',)('Mossi',)('Bengali',)('Chakma',)('Garo',)('Khasi',)('Marma',)('Santhali',)('Tripuri',)('Bulgariana',)('Romani',)('Turkish',)('Belorussian',)('Polish',)('Russian',)('Ukrainian',)('Aimar\u00e1',)('Guaran\u00ed',)('Ket\u0161ua',)('Spanish',)('Khoekhoe',)('Ndebele',)('San',)('Shona',)('Tswana',)('Banda',)('Gbaya',)('Mandjia',)('Mbum',)('Ngbaka',)('Sara',)('Araucan',)('Rapa nui',)('Akan',)('Gur',)('Kru',)('Malinke',)('[South]Mande',)('Bamileke-bamum',)('Duala',)('Fang',)('Maka',)('Mandara',)('Masana',)('Tikar',)('Boa',)('Luba',)('Mongo',)('Ngala and Bangi',)('Rundi',)('Rwanda',)('Teke',)('Zande',)('Mbete',)('Mboshi',)('Punu',)('Sango',)('Arawakan',)('Caribbean',)('Chibcha',)('Creole English',)('Comorian',)('Comorian-Arabic',)('Comorian-French',)('Comorian-madagassi',)('Comorian-Swahili',)('Crioulo',)('Portuguese',)('Chinese',)('Czech',)('German',)('Hungarian',)('Moravian',)('Silesiana',)('Slovak',)('Afar',)('Arabic',)('Somali',)('Creole French',)('Berberi',)('Sinaberberi',)('Bilin',)('Hadareb',)('Saho',)('Tigre',)('Tigrinja',)('Estonian',)('Finnish',)('Amhara',)('Gurage',)('Oromo',)('Sidamo',)('Walaita',)('Saame',)('Swedish',)('Fijian',)('Hindi',)('Italian',)('Mpongwe',)('Punu-sira-nzebi',)('Abhyasi',)('Georgiana',)('Osseetti',)('Ewe',)('Ga-adangme',)('Kissi',)('Kpelle',)('Loma',)('Susu',)('Yalunka',)('Diola',)('Soninke',)('Wolof',)('Balante',)('Mandyako',)('Bubi',)('Cakchiquel',)('Kekch\u00ed',)('Mam',)('Quich\u00e9',)('Garifuna',)('Miskito',)('Serbo-Croatian',)('Slovene',)('Haiti Creole',)('Romanian',)('Bali',)('Banja',)('Batakki',)('Bugi',)('Javanese',)('Madura',)('Malay',)('Minangkabau',)('Sunda',)('English',)('Irish',)('Assyrian',)('Kurdish',)('Persian',)('Icelandic',)('Hebrew',)('Friuli',)('Sardinian',)('Kazakh',)('Tatar',)('Uzbek',)('Gusii',)('Kalenjin',)('Kamba',)('Kikuyu',)('Luhya',)('Luo',)('Masai',)('Meru',)('Nyika',)('Turkana',)('Kirgiz',)('Tadzhik',)('Kiribati',)('Tuvalu',)('Korean',)('Lao',)('Lao-Soung',)('Mon-khmer',)('Thai',)('Bassa',)('Gio',)('Grebo',)('Mano',)('Mixed Languages',)('Singali',)('Tamil',)('Lithuanian',)('Latvian',)('Gagauzi',)('Dhivehi',)('Marshallese',)('Bambara',)('Senufo and Minianka',)('Songhai',)('Tamashek',)('Maltese',)('Burmese',)('Chin',)('Kachin',)('Karen',)('Kayah',)('Mon',)('Rakhine',)('Shan',)('Bajad',)('Buryat',)('Dariganga',)('Dorbet',)('Mongolian',)('Chuabo',)('Lomwe',)('Makua',)('Marendje',)('Nyanja',)('Ronga',)('Sena',)('Tsonga',)('Tswa',)('Hassaniya',)('Tukulor',)('Zenaga',)('Bhojpuri',)('Marathi',)('Chichewa',)('Ngoni',)('Yao',)('Afrikaans',)('Caprivi',)('Herero',)('Kavango',)('Nama',)('Ovambo',)('Hausa',)('Kanuri',)('Songhai-zerma',)('Sumo',)('Nauru',)('Balochi',)('Brahui',)('Hindko',)('Pashto',)('Punjabi',)('Saraiki',)('Sindhi',)('Urdu',)('Cuna',)('Embera',)('Guaym\u00ed',)('Bicol',)('Cebuano',)('Hiligaynon',)('Ilocano',)('Maguindanao',)('Maranao',)('Pampango',)('Pangasinan',)('Pilipino',)('Waray-waray',)('Palau',)('Philippene Languages',)('Serer',)('Bullom-sherbro',)('Kono-vai',)('Kuranko',)('Limba',)('Mende',)('Temne',)('Nahua',)('Sranantonga',)('Czech and Moravian',)('Ukrainian and Russian',)('Seselwa',)('Gorane',)('Hadjarai',)('Kanem-bornu',)('Mayo-kebbi',)('Ouaddai',)('Tandjile',)('Ane',)('Kaby\u00e9',)('Kotokoli',)('Moba',)('Naudemba',)('Watyi',)('Turkmenian',)('Arabic-French',)('Arabic-French-English',)('Ami',)('Atayal',)('Hakka',)('Mandarin Chinese',)('Min',)('Paiwan',)('Chaga and Pare',)('Gogo',)('Ha',)('Haya',)('Hehet',)('Luguru',)('Makonde',)('Nyakusa',)('Nyamwesi',)('Shambala',)('Acholi',)('Ganda',)('Gisu',)('Kiga',)('Lango',)('Lugbara',)('Nkole',)('Soga',)('Teso',)('Karakalpak',)('Bislama',)('Soqutri',)('Northsotho',)('Southsotho',)('Swazi',)('Venda',)('Xhosa',)('Zulu',)('Bemba',)('Chewa',)('Lozi',)('Nsenga',)('Tongan',)"
      },
      {
        "action": "select t2.language from country as t1 join countrylanguage as t2 on t1.Code = t2.CountryCode where t1.GovernmentForm = \"Republic\" group by t2.language having count(*) > 1;",
        "observation": "('Chokwe',)('Kongo',)('Albaniana',)('Greek',)('Macedonian',)('Armenian',)('Azerbaijani',)('French',)('Swahili',)('Ful',)('Joruba',)('Gurma',)('Mossi',)('Bulgariana',)('Romani',)('Turkish',)('Belorussian',)('Polish',)('Russian',)('Ukrainian',)('Aimar\u00e1',)('Guaran\u00ed',)('Ket\u0161ua',)('Spanish',)('Ndebele',)('San',)('Shona',)('Tswana',)('Sara',)('Akan',)('Kru',)('Malinke',)('Fang',)('Rwanda',)('Teke',)('Mbete',)('Arawakan',)('Caribbean',)('Chibcha',)('Creole English',)('Crioulo',)('Portuguese',)('Chinese',)('German',)('Hungarian',)('Slovak',)('Afar',)('Arabic',)('Somali',)('Creole French',)('Tigrinja',)('Estonian',)('Finnish',)('Hindi',)('Italian',)('Ewe',)('Kpelle',)('Loma',)('Yalunka',)('Diola',)('Soninke',)('Wolof',)('Miskito',)('Serbo-Croatian',)('Slovene',)('Romanian',)('Malay',)('English',)('Kurdish',)('Kazakh',)('Tatar',)('Uzbek',)('Tadzhik',)('Kiribati',)('Tuvalu',)('Tamil',)('Lithuanian',)('Tamashek',)('Lomwe',)('Nyanja',)('Tsonga',)('Afrikaans',)"
      },
      {
        "action": "submit;",
        "observation": "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'submit' at line 1"
      },
      {
        "action": "select t2.language from country as t1 join countrylanguage as t2 on t1.Code = t2.CountryCode where t1.GovernmentForm = \"Republic\" group by t2.language having count(*) > 1;",
        "observation": "('Chokwe',)('Kongo',)('Albaniana',)('Greek',)('Macedonian',)('Armenian',)('Azerbaijani',)('French',)('Swahili',)('Ful',)('Joruba',)('Gurma',)('Mossi',)('Bulgariana',)('Romani',)('Turkish',)('Belorussian',)('Polish',)('Russian',)('Ukrainian',)('Aimar\u00e1',)('Guaran\u00ed',)('Ket\u0161ua',)('Spanish',)('Ndebele',)('San',)('Shona',)('Tswana',)('Sara',)('Akan',)('Kru',)('Malinke',)('Fang',)('Rwanda',)('Teke',)('Mbete',)('Arawakan',)('Caribbean',)('Chibcha',)('Creole English',)('Crioulo',)('Portuguese',)('Chinese',)('German',)('Hungarian',)('Slovak',)('Afar',)('Arabic',)('Somali',)('Creole French',)('Tigrinja',)('Estonian',)('Finnish',)('Hindi',)('Italian',)('Ewe',)('Kpelle',)('Loma',)('Yalunka',)('Diola',)('Soninke',)('Wolof',)('Miskito',)('Serbo-Croatian',)('Slovene',)('Romanian',)('Malay',)('English',)('Kurdish',)('Kazakh',)('Tatar',)('Uzbek',)('Tadzhik',)('Kiribati',)('Tuvalu',)('Tamil',)('Lithuanian',)('Tamashek',)('Lomwe',)('Nyanja',)('Tsonga',)('Afrikaans',)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          "Chokwe"
        ],
        [
          "Kongo"
        ],
        [
          "Albaniana"
        ],
        [
          "Greek"
        ],
        [
          "Macedonian"
        ],
        [
          "Armenian"
        ],
        [
          "Azerbaijani"
        ],
        [
          "French"
        ],
        [
          "Swahili"
        ],
        [
          "Ful"
        ],
        [
          "Joruba"
        ],
        [
          "Gurma"
        ],
        [
          "Mossi"
        ],
        [
          "Bulgariana"
        ],
        [
          "Romani"
        ],
        [
          "Turkish"
        ],
        [
          "Belorussian"
        ],
        [
          "Polish"
        ],
        [
          "Russian"
        ],
        [
          "Ukrainian"
        ],
        [
          "Aimar\u00e1"
        ],
        [
          "Guaran\u00ed"
        ],
        [
          "Ket\u0161ua"
        ],
        [
          "Spanish"
        ],
        [
          "Ndebele"
        ],
        [
          "San"
        ],
        [
          "Shona"
        ],
        [
          "Tswana"
        ],
        [
          "Sara"
        ],
        [
          "Akan"
        ],
        [
          "Kru"
        ],
        [
          "Malinke"
        ],
        [
          "Fang"
        ],
        [
          "Rwanda"
        ],
        [
          "Teke"
        ],
        [
          "Mbete"
        ],
        [
          "Arawakan"
        ],
        [
          "Caribbean"
        ],
        [
          "Chibcha"
        ],
        [
          "Creole English"
        ],
        [
          "Crioulo"
        ],
        [
          "Portuguese"
        ],
        [
          "Chinese"
        ],
        [
          "German"
        ],
        [
          "Hungarian"
        ],
        [
          "Slovak"
        ],
        [
          "Afar"
        ],
        [
          "Arabic"
        ],
        [
          "Somali"
        ],
        [
          "Creole French"
        ],
        [
          "Tigrinja"
        ],
        [
          "Estonian"
        ],
        [
          "Finnish"
        ],
        [
          "Hindi"
        ],
        [
          "Italian"
        ],
        [
          "Ewe"
        ],
        [
          "Kpelle"
        ],
        [
          "Loma"
        ],
        [
          "Yalunka"
        ],
        [
          "Diola"
        ],
        [
          "Soninke"
        ],
        [
          "Wolof"
        ],
        [
          "Miskito"
        ],
        [
          "Serbo-Croatian"
        ],
        [
          "Slovene"
        ],
        [
          "Romanian"
        ],
        [
          "Malay"
        ],
        [
          "English"
        ],
        [
          "Kurdish"
        ],
        [
          "Kazakh"
        ],
        [
          "Tatar"
        ],
        [
          "Uzbek"
        ],
        [
          "Tadzhik"
        ],
        [
          "Kiribati"
        ],
        [
          "Tuvalu"
        ],
        [
          "Tamil"
        ],
        [
          "Lithuanian"
        ],
        [
          "Tamashek"
        ],
        [
          "Lomwe"
        ],
        [
          "Nyanja"
        ],
        [
          "Tsonga"
        ],
        [
          "Afrikaans"
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          "Ambo"
        ],
        [
          "Luchazi"
        ],
        [
          "Luimbe-nganguela"
        ],
        [
          "Luvale"
        ],
        [
          "Mbundu"
        ],
        [
          "Nyaneka-nkhumbi"
        ],
        [
          "Ovimbundu"
        ],
        [
          "Kirundi"
        ],
        [
          "Adja"
        ],
        [
          "Aizo"
        ],
        [
          "Bariba"
        ],
        [
          "Fon"
        ],
        [
          "Somba"
        ],
        [
          "Busansi"
        ],
        [
          "Dagara"
        ],
        [
          "Dyula"
        ],
        [
          "Bengali"
        ],
        [
          "Chakma"
        ],
        [
          "Garo"
        ],
        [
          "Khasi"
        ],
        [
          "Marma"
        ],
        [
          "Santhali"
        ],
        [
          "Tripuri"
        ],
        [
          "Khoekhoe"
        ],
        [
          "Banda"
        ],
        [
          "Gbaya"
        ],
        [
          "Mandjia"
        ],
        [
          "Mbum"
        ],
        [
          "Ngbaka"
        ],
        [
          "Araucan"
        ],
        [
          "Rapa nui"
        ],
        [
          "Gur"
        ],
        [
          "[South]Mande"
        ],
        [
          "Bamileke-bamum"
        ],
        [
          "Duala"
        ],
        [
          "Maka"
        ],
        [
          "Mandara"
        ],
        [
          "Masana"
        ],
        [
          "Tikar"
        ],
        [
          "Boa"
        ],
        [
          "Luba"
        ],
        [
          "Mongo"
        ],
        [
          "Ngala and Bangi"
        ],
        [
          "Rundi"
        ],
        [
          "Zande"
        ],
        [
          "Mboshi"
        ],
        [
          "Punu"
        ],
        [
          "Sango"
        ],
        [
          "Comorian"
        ],
        [
          "Comorian-Arabic"
        ],
        [
          "Comorian-French"
        ],
        [
          "Comorian-madagassi"
        ],
        [
          "Comorian-Swahili"
        ],
        [
          "Czech"
        ],
        [
          "Moravian"
        ],
        [
          "Silesiana"
        ],
        [
          "Berberi"
        ],
        [
          "Sinaberberi"
        ],
        [
          "Bilin"
        ],
        [
          "Hadareb"
        ],
        [
          "Saho"
        ],
        [
          "Tigre"
        ],
        [
          "Amhara"
        ],
        [
          "Gurage"
        ],
        [
          "Oromo"
        ],
        [
          "Sidamo"
        ],
        [
          "Walaita"
        ],
        [
          "Saame"
        ],
        [
          "Swedish"
        ],
        [
          "Fijian"
        ],
        [
          "Mpongwe"
        ],
        [
          "Punu-sira-nzebi"
        ],
        [
          "Abhyasi"
        ],
        [
          "Georgiana"
        ],
        [
          "Osseetti"
        ],
        [
          "Ga-adangme"
        ],
        [
          "Kissi"
        ],
        [
          "Susu"
        ],
        [
          "Balante"
        ],
        [
          "Mandyako"
        ],
        [
          "Bubi"
        ],
        [
          "Cakchiquel"
        ],
        [
          "Kekch\u00ed"
        ],
        [
          "Mam"
        ],
        [
          "Quich\u00e9"
        ],
        [
          "Garifuna"
        ],
        [
          "Haiti Creole"
        ],
        [
          "Bali"
        ],
        [
          "Banja"
        ],
        [
          "Batakki"
        ],
        [
          "Bugi"
        ],
        [
          "Javanese"
        ],
        [
          "Madura"
        ],
        [
          "Minangkabau"
        ],
        [
          "Sunda"
        ],
        [
          "Irish"
        ],
        [
          "Assyrian"
        ],
        [
          "Persian"
        ],
        [
          "Icelandic"
        ],
        [
          "Hebrew"
        ],
        [
          "Friuli"
        ],
        [
          "Sardinian"
        ],
        [
          "Gusii"
        ],
        [
          "Kalenjin"
        ],
        [
          "Kamba"
        ],
        [
          "Kikuyu"
        ],
        [
          "Luhya"
        ],
        [
          "Luo"
        ],
        [
          "Masai"
        ],
        [
          "Meru"
        ],
        [
          "Nyika"
        ],
        [
          "Turkana"
        ],
        [
          "Kirgiz"
        ],
        [
          "Korean"
        ],
        [
          "Lao"
        ],
        [
          "Lao-Soung"
        ],
        [
          "Mon-khmer"
        ],
        [
          "Thai"
        ],
        [
          "Bassa"
        ],
        [
          "Gio"
        ],
        [
          "Grebo"
        ],
        [
          "Mano"
        ],
        [
          "Mixed Languages"
        ],
        [
          "Singali"
        ],
        [
          "Latvian"
        ],
        [
          "Gagauzi"
        ],
        [
          "Dhivehi"
        ],
        [
          "Marshallese"
        ],
        [
          "Bambara"
        ],
        [
          "Senufo and Minianka"
        ],
        [
          "Songhai"
        ],
        [
          "Maltese"
        ],
        [
          "Burmese"
        ],
        [
          "Chin"
        ],
        [
          "Kachin"
        ],
        [
          "Karen"
        ],
        [
          "Kayah"
        ],
        [
          "Mon"
        ],
        [
          "Rakhine"
        ],
        [
          "Shan"
        ],
        [
          "Bajad"
        ],
        [
          "Buryat"
        ],
        [
          "Dariganga"
        ],
        [
          "Dorbet"
        ],
        [
          "Mongolian"
        ],
        [
          "Chuabo"
        ],
        [
          "Makua"
        ],
        [
          "Marendje"
        ],
        [
          "Ronga"
        ],
        [
          "Sena"
        ],
        [
          "Tswa"
        ],
        [
          "Hassaniya"
        ],
        [
          "Tukulor"
        ],
        [
          "Zenaga"
        ],
        [
          "Bhojpuri"
        ],
        [
          "Marathi"
        ],
        [
          "Chichewa"
        ],
        [
          "Ngoni"
        ],
        [
          "Yao"
        ],
        [
          "Caprivi"
        ],
        [
          "Herero"
        ],
        [
          "Kavango"
        ],
        [
          "Nama"
        ],
        [
          "Ovambo"
        ],
        [
          "Hausa"
        ],
        [
          "Kanuri"
        ],
        [
          "Songhai-zerma"
        ],
        [
          "Sumo"
        ],
        [
          "Nauru"
        ],
        [
          "Balochi"
        ],
        [
          "Brahui"
        ],
        [
          "Hindko"
        ],
        [
          "Pashto"
        ],
        [
          "Punjabi"
        ],
        [
          "Saraiki"
        ],
        [
          "Sindhi"
        ],
        [
          "Urdu"
        ],
        [
          "Cuna"
        ],
        [
          "Embera"
        ],
        [
          "Guaym\u00ed"
        ],
        [
          "Bicol"
        ],
        [
          "Cebuano"
        ],
        [
          "Hiligaynon"
        ],
        [
          "Ilocano"
        ],
        [
          "Maguindanao"
        ],
        [
          "Maranao"
        ],
        [
          "Pampango"
        ],
        [
          "Pangasinan"
        ],
        [
          "Pilipino"
        ],
        [
          "Waray-waray"
        ],
        [
          "Palau"
        ],
        [
          "Philippene Languages"
        ],
        [
          "Serer"
        ],
        [
          "Bullom-sherbro"
        ],
        [
          "Kono-vai"
        ],
        [
          "Kuranko"
        ],
        [
          "Limba"
        ],
        [
          "Mende"
        ],
        [
          "Temne"
        ],
        [
          "Nahua"
        ],
        [
          "Sranantonga"
        ],
        [
          "Czech and Moravian"
        ],
        [
          "Ukrainian and Russian"
        ],
        [
          "Seselwa"
        ],
        [
          "Gorane"
        ],
        [
          "Hadjarai"
        ],
        [
          "Kanem-bornu"
        ],
        [
          "Mayo-kebbi"
        ],
        [
          "Ouaddai"
        ],
        [
          "Tandjile"
        ],
        [
          "Ane"
        ],
        [
          "Kaby\u00e9"
        ],
        [
          "Kotokoli"
        ],
        [
          "Moba"
        ],
        [
          "Naudemba"
        ],
        [
          "Watyi"
        ],
        [
          "Turkmenian"
        ],
        [
          "Arabic-French"
        ],
        [
          "Arabic-French-English"
        ],
        [
          "Ami"
        ],
        [
          "Atayal"
        ],
        [
          "Hakka"
        ],
        [
          "Mandarin Chinese"
        ],
        [
          "Min"
        ],
        [
          "Paiwan"
        ],
        [
          "Chaga and Pare"
        ],
        [
          "Gogo"
        ],
        [
          "Ha"
        ],
        [
          "Haya"
        ],
        [
          "Hehet"
        ],
        [
          "Luguru"
        ],
        [
          "Makonde"
        ],
        [
          "Nyakusa"
        ],
        [
          "Nyamwesi"
        ],
        [
          "Shambala"
        ],
        [
          "Acholi"
        ],
        [
          "Ganda"
        ],
        [
          "Gisu"
        ],
        [
          "Kiga"
        ],
        [
          "Lango"
        ],
        [
          "Lugbara"
        ],
        [
          "Nkole"
        ],
        [
          "Soga"
        ],
        [
          "Teso"
        ],
        [
          "Karakalpak"
        ],
        [
          "Bislama"
        ],
        [
          "Soqutri"
        ],
        [
          "Northsotho"
        ],
        [
          "Southsotho"
        ],
        [
          "Swazi"
        ],
        [
          "Venda"
        ],
        [
          "Xhosa"
        ],
        [
          "Zulu"
        ],
        [
          "Bemba"
        ],
        [
          "Chewa"
        ],
        [
          "Lozi"
        ],
        [
          "Nsenga"
        ],
        [
          "Tongan"
        ]
      ],
      "reward": 0.0
    }
  },
  "953": {
    "environment": "ic_sql",
    "query_idx": 953,
    "query": "find the id, name and age for visitors who visited some museums more than once.",
    "gold": "SELECT t1.id , t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id GROUP BY t1.id HAVING count(*) > 1",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('museum',)('visit',)('visitor',)"
      },
      {
        "action": "desc museum;",
        "observation": "('Museum_ID', 'int', 'NO', 'PRI', None, 'auto_increment')('Name', 'text', 'YES', '', None, '')('Num_of_Staff', 'int', 'YES', '', None, '')('Open_Year', 'text', 'YES', '', None, '')"
      },
      {
        "action": "desc visit;",
        "observation": "('Museum_ID', 'int', 'NO', 'PRI', None, '')('visitor_ID', 'int', 'NO', 'PRI', None, '')('Num_of_Ticket', 'int', 'YES', '', None, '')('Total_spent', 'double', 'YES', '', None, '')"
      },
      {
        "action": "desc visitor",
        "observation": "('ID', 'int', 'NO', 'PRI', None, 'auto_increment')('Name', 'text', 'YES', '', None, '')('Level_of_membership', 'int', 'YES', '', None, '')('Age', 'int', 'YES', '', None, '')"
      },
      {
        "action": "select * from visitor as t1 join visit as t2 on t1.id = t2.visitor_id;",
        "observation": "(3, 'Arjen Robben', 1, 27, 4, 3, 10, 320.44)(3, 'Arjen Robben', 1, 27, 2, 3, 24, 209.98)(5, 'Fernando Gago', 6, 36, 2, 5, 4, 89.98)(5, 'Fernando Gago', 6, 36, 1, 5, 20, 320.14)(6, 'Rafael van der Vaart', 1, 25, 8, 6, 2, 19.98)(6, 'Rafael van der Vaart', 1, 25, 4, 6, 3, 20.44)"
      },
      {
        "action": "select * from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id having count(*) > 1;",
        "observation": "Error executing query: Expression #5 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'museum_visit.t2.Museum_ID' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by"
      },
      {
        "action": "select t1.id  from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id having count(*) > 1;",
        "observation": "(3,)(5,)(6,)"
      },
      {
        "action": "select t1.id, t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id having count(*) > 1;",
        "observation": "(3, 'Arjen Robben', 27)(5, 'Fernando Gago', 36)(6, 'Rafael van der Vaart', 25)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          3,
          "Arjen Robben",
          27
        ],
        [
          5,
          "Fernando Gago",
          36
        ],
        [
          6,
          "Rafael van der Vaart",
          25
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          3,
          "Arjen Robben",
          27
        ],
        [
          5,
          "Fernando Gago",
          36
        ],
        [
          6,
          "Rafael van der Vaart",
          25
        ]
      ],
      "reward": 1.0
    }
  },
  "980": {
    "environment": "ic_sql",
    "query_idx": 980,
    "query": "Find the kind of program which most number of students are enrolled in?",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('addresses',)('courses',)('degree_programs',)('departments',)('sections',)('semesters',)('student_enrolment',)('student_enrolment_courses',)('students',)('transcript_contents',)('transcripts',)"
      },
      {
        "action": "desc degree_programs;",
        "observation": "('degree_program_id', 'int', 'NO', 'PRI', None, 'auto_increment')('department_id', 'int', 'NO', 'MUL', None, '')('degree_summary_name', 'varchar(255)', 'YES', '', None, '')('degree_summary_description', 'varchar(255)', 'YES', '', None, '')('other_details', 'varchar(255)', 'YES', '', None, '')"
      },
      {
        "action": "desc student_enrolment;",
        "observation": "('student_enrolment_id', 'int', 'NO', 'PRI', None, 'auto_increment')('degree_program_id', 'int', 'NO', 'MUL', None, '')('semester_id', 'int', 'NO', 'MUL', None, '')('student_id', 'int', 'NO', 'MUL', None, '')('other_details', 'varchar(255)', 'YES', '', None, '')"
      },
      {
        "action": "select * from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name;",
        "observation": "Error executing query: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'student_transcripts_tracking.t1.degree_program_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by"
      },
      {
        "action": "select t1.degree_program_id from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name;",
        "observation": "Error executing query: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'student_transcripts_tracking.t1.degree_program_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by"
      },
      {
        "action": "select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name;",
        "observation": "('Master',)('Bachelor',)"
      },
      {
        "action": "select count(*), degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name group by degree_summary_name;",
        "observation": "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'group by degree_summary_name' at line 1"
      },
      {
        "action": "select count(*), degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name;",
        "observation": "(7, 'Master')(8, 'Bachelor')"
      },
      {
        "action": "select degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name where degree_summary_name = 'Bachelor';",
        "observation": "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where degree_summary_name = 'Bachelor'' at line 1"
      },
      {
        "action": "select degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name where t1.degree_summary_name = 'Bachelor';",
        "observation": "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where t1.degree_summary_name = 'Bachelor'' at line 1"
      },
      {
        "action": "select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name where t1.degree_summary_name = 'Bachelor';",
        "observation": "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where t1.degree_summary_name = 'Bachelor'' at line 1"
      },
      {
        "action": "select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name;",
        "observation": "('Master',)('Bachelor',)"
      },
      {
        "action": "select last(t1.degree_summary_name) from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name;",
        "observation": "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(t1.degree_summary_name) from degree_programs as t1 join student_enrolment as t2' at line 1"
      },
      {
        "action": "select * from degree_programs;",
        "observation": "(1, 13, 'Master', 'architecto', None)(2, 2, 'Master', 'cumque', None)(3, 13, 'Master', 'placeat', None)(4, 8, 'Bachelor', 'unde', None)(5, 11, 'Master', 'officiis', None)(6, 8, 'Bachelor', 'aperiam', None)(7, 14, 'Bachelor', 'assumenda', None)(8, 15, 'Master', 'earum', None)(9, 3, 'Bachelor', 'voluptas', None)(10, 8, 'Bachelor', 'aut', None)(11, 14, 'Bachelor', 'aut', None)(12, 4, 'Master', 'qui', None)(13, 7, 'Bachelor', 'quam', None)(14, 2, 'PHD', 'et', None)(15, 12, 'PHD', 'esse', None)"
      },
      {
        "action": "desc degree_programs;",
        "observation": "('degree_program_id', 'int', 'NO', 'PRI', None, 'auto_increment')('department_id', 'int', 'NO', 'MUL', None, '')('degree_summary_name', 'varchar(255)', 'YES', '', None, '')('degree_summary_description', 'varchar(255)', 'YES', '', None, '')('other_details', 'varchar(255)', 'YES', '', None, '')"
      },
      {
        "action": "select distinct degree_summary_name from degree_programs;",
        "observation": "('Master',)('Bachelor',)('PHD',)"
      },
      {
        "action": "select distinct degree_summary_name from degree_programs where degree_summary_name = 'Bachelor';",
        "observation": "('Bachelor',)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          "Bachelor"
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          "Bachelor"
        ]
      ],
      "reward": 1.0
    }
  },
  "175": {
    "environment": "ic_sql",
    "query_idx": 175,
    "query": "What are each professional's first name and description of the treatment they have performed?",
    "gold": "SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('breeds',)('charges',)('dogs',)('owners',)('professionals',)('sizes',)('treatment_types',)('treatments',)"
      },
      {
        "action": "desc professionals;",
        "observation": "('professional_id', 'int', 'NO', 'PRI', None, 'auto_increment')('role_code', 'varchar(10)', 'NO', '', None, '')('first_name', 'varchar(50)', 'YES', '', None, '')('street', 'varchar(50)', 'YES', '', None, '')('city', 'varchar(50)', 'YES', '', None, '')('state', 'varchar(20)', 'YES', '', None, '')('zip_code', 'varchar(20)', 'YES', '', None, '')('last_name', 'varchar(50)', 'YES', '', None, '')('email_address', 'varchar(50)', 'YES', '', None, '')('home_phone', 'varchar(20)', 'YES', '', None, '')('cell_number', 'varchar(20)', 'YES', '', None, '')"
      },
      {
        "action": "desc treatments;",
        "observation": "('treatment_id', 'int', 'NO', 'PRI', None, 'auto_increment')('dog_id', 'int', 'NO', 'MUL', None, '')('professional_id', 'int', 'NO', 'MUL', None, '')('treatment_type_code', 'varchar(10)', 'NO', 'MUL', None, '')('date_of_treatment', 'datetime', 'YES', '', None, '')('cost_of_treatment', 'decimal(19,4)', 'YES', '', None, '')"
      },
      {
        "action": "desc treatment_types;",
        "observation": "('treatment_type_code', 'varchar(10)', 'NO', 'PRI', None, '')('treatment_type_description', 'varchar(80)', 'YES', '', None, '')"
      },
      {
        "action": "select * from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code;",
        "observation": "(1, 14, 9, 'WALK', datetime.datetime(2018, 3, 19, 4, 39, 54), Decimal('567.0000'), 'WALK', 'Take for a Walk')(2, 4, 10, 'VAC', datetime.datetime(2018, 3, 15, 20, 25, 34), Decimal('147.0000'), 'VAC', 'Vaccination')(3, 14, 4, 'EXAM', datetime.datetime(2018, 3, 8, 5, 26, 23), Decimal('429.0000'), 'EXAM', 'Physical examination')(4, 2, 8, 'VAC', datetime.datetime(2018, 3, 1, 4, 14, 46), Decimal('266.0000'), 'VAC', 'Vaccination')(5, 12, 14, 'VAC', datetime.datetime(2018, 3, 23, 13, 52, 10), Decimal('668.0000'), 'VAC', 'Vaccination')(6, 10, 4, 'EXAM', datetime.datetime(2018, 3, 11, 4, 23, 15), Decimal('313.0000'), 'EXAM', 'Physical examination')(7, 15, 14, 'EXAM', datetime.datetime(2018, 3, 10, 11, 45, 58), Decimal('852.0000'), 'EXAM', 'Physical examination')(8, 2, 6, 'EXAM', datetime.datetime(2018, 3, 24, 22, 25, 58), Decimal('407.0000'), 'EXAM', 'Physical examination')(9, 14, 10, 'WALK', datetime.datetime(2018, 3, 14, 19, 10, 40), Decimal('139.0000'), 'WALK', 'Take for a Walk')(10, 10, 7, 'WALK', datetime.datetime(2018, 2, 28, 17, 9, 43), Decimal('681.0000'), 'WALK', 'Take for a Walk')(11, 15, 5, 'VAC', datetime.datetime(2018, 3, 13, 12, 22, 58), Decimal('514.0000'), 'VAC', 'Vaccination')(12, 13, 9, 'EXAM', datetime.datetime(2018, 3, 16, 10, 27, 36), Decimal('428.0000'), 'EXAM', 'Physical examination')(13, 7, 8, 'VAC', datetime.datetime(2018, 2, 26, 9, 8, 53), Decimal('945.0000'), 'VAC', 'Vaccination')(14, 10, 9, 'WALK', datetime.datetime(2018, 3, 4, 20, 33, 43), Decimal('349.0000'), 'WALK', 'Take for a Walk')(15, 1, 6, 'WALK', datetime.datetime(2018, 3, 15, 19, 10, 2), Decimal('656.0000'), 'WALK', 'Take for a Walk')"
      },
      {
        "action": "select * from professionals as table1 join treatments as table2 on table1.professional_id = table2.professional_id;",
        "observation": "(4, 'Veterenari', 'Vernice', '72532 Hane Course\\nLake Berylland, ND 95283', 'Domenickton', 'Mississippi', '02281', 'Tillman', 'lourdes.lowe@example.net', '312.216.3352', '00230569697', 3, 14, 4, 'EXAM', datetime.datetime(2018, 3, 8, 5, 26, 23), Decimal('429.0000'))(4, 'Veterenari', 'Vernice', '72532 Hane Course\\nLake Berylland, ND 95283', 'Domenickton', 'Mississippi', '02281', 'Tillman', 'lourdes.lowe@example.net', '312.216.3352', '00230569697', 6, 10, 4, 'EXAM', datetime.datetime(2018, 3, 11, 4, 23, 15), Decimal('313.0000'))(5, 'Veterenari', 'Danny', '188 VonRueden Tunnel Suite 630\\nNorth Macibury, NV ', 'New Laurytown', 'Hawaii', '84515', 'Considine', 'mekhi.little@example.org', '1-609-566-2752x25197', '011.193.9081x3186', 11, 15, 5, 'VAC', datetime.datetime(2018, 3, 13, 12, 22, 58), Decimal('514.0000'))(6, 'Veterenari', 'Ruben', '17286 Waters Green\\nEast Bernadinefort, CA 89573', 'Baileymouth', 'NewMexico', '52476', \"O'Reilly\", 'jacynthe.mclaughlin@example.net', '+43(5)1132733868', '139-321-7313', 8, 2, 6, 'EXAM', datetime.datetime(2018, 3, 24, 22, 25, 58), Decimal('407.0000'))(6, 'Veterenari', 'Ruben', '17286 Waters Green\\nEast Bernadinefort, CA 89573', 'Baileymouth', 'NewMexico', '52476', \"O'Reilly\", 'jacynthe.mclaughlin@example.net', '+43(5)1132733868', '139-321-7313', 15, 1, 6, 'WALK', datetime.datetime(2018, 3, 15, 19, 10, 2), Decimal('656.0000'))(7, 'Veterenari', 'Velva', '44234 Marvin Shoals Suite 659\\nNorth Frances, AL 23', 'McLaughlinfort', 'NorthCarolina', '67980', 'Hayes', 'lambert62@example.org', '022.529.0550x1319', '499-434-0215x1628', 10, 10, 7, 'WALK', datetime.datetime(2018, 2, 28, 17, 9, 43), Decimal('681.0000'))(8, 'Employee', 'Karley', '36895 Eli Ferry\\nPort Marcelle, FL 45712', 'Kirastad', 'Indiana', '33020', 'Hyatt', 'goyette.roosevelt@example.net', '891.475.2256', '328.842.3792', 4, 2, 8, 'VAC', datetime.datetime(2018, 3, 1, 4, 14, 46), Decimal('266.0000'))(8, 'Employee', 'Karley', '36895 Eli Ferry\\nPort Marcelle, FL 45712', 'Kirastad', 'Indiana', '33020', 'Hyatt', 'goyette.roosevelt@example.net', '891.475.2256', '328.842.3792', 13, 7, 8, 'VAC', datetime.datetime(2018, 2, 26, 9, 8, 53), Decimal('945.0000'))(9, 'Veterenari', 'Monte', '07073 Brenna Ways Suite 089\\nLowehaven, KY 93275-96', 'South Rockyport', 'SouthCarolina', '80775', 'Kshlerin', 'schneider.kathryne@example.org', '320-508-6023', '962-983-8109x3509', 1, 14, 9, 'WALK', datetime.datetime(2018, 3, 19, 4, 39, 54), Decimal('567.0000'))(9, 'Veterenari', 'Monte', '07073 Brenna Ways Suite 089\\nLowehaven, KY 93275-96', 'South Rockyport', 'SouthCarolina', '80775', 'Kshlerin', 'schneider.kathryne@example.org', '320-508-6023', '962-983-8109x3509', 12, 13, 9, 'EXAM', datetime.datetime(2018, 3, 16, 10, 27, 36), Decimal('428.0000'))(9, 'Veterenari', 'Monte', '07073 Brenna Ways Suite 089\\nLowehaven, KY 93275-96', 'South Rockyport', 'SouthCarolina', '80775', 'Kshlerin', 'schneider.kathryne@example.org', '320-508-6023', '962-983-8109x3509', 14, 10, 9, 'WALK', datetime.datetime(2018, 3, 4, 20, 33, 43), Decimal('349.0000'))(10, 'Employee', 'Domenica', '7284 Torphy Flats Apt. 610\\nDiannaburgh, SC 78560', 'New Maryjane', 'California', '54312', 'Jacobs', 'jerrod.bahringer@example.org', '(230)338-3342x585', '461-801-2600', 2, 4, 10, 'VAC', datetime.datetime(2018, 3, 15, 20, 25, 34), Decimal('147.0000'))(10, 'Employee', 'Domenica', '7284 Torphy Flats Apt. 610\\nDiannaburgh, SC 78560', 'New Maryjane', 'California', '54312', 'Jacobs', 'jerrod.bahringer@example.org', '(230)338-3342x585', '461-801-2600', 9, 14, 10, 'WALK', datetime.datetime(2018, 3, 14, 19, 10, 40), Decimal('139.0000'))(14, 'Employee', 'Sigurd', '390 Bryce Drive\\nNorth Dock, LA 65357-7228', 'East Ila', 'Connecticut', '41215', 'Frami', 'cole.margarita@example.org', '971.048.3763x9404', '1-185-137-1945x409', 5, 12, 14, 'VAC', datetime.datetime(2018, 3, 23, 13, 52, 10), Decimal('668.0000'))(14, 'Employee', 'Sigurd', '390 Bryce Drive\\nNorth Dock, LA 65357-7228', 'East Ila', 'Connecticut', '41215', 'Frami', 'cole.margarita@example.org', '971.048.3763x9404', '1-185-137-1945x409', 7, 15, 14, 'EXAM', datetime.datetime(2018, 3, 10, 11, 45, 58), Decimal('852.0000'))"
      },
      {
        "action": "select distinct t1.first_name, t3.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id join treatment_types as t3 on t2.treatment_type_code = t3.treatment_type_code;",
        "observation": "('Vernice', 'Physical examination')('Sigurd', 'Physical examination')('Ruben', 'Physical examination')('Monte', 'Physical examination')('Domenica', 'Vaccination')('Karley', 'Vaccination')('Sigurd', 'Vaccination')('Danny', 'Vaccination')('Monte', 'Take for a Walk')('Domenica', 'Take for a Walk')('Velva', 'Take for a Walk')('Ruben', 'Take for a Walk')"
      }
    ],
    "info": {
      "agent_obs": [
        [
          "Vernice",
          "Physical examination"
        ],
        [
          "Sigurd",
          "Physical examination"
        ],
        [
          "Ruben",
          "Physical examination"
        ],
        [
          "Monte",
          "Physical examination"
        ],
        [
          "Domenica",
          "Vaccination"
        ],
        [
          "Karley",
          "Vaccination"
        ],
        [
          "Sigurd",
          "Vaccination"
        ],
        [
          "Danny",
          "Vaccination"
        ],
        [
          "Monte",
          "Take for a Walk"
        ],
        [
          "Domenica",
          "Take for a Walk"
        ],
        [
          "Velva",
          "Take for a Walk"
        ],
        [
          "Ruben",
          "Take for a Walk"
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          "Vernice",
          "Physical examination"
        ],
        [
          "Sigurd",
          "Physical examination"
        ],
        [
          "Ruben",
          "Physical examination"
        ],
        [
          "Monte",
          "Physical examination"
        ],
        [
          "Domenica",
          "Vaccination"
        ],
        [
          "Karley",
          "Vaccination"
        ],
        [
          "Sigurd",
          "Vaccination"
        ],
        [
          "Danny",
          "Vaccination"
        ],
        [
          "Monte",
          "Take for a Walk"
        ],
        [
          "Domenica",
          "Take for a Walk"
        ],
        [
          "Velva",
          "Take for a Walk"
        ],
        [
          "Ruben",
          "Take for a Walk"
        ]
      ],
      "reward": 1.0
    }
  },
  "221": {
    "environment": "ic_sql",
    "query_idx": 221,
    "query": "What is the most populace city that speaks English?",
    "gold": "SELECT T1.Name , T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('city',)('country',)('countrylanguage',)"
      },
      {
        "action": "desc country;",
        "observation": "('Code', 'char(3)', 'NO', 'PRI', '', '')('Name', 'char(52)', 'NO', '', '', '')('Continent', 'text', 'NO', '', None, '')('Region', 'char(26)', 'NO', '', '', '')('SurfaceArea', 'float(10,2)', 'NO', '', '0.00', '')('IndepYear', 'int', 'YES', '', None, '')('Population', 'int', 'NO', '', '0', '')('LifeExpectancy', 'float(3,1)', 'YES', '', None, '')('GNP', 'float(10,2)', 'YES', '', None, '')('GNPOld', 'float(10,2)', 'YES', '', None, '')('LocalName', 'char(45)', 'NO', '', '', '')('GovernmentForm', 'char(45)', 'NO', '', '', '')('HeadOfState', 'char(60)', 'YES', '', None, '')('Capital', 'int', 'YES', '', None, '')('Code2', 'char(2)', 'NO', '', '', '')"
      },
      {
        "action": "desc city;",
        "observation": "('ID', 'int', 'NO', 'PRI', None, 'auto_increment')('Name', 'char(35)', 'NO', '', '', '')('CountryCode', 'char(3)', 'NO', 'MUL', '', '')('District', 'char(20)', 'NO', '', '', '')('Population', 'int', 'NO', '', '0', '')"
      },
      {
        "action": "desc countrylanguage",
        "observation": "('CountryCode', 'char(3)', 'NO', 'PRI', '', '')('Language', 'char(30)', 'NO', 'PRI', '', '')('IsOfficial', 'text', 'NO', '', None, '')('Percentage', 'float(4,1)', 'NO', '', '0.0', '')"
      },
      {
        "action": "select Name, Population from city ORDER BY population DESC;",
        "observation": "('Mumbai (Bombay)', 10500000)('Seoul', 9981619)('S\u00e3o Paulo', 9968485)('Shanghai', 9696300)('Jakarta', 9604900)('Karachi', 9269265)('Istanbul', 8787958)('Ciudad de M\u00e9xico', 8591309)('Moscow', 8389200)('New York', 8008278)('Tokyo', 7980230)('Peking', 7472000)('London', 7285000)('Delhi', 7206704)('Cairo', 6789479)('Teheran', 6758845)('Lima', 6464693)('Chongqing', 6351600)('Bangkok', 6320174)('Santaf\u00e9 de Bogot\u00e1', 6260862)('Rio de Janeiro', 5598953)('Tianjin', 5286800)('Kinshasa', 5064000)('Lahore', 5063499)('Santiago de Chile', 4703954)('St Petersburg', 4694000)('Calcutta [Kolkata]', 4399819)('Wuhan', 4344600)('Baghdad', 4336000)('Harbin', 4289800)('Shenyang', 4265200)('Kanton [Guangzhou]', 4256300)('Singapore', 4017733)('Ho Chi Minh City', 3980000)('Chennai (Madras)', 3841396)('Pusan', 3804522)('Los Angeles', 3694820)('Dhaka', 3612850)('Berlin', 3386667)('Rangoon (Yangon)', 3361700)('Chengdu', 3361500)('Jokohama [Yokohama]', 3339594)('Alexandria', 3328196)('Riyadh', 3324000)('Sydney', 3276207)('Ankara', 3038159)('Buenos Aires', 2982146)('Hyderabad', 2964638)('Casablanca', 2940623)('Chicago', 2896016)('Madrid', 2879052)('Ahmedabad', 2876710)('Nanking [Nanjing]', 2870300)('Melbourne', 2865329)('Changchun', 2812000)('Xi\u00b4an', 2761400)('Dalian', 2697000)('Surabaya', 2663820)('Bangalore', 2660088)('Roma', 2643581)('Taipei', 2641312)('Kyiv', 2624000)('Qingdao', 2596000)('Osaka', 2595674)('Inchon', 2559424)('Taegu', 2548568)('Abidjan', 2500000)('Addis Abeba', 2495000)('Pyongyang', 2484000)('Bandung', 2429000)('Cape Town', 2352121)('Salvador', 2302832)('Nairobi', 2290000)('Jinan', 2278100)('La Habana', 2256000)('Giza', 2221868)('Hangzhou', 2190500)('Quezon', 2173831)('Alger', 2168000)('Nagoya', 2154376)('Belo Horizonte', 2139125)('Izmir', 2130359)('Paris', 2125246)('Toskent', 2117500)('Zhengzhou', 2107200)('Fortaleza', 2097757)('Cali', 2077386)('Guayaquil', 2070040)('Jedda', 2046300)('Shijiazhuang', 2041500)('Luanda', 2022000)('Bucuresti', 2016131)('Kowloon and New Kowloon', 1987996)('Faisalabad', 1977246)('Caracas', 1975294)('Bras\u00edlia', 1969868)('Taiyuan', 1968400)('Houston', 1953631)('Mashhad', 1887405)('Kanpur', 1874409)('Medell\u00edn', 1861265)('Medan', 1843919)('Kunming', 1829500)('Budapest', 1811552)('Changsha', 1809800)('Sapporo', 1790886)('Baku', 1787800)('Kabul', 1780000)('Dar es Salaam', 1747000)('Hamburg', 1704735)('Nanchang', 1691600)('Tripoli', 1682000)('Minsk', 1674000)('Guadalajara', 1647720)('Nagpur', 1624752)('Ecatepec de Morelos', 1620303)('Lucknow', 1619115)('Warszawa', 1615369)('Santo Domingo de Guzm\u00e1n', 1609966)('Wien', 1608144)('Fuzhou', 1593800)('Curitiba', 1584232)('Manila', 1581082)('Quito', 1573458)('Pune', 1566651)('Lanzhou', 1565800)('Lagos', 1518000)('Philadelphia', 1517550)('Barcelona', 1503451)('Harkova [Harkiv]', 1500000)('Surat', 1498817)('Kaohsiung', 1475505)('Guiyang', 1465200)('Kioto', 1461974)('Jaipur', 1458483)('Douala', 1448300)('Ibadan', 1432000)('Taejon', 1425835)('Kobe', 1425139)('Hanoi', 1410000)('Harare', 1410000)('Rawalpindi', 1406214)('Novosibirsk', 1398800)('Chittagong', 1392860)('Recife', 1378087)('Yaound\u00e9', 1372800)('Ningbo', 1371200)('Hefei', 1369100)('Kwangju', 1368341)('Nizni Novgorod', 1357000)('Damascus', 1347000)('Puebla', 1346176)('Phoenix', 1321045)('Lusaka', 1317000)('Porto Alegre', 1314032)('Victoria', 1312637)('Urumt\u0161i [\u00dcr\u00fcmqi]', 1310100)('Fukuoka', 1308379)('Maraca\u00edbo', 1304776)('Milano', 1300977)('Kuala Lumpur', 1297526)('Brisbane', 1291117)('Omdurman', 1271403)('La Matanza', 1266461)('Jekaterinburg', 1266300)('Esfahan', 1266072)('Aleppo', 1261983)('Manaus', 1255049)('Yerevan', 1248700)('Montevideo', 1236000)('Tbilisi', 1235200)('Nezahualc\u00f3yotl', 1224924)('San Diego', 1223400)('Barranquilla', 1223260)('Palembang', 1222764)('Ju\u00e1rez', 1217818)('Kawasaki', 1217359)('Tijuana', 1212232)('Beograd', 1204000)('Anshan', 1200000)('Fushun', 1200000)('Tangerang', 1198300)('Munich [M\u00fcnchen]', 1194560)('Tabriz', 1191043)('Dallas', 1188580)('Bel\u00e9m', 1186926)('Multan', 1182441)('Praha', 1181126)('Kalookan', 1177604)('Nanning', 1161800)('C\u00f3rdoba', 1157507)('Samara', 1156100)('Hyderabad', 1151274)('Omsk', 1148900)('Davao', 1147116)('San Antonio', 1144646)('Zibo', 1140000)('Le\u00f3n', 1133576)('Adana', 1131198)('Almaty', 1129400)('Gujranwala', 1124749)('Sofija', 1122302)('Hiroshima', 1119117)('Monterrey', 1108499)('Semarang', 1104405)('Dnipropetrovsk', 1103000)('Kazan', 1101000)('Beirut', 1100000)('Perth', 1096829)('Guarulhos', 1095874)('Bursa', 1095842)('Indore', 1091674)('Ufa', 1091200)('Conakry', 1090610)('Ulsan', 1084891)('T\u0161eljabinsk', 1083200)('Accra', 1070000)('Qiqihar', 1070000)('Bhopal', 1062771)('Ujung Pandang', 1060257)('Goi\u00e2nia', 1056330)('Shiraz', 1053025)('Donetsk', 1050000)('Ludhiana', 1042740)('Jilin', 1040000)('Tangshan', 1040000)('Vadodara (Baroda)', 1031346)('Maputo', 1018938)('Montr\u00e9al', 1016376)('Kitakyushu', 1016264)('Kalyan', 1014557)('Birmingham', 1013000)('Rostov-na-Donu', 1012700)('Odesa', 1011000)('Perm', 1009700)('Napoli', 1002619)('Zapopan', 1002239)('Amman', 1000000)('Mogadishu', 997000)('Volgograd', 993400)('Sendai', 989975)('Peshawar', 988005)('Baotou', 980000)('Adelaide', 978100)('Madurai', 977856)('Mekka', 965700)('K\u00f6ln', 962507)('Managua', 959000)('Detroit', 951270)('Shenzhen', 950500)('Haora (Howrah)', 950435)('Campinas', 950043)('Brazzaville', 950000)('Khartum', 947483)('Karaj', 940968)('Taichung', 940589)('Santa Cruz de la Sierra', 935361)('Varanasi (Benares)', 929270)('Patna', 917243)('Hohhot', 916700)('Rosario', 907718)('Voronez', 907700)('Soweto', 904165)('Torino', 903705)('San Jose', 894943)('Srinagar', 892506)('Agra', 891790)('Kampala', 890800)('Mandalay', 885300)('Port-au-Prince', 884472)('Mosul', 879000)('Barquisimeto', 877239)('Krasnojarsk', 875500)('Saratov', 874000)('Shubra al-Khayma', 870716)('S\u00e3o Gon\u00e7alo', 869254)('Songnam', 869094)('Chiba', 863930)('Nova Igua\u00e7u', 862225)('Naucalpan de Ju\u00e1rez', 857511)('Pikine', 855287)('Lubumbashi', 851381)('Monrovia', 850000)('Freetown', 850000)('Zaporizzja', 848000)('Handan', 840000)('S\u00e3o Lu\u00eds', 837588)('Wuxi', 830000)('Ouagadougou', 824000)('Ciudad de Guatemala', 823301)('Coimbatore', 816321)('Tegucigalpa', 813900)('Xuzhou', 810000)('Bamako', 809552)('Mbuji-Mayi', 806475)('Cartagena', 805757)('Ahvaz', 804980)('Bengasi', 804000)('Thane (Thana)', 803389)('L\u00f3dz', 800110)('Datong', 800000)('Yichun', 800000)('Marseille', 798430)('Sakai', 797735)('Valencia', 794246)('Allahabad', 792858)('Indianapolis', 791926)('Gaziantep', 789056)('Lviv', 788000)('Macei\u00f3', 786288)('Dakar', 785071)('Haiphong', 783133)('Puchon', 779412)('Qom', 777677)('San Francisco', 776733)('Ulan Bator', 773700)('Athenai', 772072)('Benxi', 770000)('Calgary', 768082)('Mexicali', 764902)('Riga', 764328)('Arequipa', 762000)('Luoyang', 760000)('La Paz', 758141)('Johannesburg', 756653)('Suwon', 755550)('Meerut', 753778)('Port Elizabeth', 752319)('Vishakhapatnam', 752037)('Stockholm', 750348)('Duque de Caxias', 746758)('Culiac\u00e1n', 744859)('Jabalpur', 741927)('Valencia', 739412)('Krak\u00f3w', 738150)('Jacksonville', 735167)('Amsterdam', 731200)('Ogbomosho', 730000)('Tainan', 728060)('S\u00e3o Bernardo do Campo', 723132)('Toljatti', 722900)('Acapulco de Ju\u00e1rez', 721011)('Tlalnepantla de Baz', 720755)('Chisinau', 719900)('Cebu', 718821)('Malang', 716862)('Columbus', 711470)('Suzhou', 710000)('Hamhung', 709730)('Amritsar', 708835)('Zagreb', 706770)('Faridabad', 703592)('M\u00e9rida', 703324)('Kryvyi Rig', 703000)('Sevilla', 701927)('Vijayawada', 701827)('Sharq al-Nil', 700887)('Xining', 700200)('Huainan', 700000)('Kermanshah', 692986)('Teresina', 691942)('Gwalior', 690765)('Tunis', 690600)('Natal', 688955)('Toronto', 688275)('Jixi', 683885)('Palermo', 683794)('Bandar Lampung', 680332)('Antananarivo', 675669)('Kano', 674100)('Chihuahua', 670208)('San Luis Potos\u00ed', 669353)('Dubai', 669181)('Guadalupe', 668780)('Uljanovsk', 667400)('Nouakchott', 667300)('Jodhpur', 666279)('Toluca', 665617)('Ciudad Guayana', 663713)('Khulna', 663340)('Daqing', 660000)('Osasco', 659604)('Pretoria', 658630)('Nashik (Nasik)', 656925)('Kumamoto', 656734)('Austin', 656562)('Izevsk', 652800)('Trujillo', 652000)('Baltimore', 651154)('Memphis', 650100)('Campo Grande', 649593)('Hubli-Dharwad', 648298)('Colombo', 645000)('Bekasi', 644300)('Frankfurt am Main', 643821)('Aguascalientes', 643360)('Fuxin', 640000)('Quer\u00e9taro', 639839)('Krasnodar', 639000)('Wroclaw', 636765)('Genova', 636104)('Inanda', 634065)('Jerusalem', 633700)('Santo Andr\u00e9', 630073)('Konya', 628364)('Amoy [Xiamen]', 627500)('Okayama', 624269)('Rabat', 623457)('North York', 622632)('Lomas de Zamora', 622013)('Marrakech', 621914)('Bulawayo', 621742)('Morelia', 619958)('Glasgow', 619680)('Winnipeg', 618477)('Jaroslavl', 616700)('Edmonton', 616306)('Liuzhou', 610000)('Oran', 609823)('Habarovsk', 609400)('Hermosillo', 608697)('Medina', 608300)('Mississauga', 608072)('C\u00facuta', 606932)('Vladivostok', 606200)('Solapur (Sholapur)', 604215)('Zaragoza', 603367)('Zamboanga', 601794)('Essen', 599515)('Ranchi', 599306)('Milwaukee', 596974)('Scarborough', 594501)('Irkutsk', 593700)('Rotterdam', 593321)('Kathmandu', 591835)('Anyang', 591106)('Dortmund', 590213)('Bishkek', 589400)('Boston', 589141)('Mersin (I\u00e7el)', 587212)('Bareilly', 587211)('Sagamihara', 586300)('Guwahati (Gauhati)', 584342)('Jo\u00e3o Pessoa', 584029)('Chongjin', 582480)('Stuttgart', 582443)('Barnaul', 580100)('Shantou', 580000)('Vilnius', 577969)('Saltillo', 577352)('Poznan', 576899)('Shambajinagar (Aurangabad)', 573272)('Washington', 572059)('Phnom Penh', 570155)('Jinzhou', 570000)('Mudanjiang', 570000)('Nashville-Davidson', 569891)('D\u00fcsseldorf', 568855)('Hamamatsu', 568796)('Nampo', 566200)('Durban', 566120)('Antalya', 564914)('Cochin (Kochi)', 564589)('El Paso', 563662)('Seattle', 563374)('Lisboa', 563210)('Chonju', 563153)('Novokuznetsk', 561600)('Quetta', 560307)('Rajkot', 559407)('Quilmes', 559249)('Jaboat\u00e3o dos Guararapes', 558680)('Asunci\u00f3n', 557776)('Helsinki [Helsingfors]', 555474)('Denver', 554636)('Kagoshima', 549977)('Funabashi', 545299)('Yinchuan', 544500)('F\u00e8s', 541162)('Charlotte', 540828)('Ashgabat', 540600)('Bremen', 540330)('Almirante Brown', 538918)('Kota', 537371)('Cotonou', 536827)('Fort Worth', 534694)('Padang', 534474)('El Alto', 534466)('Penza', 532200)('Vientiane', 531800)('Chongju', 531376)('N\u00b4Djam\u00e9na', 530965)('M\u00e1laga', 530553)('Changzhou', 530000)('Zhangjiakou', 530000)('Rjazan', 529900)('Portland', 529121)('Torre\u00f3n', 529093)('Islamabad', 524500)('Thiruvananthapuram (Trivandrum', 524006)('Bangui', 524000)('Dushanbe', 524000)('Panchiao', 523850)('Orenburg', 523600)('La Plata', 521936)('Tanger', 521735)('Lipetsk', 521000)('Contagem', 520801)('Dandong', 520000)('Hegang', 520000)('Centro (Villahermosa)', 519873)('Duisburg', 519793)('Surakarta', 518600)('Koyang', 518282)('Higashiosaka', 517785)('Pimpri-Chinchwad', 517083)('Chiclayo', 517000)('Bucaramanga', 515555)('S\u00e3o Jos\u00e9 dos Campos', 515553)('Hannover', 514718)('Nabereznyje T\u0161elny', 514700)('Vancouver', 514008)('Hachioji', 513451)('Mar del Plata', 512880)('Ansan', 510314)('Kaifeng', 510000)('Jalandhar (Jullundur)', 509510)('Pohang', 508899)('Oslo', 508726)('Mykolajiv', 508000)('Hims', 507404)('Oklahoma City', 506132)('Tula', 506100)('Gorakhpur', 505566)('Pasig', 505058)('Sal\u00e9', 504420)('Chandigarh', 504094)('Sanaa', 503600)('Tjumen', 503400)('Pointe-Noire', 500000)('Niigata', 497464)('K\u00f8benhavn', 495699)('San Nicol\u00e1s de los Garza', 495540)('Jiamusi', 493409)('Kemerovo', 492700)('Liaoyang', 492559)('Durango', 490524)('Chimalhuac\u00e1n', 490245)('Mariupol', 490000)('Leipzig', 489532)('Petare', 488868)('Uberl\u00e2ndia', 487222)('Hengyang', 487148)('Tucson', 486699)('N\u00fcrnberg', 486628)('Astrahan', 486100)('Irbil', 485968)('Valenzuela', 485433)('New Orleans', 484674)('Baoding', 483155)('Banjarmasin', 482931)('Cochabamba', 482800)('al-Dammam', 482300)('Tomsk', 482100)('Hunjiang', 482043)('Dublin', 481854)('Chang-won', 481694)('Amagasaki', 481434)('Mysore', 480692)('Aligarh', 480520)('Feira de Santana', 479992)('Diyarbakir', 479884)('Las Vegas', 478434)('Cleveland', 478403)('Blantyre', 478155)('Oshogbo', 476800)('Dresden', 476668)('Ilorin', 475800)('Kayseri', 475657)('Tlaquepaque', 475472)('Himeji', 475167)('Gomel', 475000)('Shizuoka', 473854)('Xinxiang', 473762)('Ribeir\u00e3o Preto', 473276)('Las Pi\u00f1as', 472780)('Ciudad de Panam\u00e1', 471373)('Guntur', 471051)('Antipolo', 470866)('San Miguel de Tucum\u00e1n', 470809)('Eskisehir', 470781)('Lan\u00fas', 469735)('Urawa', 469675)('Port Said', 469533)('Lugansk', 469000)('Vanderbijlpark', 468931)('Taguig', 467375)('Atizap\u00e1n de Zaragoza', 467262)('Gothenburg [G\u00f6teborg]', 466990)('Sorocaba', 466823)('Kirov', 466200)('Matsuyama', 466133)('Merlo', 463846)('Cagayan de Oro', 461877)('Mombasa', 461753)('Long Beach', 461522)('Matsudo', 461126)('Liverpool', 461000)('Jamshedpur', 460577)('Mekn\u00e8s', 460000)('Niter\u00f3i', 459884)('Ivanovo', 459200)('T\u0161eboksary', 459200)('Gdansk', 458988)('Huangshi', 457601)('Brjansk', 457400)('Veracruz', 457119)('Kanazawa', 455386)('Sargodha', 455360)('Tver', 454900)('Haikou', 454300)('Ghaziabad', 454156)('Cuiab\u00e1', 453813)('Cuautitl\u00e1n Izcalli', 452976)('Kawaguchi', 452155)('Yantai', 452127)('Juiz de Fora', 450288)('Edinburgh', 450180)('Para\u00f1aque', 449811)('Bengbu', 449245)('Albuquerque', 448607)('Bratislava', 448292)('Warangal', 447657)('Antwerpen', 446525)('Aracaju', 445555)('Lyon', 445452)('Makati', 444867)('Maracay', 444443)('Skopje', 444299)('Constantine', 443727)('Kursk', 443500)('Kempton Park', 442633)('Xiangtan', 441968)('Ichikawa', 441893)('Omiya', 441649)('Kansas City', 441545)('Masan', 441242)('Haag', 440900)('Utsunomiya', 440353)('S\u00e3o Jo\u00e3o de Meriti', 440052)('Irapuato', 440039)('Raipur', 438639)('Pekan Baru', 438638)('Macao', 437500)('Qaraghandy', 436900)('Lilongwe', 435964)('Urmia', 435200)('Denpasar', 435000)('San Juan', 434374)('Tuxtla Guti\u00e9rrez', 433544)('Oita', 433401)('Santiago de Cuba', 433180)('Nagasaki', 432759)('Tultitl\u00e1n', 432411)('Londrina', 432257)('Sheffield', 431607)('Asmara', 431000)('Yokosuka', 430200)('Manchester', 430000)('Moradabad', 429214)('Bacolod', 429076)('Weifang', 428522)('Joinville', 428011)('Magnitogorsk', 427900)('Fresno', 427652)('Abeokuta', 427400)('Durgapur', 425836)('Wuhu', 425740)('Pingxiang', 425579)('Virginia Beach', 425257)('Belford Roxo', 425194)('Kurashiki', 425103)('Matola', 424662)('Kaliningrad', 424400)('Callao', 424294)('Leeds', 424194)('General San Mart\u00edn', 422542)('Yingkou', 421589)('Amravati', 421576)('Anyang', 420332)('Niamey', 420000)('Calicut (Kozhikode)', 419831)('Reynosa', 419776)('Zahedan', 419518)('Benito Ju\u00e1rez', 419276)('Libreville', 419000)('Yogyakarta', 418944)('Kirkuk', 418624)('Kolwezi', 417810)('Rasht', 417748)('Suez', 417610)('Sialkot', 417597)('Kisangani', 417517)('Szczecin', 416988)('Atlanta', 416474)('Matamoros', 416428)('Bikaner', 416289)('al-Taif', 416100)('Panzhihua', 415466)('San Salvador', 415346)('Kaunas', 412639)('General Santos', 411822)('Bhubaneswar', 411542)('Pingdingshan', 410775)('Xiangfan', 410407)('Alberton', 410102)('Port Harcourt', 410000)('Zhuzhou', 409924)('Pontianak', 409632)('Jiaozuo', 409100)('Santos', 408748)('Gifu', 408007)('Sacramento', 407018)('Kolhapur', 406370)('Basra', 406296)('Sanliurfa', 405905)('Tallinn', 403981)('Kataka (Cuttack)', 403418)('Bahawalpur', 403408)('Hirakata', 403151)('Ajmer', 402700)('Bhavnagar', 402338)('Bristol', 402000)('Wenzhou', 401871)('Hamadan', 401281)('Zhangjiang', 400997)('Ananindeua', 400940)('Oakland', 399484)('Samarinda', 399175)('Abu Dhabi', 398695)('Campos dos Goytacazes', 398418)('Aden', 398300)('Nishinomiya', 397618)('Beira', 397368)('Toyonaka', 396689)('Mesa', 396375)('al-Mahallat al-Kubra', 395402)('Ibagu\u00e9', 393664)('Zigong', 393184)('Tulsa', 393049)('Kananga', 393030)('Bochum', 392830)('Chungho', 392176)('Wakayama', 391233)('Marikina', 391170)('Vinnytsja', 391000)('Nizni Tagil', 390900)('Toulouse', 390350)('Xalapa', 390058)('Omaha', 390007)('al-Zarqa', 389815)('Tiruchirapalli', 387223)('Bydgoszcz', 386855)('Puente Alto', 386236)('Bhilai', 386159)('Shuangyashan', 386081)('Jambi', 385201)('Keelung (Chilung)', 385201)('Kumasi', 385192)('Kerman', 384991)('Makijivka', 384000)('Thessaloniki', 383967)('San Pedro Sula', 383900)('Djibouti', 383000)('Ipoh', 382853)('Da Nang', 382674)('Minneapolis', 382618)('Celaya', 382140)('Brno', 381862)('Auckland', 381800)('Pereira', 381725)('Bologna', 381161)('Zaozhuang', 380846)('Arak', 380755)('Mazatl\u00e1n', 380265)('Sanchung', 380084)('Dasmari\u00f1as', 379520)('Muntinlupa', 379310)('Zaria', 379200)('Bhiwandi', 379070)('Pinetown', 378810)('Ilesha', 378400)('Yakeshi', 377869)('Fukuyama', 376921)('Firenze', 376662)('Murmansk', 376300)('Mau\u00e1', 375055)('Lom\u00e9', 375000)('Saharanpur', 374945)('Fujisawa', 372840)('Onitsha', 371900)('Honolulu', 371657)('Yichang', 371601)('Tanta', 371010)('Namangan', 370500)('Ulan-Ude', 370400)('Pietermaritzburg', 370190)('al-Mansura', 369621)('Ensenada', 369573)('Ulhasnagar', 369077)('Wuppertal', 368993)('Zhenjiang', 368316)('Salta', 367550)('Iquitos', 367000)('Salem', 366712)('Huaibei', 366549)('Iloilo', 365820)('Benoni', 365467)('Santiago de los Caballeros', 365463)('Oujda', 365382)('Depok', 365200)('Hsinchuang', 365048)('Qinhuangdao', 364972)('Asahikawa', 364813)('Kurgan', 364700)('Machida', 364197)('Guilin', 364130)('al-Sulaymaniya', 364096)('Liupanshui', 363954)('Nara', 362812)('Panjin', 362773)('Miami', 362470)('Yangquan', 362268)('Ujjain', 362266)('Iwo', 362000)('Hsinchu', 361958)('Samarkand', 361800)('Arkangeli', 361800)('Takatsuki', 361747)('Iwaki', 361737)('Nagano', 361391)('Colorado Springs', 360890)('Luxor', 360503)('Shymkent', 360100)('Toyohashi', 360066)('Sarajevo', 360000)('Ado-Ekiti', 359400)('Santa Marta', 359147)('Ahome', 358663)('Sot\u0161i', 358600)('Bilbao', 357589)('Carapicu\u00edba', 357552)('Jinxi', 357052)('Moreno', 356993)('Lublin', 356251)('Mogiljov', 356000)('Cajeme', 355679)('Doha', 355000)('Pasay', 354908)('Las Palmas de Gran Canaria', 354757)('Olinda', 354732)('Liaoyuan', 354141)('Lianyungang', 354139)('Gaza', 353632)('Murcia', 353504)('Smolensk', 353400)('Santa F\u00e9', 353063)('Avellaneda', 353046)('Herson', 353000)('Campina Grande', 352497)('Tres de Febrero', 352311)('Xianyang', 352125)('S\u00e3o Jos\u00e9 do Rio Preto', 351944)('Kwangmyong', 350914)('Tai\u00b4an', 350696)('Abuja', 350100)('Chifeng', 350077)('Shaoguan', 350043)('Caxias do Sul', 349581)('Mor\u00f3n', 349246)('Etobicoke', 348845)('Saint Louis', 348189)('Tel Aviv-Jaffa', 348100)('Iasi', 348070)('Sevastopol', 348000)('Toyota', 346090)('Katowice', 345934)('Suita', 345750)('Cimahi', 344600)('Orjol', 344500)('Wichita', 344284)('Asyut', 343498)('Hama', 343361)('Nantong', 343341)('Stavropol', 343300)('Nice', 342738)('Malegaon', 342595)('Plovdiv', 342584)('Constanta', 342264)('Kaduna', 342200)('Belgorod', 342000)('Jamnagar', 341637)('Randburg', 341288)('Leshan', 341128)('Ardebil', 340386)('Vitebsk', 340000)('London', 339917)('Samsun', 339871)('Kaluga', 339300)('Umlazi', 339233)('Moji das Cruzes', 339194)('San Jos\u00e9', 339131)('Simferopol', 339000)('Malabon', 338855)('Balikpapan', 338752)('Santa Ana', 337977)('Cuernavaca', 337966)('Catania', 337862)('Baoji', 337765)('Manizales', 337580)('Vladimir', 337100)('Z\u00fcrich', 336800)('Tonal\u00e1', 336109)('Chimbote', 336000)('Hamilton', 335614)('Ottawa', 335277)('Diadema', 335078)('Pittsburgh', 334563)('Bloemfontein', 334341)('Bokaro Steel City', 333683)('Bello', 333470)('Mushin', 333200)('Arlington', 332969)('Mahat\u0161kala', 332800)('Cluj-Napoca', 332498)('Takamatsu', 332471)('Pasto', 332396)('Manado', 332288)('Bari', 331848)('Cincinnati', 331285)('Laval', 330393)('Koriyama', 330335)('Malatya', 330312)('Galati', 330276)('Chonan', 330259)('Taraz', 330100)('Chinju', 329886)('Bouak\u00e9', 329850)('Ndola', 329200)('Sukkur', 329176)('Okazaki', 328711)('Vereeniging', 328535)('Johor Baharu', 328436)('Akola', 328034)('Anaheim', 328014)('Kawagoe', 327211)('Huancayo', 327000)('Palma de Mallorca', 326993)('Yazd', 326776)('Belgaum', 326399)('Sinuiju', 326011)('Tokorozawa', 325809)('Toyama', 325790)('Piura', 325000)('Rajahmundry', 324851)('Linyi', 324720)('Kochi', 324710)('Aparecida de Goi\u00e2nia', 324662)('Tonghua', 324600)('T\u0161erepovets', 324400)('Timisoara', 324304)('Christchurch', 324200)('Valle de Chalco Solidaridad', 323113)('Canberra', 322723)('Iksan', 322685)('Barcelona', 322267)('Bielefeld', 321125)('Cardiff', 321000)('Kashiwa', 320296)('Sharja', 320095)('Ostrava', 320041)('Maiduguri', 320000)('Valladolid', 319998)('Matur\u00edn', 319726)('San Crist\u00f3bal', 319373)('Piracicaba', 319104)('Cariacica', 319033)('Vila Velha', 318758)('Chungli', 318649)('Andijon', 318600)('Fengshan', 318562)('Taizz', 317600)('Siping', 317223)('Changzhi', 317144)('Nellore', 316606)('Taoyuan', 316438)('Enugu', 316100)('San Jos\u00e9 del Monte', 315807)('Florencio Varela', 315432)('Pelotas', 315415)('San Miguelito', 315382)('Tengzhou', 315083)('Saransk', 314800)('Akita', 314440)('Brasov', 314225)('Bauru', 313670)('Toledo', 313619)('Craiova', 313530)('Chaozhou', 313469)('Pultava [Poltava]', 313000)('T\u0161ernigiv', 313000)('Pyongtaek', 312927)('Yangzhou', 312892)('Vi\u00f1a del Mar', 312493)('Tambov', 312000)('Gold Coast', 311932)('C\u00f3rdoba', 311708)('Kumi', 311431)('Astana', 311200)('\u00d6skemen', 311000)('Nuevo Laredo', 310277)('Vladikavkaz', 310100)('T\u0161ita', 309900)('Porto Velho', 309750)('al-Najaf', 309010)('T\u0161erkasy', 309000)('Dongwan', 308669)('Udaipur', 308571)('Port Sudan', 308195)('Moulmein (Mawlamyine)', 307900)('Mannheim', 307730)('New Bombay', 307297)('Ede', 307100)('Mataram', 306600)('San Isidro', 306341)('Bacoor', 305699)('Ma\u00b4anshan', 305421)('Tepic', 305025)('Bhatpara', 304952)('Surrey', 304477)('Gulbarga', 304099)('Coventry', 304000)('Miyazaki', 303784)('Tampa', 303447)('Nampula', 303346)('Foshan', 303160)('Yueyang', 302800)('Xingtai', 302789)('Serra', 302666)('Vologda', 302500)('Betim', 302108)('Grodno', 302000)('Pekalongan', 301504)('Koshigaya', 301446)('New Delhi', 301297)('Changde', 301276)('Ciudad Bol\u00edvar', 301107)('Bonn', 301048)('Jhansi', 300850)('Pavlodar', 300500)('Wonsan', 300148)('Neiva', 300052)('Bobo-Dioulasso', 300000)('Bujumbura', 300000)('Naha', 299851)('Varna', 299801)('Shihezi', 299676)('Veliki Novgorod', 299500)('G\u00e4nc\u00e4', 299300)('Likasi', 299118)('Gorlivka', 299000)('Aba', 298900)('Camag\u00fcey', 298726)('Hodeida', 298500)('Maseru', 297000)('Zytomyr', 297000)('Yancheng', 296831)('Ife', 296800)('Brampton', 296711)('Karbala', 296705)('Tigre', 296226)('Jund\u00eda\u00ed', 296127)('Aomori', 295969)('Soledad', 295058)('Tampico', 294789)('Hakodate', 294788)('Canoas', 294125)('Rajshahi', 294056)('Leicester', 294000)('Sumy', 294000)('Valpara\u00edso', 293800)('Ixtapaluca', 293160)('Cuman\u00e1', 293105)('Buffalo', 292648)('K\u00e9nitra', 292600)('Tabuk', 292600)('Akashi', 292253)('Jhang', 292214)('Nonthaburi', 292100)('Gaya', 291675)('Komsomolsk-na-Amure', 291600)('Jiujiang', 291187)('Qazvin', 291117)('Cusco', 291000)('Malvinas Argentinas', 290335)('Carrefour', 290204)('Franca', 290139)('Tegal', 289744)('Bradford', 289376)('Armenia', 288977)('Kitwe', 288600)('Vicente L\u00f3pez', 288341)('Yokkaichi', 288173)('Kostroma', 288100)('Fukushima', 287525)('Belfast', 287500)('Morioka', 287353)('Saint Paul', 287151)('Nottingham', 287000)('Volzski', 286900)('S\u00e3o Vicente', 286848)('Maring\u00e1', 286461)('Zanjan', 286295)('Montes Claros', 286058)('Kigali', 286000)('Brest', 286000)('Bogor', 285114)('Iligan', 285061)('\u00c5rhus', 284846)('Maebashi', 284473)('Taganrog', 284400)('Bialystok', 283937)('Vigo', 283670)('Wonderboom', 283289)('Sumqayit', 283000)('Apodaca', 282941)('Kasugai', 282348)('An\u00e1polis', 282197)('Petroskoi', 282100)('Bi\u00ean Hoa', 282095)('Otsu', 282070)('Gelsenkirchen', 281979)('Florian\u00f3polis', 281928)('Manukau', 281800)('Dongying', 281728)('Shashi', 281352)('Xintai', 281248)('Jingdezhen', 281183)('Calamba', 281146)('Tongchuan', 280657)('Kakinada', 279980)('Roodepoort', 279340)('Ichihara', 279280)('Petr\u00f3polis', 279183)('Zhongshan', 278829)('Mandaluyong', 278474)('Dhule (Dhulia)', 278317)('Sanandaj', 277808)('Talcahuano', 277752)('Bratsk', 277600)('T\u00e9touan', 277516)('Corpus Christi', 277454)('Venezia', 277305)('Karlsruhe', 277204)('Guasave', 277201)('Dzerzinsk', 277100)('Berazategui', 276916)('Yao', 276421)('Aurora', 276393)('Uijongbu', 276111)('Raleigh', 276093)('Panihati', 275990)('Bahtim', 275807)('Nanded (Nander)', 275083)('Chitungwiza', 274912)('Surgut', 274900)('Orsk', 273900)('Shiyan', 273786)('Bandar-e-Abbas', 273578)('Newark', 273546)('Mangalore', 273304)('Villavicencio', 273140)('Porto', 273060)('Kyongju', 272968)('Phyongsong', 272934)('Khorramabad', 272815)('G\u00f3mez Palacio', 272806)('Alicante [Alacant]', 272432)('Soacha', 272058)('Sheikhupura', 271875)('Tapachula', 271141)('Ljubljana', 270986)('Itaquaquecetuba', 270874)('Ichinomiya', 270828)('Ciputat', 270800)('Vit\u00f3ria', 270626)('Larkana', 270366)('Cuenca', 270353)('Newcastle', 270324)('Nantes', 270251)('Dehra Dun', 270159)('Tirana', 270000)('Dniprodzerzynsk', 270000)('Tokushima', 269649)('Semey', 269600)('Nicol\u00e1s Romero', 269393)('al-Hilla', 268834)('Wiesbaden', 268716)('Ponta Grossa', 268013)('Gij\u00f3n', 267980)('Zagazig', 267351)('Butuan', 267279)('Coatzacoalcos', 267037)('Kamarhati', 266889)('Kunsan', 266569)('Kakogawa', 266281)('Davangere', 266082)('al-Nasiriya', 265937)('Haifa', 265700)('Tieli', 265683)('Eslamshahr', 265450)('Jining', 265248)('Uruapan', 265211)('Sterlitamak', 265200)('Chiayi', 265109)('Kirovograd', 265000)('Angarsk', 264700)('M\u00fcnster', 264670)('Latakia', 264563)('Gebze', 264170)('Strasbourg', 264115)('Wuhai', 264081)('Ila', 264000)('Angeles', 263971)('M\u00f6nchengladbach', 263697)('Hsintien', 263603)('Valledupar', 263247)('Chemnitz', 263222)('Pondokgede', 263200)('Mianyang', 262947)('Luzhou', 262892)('Victoria', 262686)('Boksburg', 262648)('Tarlac', 262481)('Safi', 262300)('Asansol', 262188)('Kingston upon Hull', 262000)('Hmelnytskyi', 262000)('Klerksdorp', 261911)('Zunyi', 261862)('Ibaraki', 261020)('al-Faiyum', 260964)('Lexington-Fayette', 260512)('Anchorage', 260283)('Mandaue', 259728)('Malm\u00f6', 259579)('Rio Branco', 259537)('Foz do Igua\u00e7u', 259425)('Messina', 259156)('T\u0161ernivtsi', 259000)('Cheju', 258511)('Corrientes', 258103)('Shizuishan', 257862)('Czestochowa', 257812)('Sfax', 257800)('Neyagawa', 257315)('Shimonoseki', 257263)('Oaxaca de Ju\u00e1rez', 256848)('Oyo', 256400)('Kimhae', 256370)('Louisville', 256231)('Macap\u00e1', 256033)('Neijiang', 256012)('Yamagata', 255617)('Verona', 255268)('Riverside', 255166)('Tongliao', 255129)('Ilh\u00e9us', 254970)('Augsburg', 254867)('Tieling', 254842)('Fukui', 254818)('Ismailia', 254477)('Cirebon', 254406)('Halle/Saale', 254360)('Petaling Jaya', 254350)('Hiratsuka', 254207)('Sariwon', 254146)('Georgetown', 254000)('Denizli', 253848)('Kediri', 253760)('Vit\u00f3ria da Conquista', 253587)('Gdynia', 253521)('Bhagalpur', 253225)('Aqt\u00f6be', 253100)('Plymouth', 253000)('Baguio', 252386)('Coacalco de Berrioz\u00e1bal', 252270)('Stoke-on-Trent', 252000)('Wafangdian', 251733)('Antofagasta', 251429)('Ploiesti', 251348)('Anqing', 250718)('Gujrat', 250121)('Holgu\u00edn', 249492)('Ambon', 249312)('Sunchon', 249263)('Uberaba', 249225)('Jo\u0161kar-Ola', 249200)('San Miguel', 248700)('Burayda', 248600)('Paulista', 248473)('Monter\u00eda', 248245)('Saint Petersburg', 248232)('Thi\u00e8s', 248000)('L\u00b4Hospitalet de Llobregat', 247986)('Batangas', 247588)('Mokpo', 247452)('Shaoyang', 247227)('Bakersfield', 247057)('Port Moresby', 247000)('Laiwu', 246833)('Chengde', 246799)('Sivas', 246642)('Mito', 246559)('Erzurum', 246535)('Braunschweig', 246322)('Tarsus', 246206)('Kahramanmaras', 245772)('Limeira', 245497)('Bellary', 245391)('Barddhaman (Burdwan)', 245079)('Rivne', 245000)('Tianshui', 244974)('Granada', 244767)('Pachuca de Soto', 244688)('Ikerre', 244600)('Mardan', 244511)('Blumenau', 244379)('Caruaru', 244247)('Sasebo', 244240)('Sosnowiec', 244102)('Aachen', 243825)('Stockton', 243771)('Rampur', 243742)('A Coru\u00f1a (La Coru\u00f1a)', 243402)('Kelang', 243355)('Nanyang', 243303)('Hachinohe', 242979)('Birmingham', 242820)('Soshanguve', 242727)('Cangzhou', 242708)('Yong-in', 242643)('Cainta', 242511)('Jalgaon', 242193)('Wolverhampton', 242000)('San Bernardo', 241910)('Ko\u0161ice', 241874)('Santar\u00e9m', 241771)('Krefeld', 241769)('Kasur', 241649)('Muzaffarpur', 241107)('Nizamabad', 241034)('Yibin', 241019)('Bissau', 241000)('Graz', 240967)('Kutaisi', 240900)('Muzaffarnagar', 240609)('Delmas', 240429)('Volta Redonda', 240315)('Jersey City', 240055)('Tripoli', 240000)('Novo Hamburgo', 239940)('Bah\u00eda Blanca', 239810)('Huaiyin', 239675)('Rybinsk', 239600)('Takasaki', 239124)('Shimizu', 239123)('Krement\u0161uk', 239000)('Caucaia', 238738)('Santa Maria', 238473)('Patiala', 238368)('Shahjahanpur', 237713)('Cascavel', 237510)('Qandahar', 237500)('Wonju', 237460)('Prokopjevsk', 237300)('Guaruj\u00e1', 237206)('Buhoro', 237100)('Ivano-Frankivsk', 237000)('Kurnool', 236800)('Derby', 236000)('Ternopil', 236000)('Esteban Echeverr\u00eda', 235760)('Tiruppur (Tirupper)', 235661)('Kurume', 235611)('Kunpo', 235233)('Dunhua', 235100)('Magdeburg', 235073)('Kassala', 234622)('Chunchon', 234528)('Norfolk', 234403)('Utrecht', 234323)('Niznevartovsk', 233900)('Kiel', 233795)('Braila', 233756)('Rohtak', 233400)('Nalt\u0161ik', 233400)('Temuco', 233041)('General Escobedo', 232961)('South Dum Dum', 232811)('Ribeir\u00e3o das Neves', 232685)('Radom', 232262)('Kafr al-Dawwar', 231978)('Governador Valadares', 231724)('Fuji', 231527)('Irbid', 231511)('San Pedro', 231403)('Bergen', 230948)('Yanji', 230892)('Jiangmen', 230587)('Navotas', 230403)('Swansea', 230000)('Syktyvkar', 229700)('Obeid', 229425)('Benin City', 229400)('Severodvinsk', 229300)('Resistencia', 229212)('Haeju', 229172)('Taubat\u00e9', 229130)('Namyangju', 229060)('Itag\u00fc\u00ed', 228985)('El\u00e2zig', 228815)('Rahim Yar Khan', 228479)('Kuala Terengganu', 228119)('Tongling', 228017)('Suihua', 227881)('Baton Rouge', 227818)('Changhwa', 227715)('Yungho', 227700)('Central Coast', 227657)('Nyala', 227183)('Salamanca', 226864)('Mathura', 226691)('Santa Catarina', 226573)('Gongziling', 226569)('Palmira', 226509)('Hialeah', 226419)('Chandrapur', 226105)('al-Ayn', 225970)('Tehuac\u00e1n', 225943)('al-Hufuf', 225800)('Lincoln', 225581)('Montpellier', 225392)('Bijsk', 225000)('Tucheng', 224897)('M\u00e9rida', 224887)('Barahanagar (Baranagar)', 224821)('Imperatriz', 224564)('Buenaventura', 224336)('Gent', 224180)('Bayam\u00f3n', 224044)('Greensboro', 223891)('Oruro', 223553)('Kanggye', 223410)('Niznekamsk', 223400)('Gravata\u00ed', 223011)('Newcastle', 222993)('Xiantao', 222884)('Cabanatuan', 222859)('Soka', 222768)('Osh', 222700)('Annaba', 222518)('Chaoyang', 222394)('Oberhausen', 222349)('Oradea', 222239)('Embu', 222223)('Chalco', 222201)('Plano', 222030)('Blagove\u0161t\u0161ensk', 222000)('Floridablanca', 221913)('San Fernando', 221857)('\u0160ahty', 221800)('Jos\u00e9 C. Paz', 221754)('Qostanay', 221400)('Nha Trang', 221331)('Cabimas', 221329)('East London', 221047)('Bobruisk', 221000)('Pucallpa', 220866)('Sincelejo', 220704)('Fuchu', 220576)('Kangnung', 220403)('Ganzhou', 220129)('Rochester', 219773)('Wollongong', 219761)('Pinang', 219603)('Kota Bharu', 219582)('Van', 219319)('Hue', 219149)('al-Mubarraz', 219100)('Assuan', 219017)('Glendale', 218812)('Jember', 218500)('Lipa', 218447)('Darbhanga', 218391)('Huzhou', 218071)('Baicheng', 217987)('Khamis Mushayt', 217900)('Barinas', 217831)('Borujerd', 217804)('Concepci\u00f3n', 217664)('Turmero', 217499)('Iseyin', 217300)('Vitoria-Gasteiz', 217154)('Akron', 217074)('Lapu-Lapu', 217019)('Lutsk', 217000)('Siliguri (Shiliguri)', 216950)('C\u00e1rdenas', 216903)('Campeche', 216735)('Trieste', 216459)('Chigasaki', 216015)('Southampton', 216000)('Garland', 215768)('Tacna', 215683)('Can Tho', 215587)('Raurkela', 215489)('Ambattur', 215424)('Shangzi', 215373)('Bordeaux', 215363)('Panipat', 215218)('Yangjiang', 215196)('Firozabad', 215128)('Bila Tserkva', 215000)('Qitaihe', 214957)('Ichalkaranji', 214950)('Mossor\u00f3', 214901)('Jammu', 214737)('Pingtung', 214727)('V\u00e1rzea Grande', 214435)('Ramagundam', 214384)('Gejiu', 214294)('Staryi Oskol', 213800)('Jiangyin', 213659)('L\u00fcbeck', 213326)('Espoo', 213271)('Aberdeen', 213070)('Santa Cruz de Tenerife', 213050)('La Paz', 213045)('Gaborone', 213017)('Rancagua', 212977)('Hebi', 212976)('Eluru', 212866)('Atsugi', 212407)('Kielce', 212383)('Damanhur', 212203)('Gliwice', 212164)('Gjumri', 211700)('Jiaxing', 211526)('Padova', 211391)('Numazu', 211382)('Wad Madani', 211362)('Sultanbeyli', 211068)('Petrolina', 210540)('Wuzhou', 210452)('Brahmapur', 210418)('Machala', 210368)('Izmit (Kocaeli)', 210068)('Mixco', 209791)('Badalona', 209635)('Ageo', 209442)('Bacau', 209235)('Cam Pha', 209086)('Meihekou', 209038)('Xuchang', 208815)('al-Amara', 208797)('Barueri', 208426)('Yamato', 208234)('Taranto', 208214)('Madison', 208054)('Oth\u00f3n P. Blanco (Chetumal)', 208014)('San Pablo', 207927)('Liaocheng', 207844)('Windsor', 207588)('Viam\u00e3o', 207557)('Sahiwal', 207388)('Santa Clara', 207350)('Baruta', 207290)('Manisa', 207148)('Zelenograd', 207100)('Paran\u00e1', 207041)('Godoy Cruz', 206998)('Cilacap', 206900)('Matsumoto', 206801)('Kure', 206504)('Katsina', 206500)('Ipatinga', 206338)('Jos', 206300)('Rennes', 206229)('Torun', 206158)('Abadan', 206073)('Balakovo', 206000)('Takarazuka', 205993)('Fort Wayne', 205727)('Haicheng', 205560)('Bytom', 205560)('Qianjiang', 205504)('Chungju', 205206)('Hagen', 205201)('Cimanggis', 205100)('Alwar', 205086)('Guant\u00e1namo', 205078)('Baiyin', 204970)('Sokoto', 204900)('Bei\u00b4an', 204899)('Batman', 203793)('Texcoco', 203681)('Debrecen', 203648)('Petropavl', 203500)('Fremont', 203413)('Novorossijsk', 203300)('Welkom', 203296)('Rostock', 203279)('Pondicherry', 203065)('Pematang Siantar', 203056)('Dehiwala', 203000)('Scottsdale', 202705)('Dezful', 202639)('Purwokerto', 202500)('Freiburg im Breisgau', 202455)('Klaipeda', 202451)('Narayanganj', 202134)('Santo Domingo de los Colorados', 202111)('Thanjavur', 202013)('Eindhoven', 201843)('Kasukabe', 201838)('Chofu', 201585)('Bukavu', 201569)('Montgomery', 201568)('Pihkova', 201500)('Kashan', 201372)('al-Minya', 201360)('Bihar Sharif', 201323)('Posadas', 201273)('Erfurt', 201267)('Bi\u00f1an', 201186)('Juazeiro', 201073)('Okara', 200901)('Charleroi', 200827)('Yixing', 200824)('Popay\u00e1n', 200719)('Guaymall\u00e9n', 200595)('Oviedo', 200453)('Zabrze', 200177)('Odawara', 200171)('Shreveport', 200145)('Tuticorin', 199854)('Augusta-Richmond County', 199775)('Kofu', 199753)('Juazeiro do Norte', 199636)('Lubbock', 199564)('Kuantan', 199484)('Chesapeake', 199184)('Ilobu', 199000)('Kaolack', 199000)('Mobile', 198915)('Des Moines', 198682)('Laizhou', 198664)('Imphal', 198535)('Wah', 198400)('Taytay', 198183)('Grand Rapids', 197800)('Richmond', 197790)('Kushiro', 197608)('Qaramay', 197602)('Acheng', 197595)('Tabo\u00e3o da Serra', 197550)('Latur', 197408)('Kishiwada', 197276)('Kimberley', 197254)('Offa', 197200)('Ariana', 197000)('Zlatoust', 196900)('S\u00e3o Jos\u00e9 dos Pinhais', 196884)('La Paz', 196708)('Hitachi', 196622)('al-Diwaniya', 196519)('Balikesir', 196382)('Kassel', 196211)('Mag\u00e9', 196147)('Yonkers', 196086)('Lucena', 196075)('Northampton', 196000)('Sari', 195882)('Spokane', 195629)('Oral', 195500)('Dezhou', 195485)('Imus', 195482)('Tampere', 195468)('Suzano', 195434)('Jakutsk', 195400)('M\u00f3stoles', 195351)('Sagar', 195346)('Burgas', 195255)('Nanping', 195064)('Nicosia', 195000)('Glendale', 194973)('Ica', 194820)('Zhaoqing', 194784)('Farrukhabad-cum-Fatehgarh', 194567)('Beipiao', 194301)('Tiraspol', 194300)('Podolsk', 194300)('Metepec', 194265)('Olongapo', 194260)('Karsi', 194100)('Nukus', 194100)('Petropavlovsk-Kamt\u0161atski', 194100)('Porto-Novo', 194000)('Fengcheng', 193784)('Monclova', 193657)('Saskatoon', 193647)('Tacoma', 193556)('Tilburg', 193238)('Sangli', 193197)('Elche [Elx]', 193174)('Huixquilucan', 193156)('Yungkang', 193005)('Fuyu', 192981)('Kisumu', 192733)('al-Ramadi', 192556)('Xinyang', 192509)('Chilpancingo de los Bravo', 192509)('Nagaoka', 192407)('Dongtai', 192247)('Dudley', 192171)('Uitenhage', 192120)('Ziguinchor', 192000)('Irving', 191615)('Rangpur', 191398)('Yuci', 191356)('Brescia', 191317)('al-Qadarif', 191164)('Le Havre', 190905)('Pegu (Bago)', 190900)('Itami', 190886)('Honghu', 190772)('Sakarya (Adapazari)', 190641)('Kamensk-Uralski', 190600)('Parbhani', 190255)('Ezhou', 190123)('K\u00fckon', 190100)('Nagar Coil', 190084)('Portsmouth', 190000)('Moratuwa', 190000)('Kitchener', 189959)('Santiago del Estero', 189947)('Chatsworth', 189885)('Huntington Beach', 189594)('Uppsala', 189569)('Split', 189388)('Heze', 189293)('S\u00e3o Leopoldo', 189258)('Ch\u00e4rjew', 189200)('Newcastle upon Tyne', 189150)('Markham', 189098)('Arica', 189036)('Dodoma', 189000)('Engels', 189000)('Modesto', 188856)('Uji', 188735)('Mymensingh', 188713)('Gorgan', 188710)('Mar\u00edlia', 188691)('Andong', 188443)('Pingchen', 188344)('Rishon Le Ziyyon', 188200)('Daxian', 188101)('Dera Ghazi Khan', 188100)('Linz', 188022)('Puerto Cabello', 187722)('North Shore', 187700)('Binangonan', 187691)('Talca', 187557)('Ciomas', 187400)('Linfen', 187309)('Reims', 187206)('Pitesti', 187170)('S\u00e3o Carlos', 187122)('Durham', 187035)('Bijapur', 186939)('Syzran', 186900)('Herat', 186800)('Ponce', 186475)('Tianmen', 186332)('Columbus', 186291)('Sumar\u00e9', 186205)('Carolina', 186076)('Kramatorsk', 186000)('Grozny', 186000)('Orlando', 185951)('Yiyang', 185818)('Boise City', 185787)('Winston-Salem', 185776)('Santa Ana de Coro', 185766)('Li\u00e8ge', 185639)('Santa Rosa', 185633)('San Bernardino', 185401)('Kukatpalle', 185378)('Presidente Prudente', 185340)('Quanzhou', 185154)('Rizhao', 185048)('Divin\u00f3polis', 185047)('Ikorodu', 184900)('Sabadell', 184859)('Lille', 184657)('Ilawe-Ekiti', 184500)('Mirpur Khas', 184500)('Bally', 184474)('Arad', 184408)('Novot\u0161erkassk', 184400)('Jackson', 184256)('Santander', 184165)('Suzuka', 184061)('Bhilwara', 183965)('Odense', 183912)('Bassein (Pathein)', 183900)('Saarbr\u00fccken', 183836)('Puerto Vallarta', 183741)('Yosu', 183596)('Owo', 183500)('Batna', 183377)('Ratlam', 183375)('Sunderland', 183310)('Taiping', 183261)('Avadi', 183215)('al-Kut', 183183)('Mainz', 183134)('Little Rock', 183133)('Nawabshah', 183100)('Luton', 183000)('Sete Lagoas', 182984)('Seremban', 182869)('Fresnillo', 182744)('Pireus', 182671)('Jerez de la Frontera', 182660)('Mdantsane', 182639)('Deyang', 182488)('Dindigul', 182477)('Guangyuan', 182241)('Rio Grande', 182222)('Itabuna', 182148)('Kikwit', 182142)('Ciudad Madero', 182012)('Berezniki', 181900)('Changshu', 181805)('Hamm', 181804)('Salt Lake City', 181743)('Krugersdorp', 181503)('Zhangzhou', 181424)('Ikirun', 181400)('Nakhon Ratchasima', 181400)('Ahmadnagar', 181339)('Tshikapa', 180860)('Hailar', 180650)('Fargona', 180500)('Pamplona [Iru\u00f1a]', 180483)('Reno', 180480)('Regina', 180400)('Bielsko-Biala', 180307)('Nanchong', 180273)('St-\u00c9tienne', 180210)('Newport News', 180150)('Jiutai', 180130)('Swindon', 180000)('Zhaodong', 179976)('Soledad de Graciano S\u00e1nchez', 179956)('Bilaspur', 179833)('Shaoxing', 179818)('Tasikmalaya', 179800)('Novi Sad', 179626)('Reggio di Calabria', 179617)('Fuyang', 179572)('Tagum', 179531)('San Juan del R\u00edo', 179300)('Shimoga', 179258)('Burnaby', 179209)('Donostia-San Sebasti\u00e1n', 179208)('Juzno-Sahalinsk', 179200)('Jequi\u00e9', 179128)('S\u00e9tif', 179055)('Kimchaek', 179000)('Arapiraca', 178988)('Los Teques', 178784)('San Salvador de Jujuy', 178748)('Maoming', 178683)('Qujing', 178669)('Tacloban', 178639)('Ettadhamen', 178600)('Najafabad', 178498)('Vantaa', 178471)('Sucre', 178426)('Volgodonsk', 178200)('Chill\u00e1n', 178182)('Barrancabermeja', 178020)('Hyesan', 178020)('Kharagpur', 177989)('Botshabelo', 177971)('Iquique', 177892)('Colombo', 177764)('Cartagena', 177709)('Hirosaki', 177522)('Americana', 177409)('San Felipe del Progreso', 177330)('Ghulja', 177193)('Garoua', 177000)('C\u00f3rdoba', 176952)('Hail', 176800)('Chandler', 176581)('Laredo', 176576)('Portoviejo', 176413)('Jiaohe', 176367)('Modena', 176022)('Southend-on-Sea', 176000)('Puyang', 175988)('Huadian', 175873)('Jiangyou', 175753)('Herne', 175661)('Alvorada', 175574)('Ni\u0161', 175391)('Henderson', 175381)('Mira Bhayandar', 175372)('Malolos', 175291)('Ube', 175206)('Vellore', 175061)('Jalna', 174985)('Kodaira', 174984)('Burnpur', 174933)('Anantapur', 174924)('Arlington', 174838)('Walsall', 174739)('Allappuzha (Alleppey)', 174666)('Qashqar', 174570)('Shaki', 174500)('Mingora', 174500)('Calabar', 174400)('Araraquara', 174381)('Takaoka', 174380)('Tirupati', 174369)('Anshun', 174142)('Itabora\u00ed', 173977)('M\u00fclheim an der Ruhr', 173895)('Knoxville', 173890)('Fuling', 173878)('Karnal', 173751)('Kyongsan', 173746)('Obihiro', 173685)('Amarillo', 173627)('Providence', 173618)('Ondo', 173600)('Kusti', 173599)('Chula Vista', 173556)('Xinyu', 173524)('Geneve', 173500)('Legan\u00e9s', 173163)('Matadi', 172730)('Burhanpur', 172710)('Groningen', 172701)('Vanadzor', 172700)('Hisar (Hissar)', 172677)('Worcester', 172648)('Tiruvottiyur', 172562)('Turku [\u00c5bo]', 172561)('Prato', 172473)('Tec\u00e1mac', 172410)('Miskolc', 172357)('Mwanza', 172300)('Bani Suwayf', 172032)('Nassau', 172000)('Tomakomai', 171958)('Tali', 171940)('Nam Dinh', 171699)('Santa B\u00e1rbara d\u00b4Oeste', 171657)('Madiun', 171532)('Kaesong', 171500)('Ocosingo', 171495)('Carmen', 171367)('Brakpan', 171363)('Qina', 171275)('Fuenlabrada', 171173)('Chiang Mai', 171100)('Chimoio', 171056)('Mabalacat', 171045)('Olsztyn', 170904)('L\u00e1zaro C\u00e1rdenas', 170878)('Sabzevar', 170738)('Nova Friburgo', 170697)('Waitakere', 170600)('Temirtau', 170500)('Jiutepec', 170428)('Oxnard', 170358)('Jacare\u00ed', 170356)('Barisal', 170232)('Sawhaj', 170125)('Papantla', 170123)('Saga', 170034)('Hurlingham', 170028)('Hanzhong', 169930)('Mbandaka', 169841)('Ambato', 169612)('Sibiu', 169611)('Danyang', 169603)('Chenzhou', 169400)('Mirzapur-cum-Vindhyachal', 169336)('Ara\u00e7atuba', 169303)('Chiniot', 169300)('Abakan', 169200)('Almer\u00eda', 169027)('El-Aai\u00fan', 169000)('Windhoek', 169000)('Melitopol', 169000)('Barra Mansa', 168953)('Parma', 168717)('Tungi', 168702)('Terrassa', 168695)('Praia Grande', 168434)('Sakura', 168072)('Rijeka', 167964)('Marab\u00e1', 167795)('Crici\u00fama', 167661)('Kamakura', 167661)('Secunderabad', 167461)('Maikop', 167300)('Neuqu\u00e9n', 167296)('Mitaka', 167268)('Qu\u00e9bec', 167264)('Punto Fijo', 167215)('Boa Vista', 167185)('Witbank', 167183)('Nadiad', 167051)('Baranovit\u0161i', 167000)('Izumi', 166979)('Hino', 166770)('Plzen', 166759)('Basel', 166700)('Wellington', 166700)('Hadano', 166512)('Ruse', 166467)('Passo Fundo', 166343)('Xiaogan', 166280)('Miass', 166200)('Dayton', 166179)('Cagliari', 165926)('Guarenas', 165889)('Khomeynishahr', 165888)('Solingen', 165583)('Taiping', 165524)('Ashikaga', 165243)('Garden Grove', 165196)('T\u00e2rgu Mures', 165153)('Armavir', 164900)('Shangqiu', 164880)('Dire Dawa', 164851)('Zhuhai', 164747)('Manta', 164739)('Dourados', 164716)('Santa Luzia', 164704)('Qingyuan', 164641)('Comalcalco', 164640)('Tsu', 164543)('Osnabr\u00fcck', 164539)('Alcal\u00e1 de Henares', 164463)('Oberholzer', 164367)('Dewas', 164364)('Mount Darwin', 164362)('Germiston', 164252)('Aqsu', 164092)('Nakuru', 163927)('Ljubertsy', 163900)('Cotabato', 163849)('Ludwigshafen am Rhein', 163771)('Beerseba', 163700)('Jining', 163552)('Rio Claro', 163551)('Murwara (Katni)', 163431)('Quy Nhon', 163385)('Paju', 163379)('Yangsan', 163351)('Huambo', 163100)('Holon', 163100)('Meycauayan', 163037)('Xiaoshan', 162930)('Burgos', 162802)('Rubtsovsk', 162600)('Sayama', 162472)('Akure', 162300)('Zaoyang', 162198)('Springs', 162072)('Rzesz\u00f3w', 162049)('Maracana\u00fa', 162022)('Bournemouth', 162000)('Kert\u0161', 162000)('Puerto Princesa', 161912)('Xinghua', 161910)('Pate', 161700)('Livorno', 161673)('Khujand', 161500)('Ganganagar', 161482)('Hami', 161315)('Yachiyo', 161222)('Zamora', 161191)('Aalborg', 161161)('Fengyuan', 161032)('Oceanside', 161029)('Huizhou', 161023)('Leverkusen', 160841)('Jinmen', 160794)('Tsukuba', 160768)('Sanming', 160691)('Toulon', 160639)('Luchou', 160516)('Guarapuava', 160510)('Breda', 160398)('Vizianagaram', 160359)('Shibin al-Kawm', 159909)('Kovrov', 159900)('Ruda Slaska', 159665)('Westonaria', 159632)('Ulanhot', 159538)('Tachikawa', 159430)('Petah Tiqwa', 159400)('Dos Quebradas', 159363)('Korla', 159344)('Erode', 159232)('Machilipatnam (Masulipatam)', 159110)('Nogales', 159103)('Amol', 159092)('Bhatinda (Bathinda)', 159042)('Acarigua', 158954)('Neyshabur', 158847)('Salamanca', 158720)('Tempe', 158625)('Babol', 158346)('Huimanguillo', 158335)('Na\u00e7ala-Porto', 158248)('Huntsville', 158216)('Los Angeles', 158215)('Ituzaing\u00f3', 158197)('Szeged', 158158)('Udon Thani', 158100)('Ontario', 158007)('Gusau', 158000)('Biratnagar', 157764)('Nahodka', 157700)('Zanzibar', 157634)('Raichur', 157551)('Qyzylorda', 157400)('Agartala', 157358)('P\u00e9cs', 157332)('Ussurijsk', 157300)('Kumagaya', 157171)('Arrah (Ara)', 157082)('Legazpi', 157010)('Wanxian', 156823)('Salavat', 156800)('Perugia', 156673)('Satna', 156630)('Rui\u00b4an', 156468)('Ijebu-Ode', 156400)('Zhoushan', 156317)('Liangcheng', 156307)('Silang', 156137)('Brighton', 156124)('Peterborough', 156000)('Moriguchi', 155941)('Ashdod', 155800)('Otaru', 155784)('Puerto La Cruz', 155700)('Myti\u0161t\u0161i', 155700)('Chattanooga', 155554)('Lalbahadur Nagar', 155500)('Pri\u0161tina', 155496)('Rustavi', 155400)('Ichon', 155332)('Agadir', 155244)('Aizawl', 155240)('Uluberia', 155172)('Rondon\u00f3polis', 155115)('S\u00e3o Jos\u00e9', 155105)('Cachoeiro de Itapemirim', 155024)('al-Sib', 155000)('York', 154980)('Hsichuh', 154976)('Netanya', 154900)('Foggia', 154891)('Mohammedia', 154706)('Asan', 154663)('Limassol', 154400)('Katihar', 154367)('Kabwe', 154300)('Ormoc', 154297)('San Carlos', 154264)('Oldenburg', 154125)('Anjo', 153823)('Apeldoorn', 153491)('Balti', 153400)('Nil\u00f3polis', 153383)('Jiaozhou', 153364)('Patras', 153344)('Grenoble', 153317)('Cuautla', 153132)('Sidi Bel Abb\u00e8s', 153106)('Effon-Alaiye', 153100)('Cuddalore', 153086)('San Fernando', 153036)('Iskenderun', 153022)('Minatitl\u00e1n', 152983)('Narashino', 152849)('Oyama', 152820)('Poza Rica de Hidalgo', 152678)('Duran [Eloy Alfaro]', 152514)('Tulu\u00e1', 152488)('Nijmegen', 152463)('Taizhou', 152442)('Fort Lauderdale', 152397)('Puerto Montt', 152194)('al-Kharj', 152100)('Khouribga', 152090)('Springfield', 152082)('Suzhou', 151862)('Hugli-Chinsurah', 151806)('Dhanbad', 151789)('Ogaki', 151758)('Yichun', 151585)('Springfield', 151580)('Angers', 151279)('Shulin', 151260)('Santa Clarita', 151088)('Tamale', 151069)('Salinas', 151060)('Raiganj', 151045)('Blackpool', 151000)('Kamoke', 151000)('Borisov', 151000)('Sambhal', 150869)('Kolomna', 150700)('Itapevi', 150664)('Durg', 150645)('Tallahassee', 150624)('Taonan', 150168)('Trondheim', 150166)('Pingdu', 150123)('Quelimane', 150116)('Rockford', 150115)('Munger (Monghyr)', 150112)('Kanchipuram', 150100)('Rufisque', 150000)('North Dum Dum', 149965)('Cabo de Santo Agostinho', 149964)('Mandi Burewala', 149900)('Dijon', 149867)('Matsue', 149821)('Kawanishi', 149794)('Kabankalan', 149769)('Neuss', 149702)('Baia Mare', 149665)('Brest', 149634)('Enschede', 149544)('Pomona', 149473)('Metairie', 149428)('Paterson', 149222)('Cama\u00e7ari', 149146)('Overland Park', 149080)('Jaffna', 149000)('Nikopol', 149000)('Khoy', 148944)('Richmond', 148867)('Bulaq al-Dakrur', 148787)('Haarlem', 148772)('Hat Yai', 148632)('Karimnagar', 148583)('Ji\u00b4an', 148583)('Bharatpur', 148519)('Buzau', 148372)('Longkou', 148362)('Sikar', 148272)('Talisay', 148110)('Langfang', 148105)('Kuching', 148059)('Hitachinaka', 148006)('al-Manama', 148000)('Reading', 148000)('Kumo', 148000)('Stara Zagora', 147939)('Valencia', 147924)('Vaughan', 147889)('Niiza', 147744)('Nagareyama', 147738)('Shomolu', 147700)('Formosa', 147636)('Santa Rosa', 147595)('Koje', 147562)('Albacete', 147527)('Tottori', 147523)('Sullana', 147361)('Syracuse', 147306)('Hardwar (Haridwar)', 147305)('Kragujevac', 147305)('Dabgram', 147217)('Calbayog', 147187)('Morena', 147124)('Kimchon', 147027)('Elektrostal', 147000)('Kansas City', 146866)('Tama', 146712)('Dundee', 146690)('Nonsan', 146619)('\u0160iauliai', 146563)('Noida', 146514)('Bengkulu', 146439)('Hampton', 146437)('Ciudad Valles', 146411)('Circik', 146400)('West Bromwich', 146386)('Pokhara', 146318)('Zhoukou', 146288)('Hapur', 146262)('Le Mans', 146105)('Suining', 146086)('Sobral', 146005)('Osmaniye', 146003)('Iruma', 145922)('Sousse', 145900)('Lalitapur', 145847)('Las Heras', 145823)('Jhelum', 145800)('Banha', 145792)('Oldbury/Smethwick (Warley)', 145542)('\u00c7orum', 145495)('Navolato', 145396)('Getafe', 145371)('Ota', 145317)('San Luis R\u00edo Colorado', 145276)('Itaja\u00ed', 145197)('Burlington', 145150)('Vung Tau', 145145)('Bhusawal', 145143)('Khandwa', 145133)('Middlesbrough', 145000)('Karawang', 145000)('K\u00fctahya', 144761)('Rybnik', 144582)('Yulin', 144467)('Malayer', 144373)('Yamuna Nagar', 144346)('al-Qamishliya', 144286)('Santa Maria', 144282)('Jinhua', 144280)('Liu\u00b4an', 144248)('Salzburg', 144247)('Chapec\u00f3', 144158)('Lakewood', 144126)('Oxford', 144000)('Hatay (Antakya)', 143982)('P\u00e9njamo', 143927)('Sonipat (Sonepat)', 143922)('Huddersfield', 143726)('Tenali', 143726)('Reggio nell\u00b4 Emilia', 143664)('Bushehr', 143641)('Vancouver', 143560)('Banda Aceh', 143409)('Aqtau', 143400)('Coquimbo', 143353)('Qaemshahr', 143286)('Banja Luka', 143079)('Irvine', 143072)('Maroua', 143000)('Aurora', 142990)('Oka-Akoko', 142900)('Omuta', 142889)('Palu', 142800)('Qarchak', 142690)('Shuangcheng', 142659)('Juliaca', 142576)('Pagadian', 142515)('Atyrau', 142500)('Almere', 142465)('C\u00e1diz', 142449)('Chingola', 142400)('Murom', 142400)('Moreno Valley', 142381)('Suizhou', 142302)('San Andr\u00e9s Tuxtla', 142251)('Kuri', 142173)('Ankang', 142170)('Pinar del R\u00edo', 142100)('Salerno', 142055)('Alcorc\u00f3n', 142048)('Kirikkale', 142044)('Cadiz', 141954)('al-Fashir', 141884)('Dashhowuz', 141800)('Bago', 141721)('al-Khubar', 141700)('Pasadena', 141674)('Adiyaman', 141529)('Sadiqabad', 141500)('Osorno', 141468)('Guanajuato', 141215)('Kolpino', 141200)('Toledo', 141174)('Rach Gia', 141132)('Poole', 141000)('Bayamo', 141000)('Ikare', 140800)('Jubayl', 140800)('Margilon', 140800)('Norilsk', 140800)('Almetjevsk', 140700)('Potos\u00ed', 140642)('Huelva', 140583)('Caguas', 140502)('Navojoa', 140495)('Dayr al-Zawr', 140459)('Raurkela Civil Township', 140408)('Beni-Mellal', 140212)('La Romana', 140204)('Oshawa', 140173)('Weinan', 140169)('Cotia', 140042)('Hayward', 140030)('Blackburn', 140000)('Kandy', 140000)('Kollam (Quilon)', 139852)('Komaki', 139827)('Le\u00f3n', 139809)('Brownsville', 139722)('Castell\u00f3n de la Plana [Castell', 139712)('Jessore', 139710)('Heidelberg', 139672)('Lages', 139570)('Bridgeport', 139529)('Kumbakonam', 139483)('Longjing', 139417)('Santa Ana', 139389)('Hollywood', 139357)('Ferraz de Vasconcelos', 139283)('Ome', 139216)('Ingraj Bazar (English Bazar)', 139204)('Sapele', 139200)('Oakville', 139192)('Chong-up', 139111)('Bolton', 139020)('Newport', 139000)('Da\u00b4an', 138963)('Kadoma', 138953)('Timkur', 138903)('\u00dcrgenc', 138900)('Mejicanos', 138800)('Monywa', 138600)('Deba Habe', 138600)('Jaramana', 138469)('Ravenna', 138418)('Qods', 138278)('Warren', 138247)('Trabzon', 138234)('Yamaguchi', 138210)('Port-Louis', 138200)('La Rioja', 138117)('Novomoskovsk', 138100)('Arnhem', 138020)('Bamenda', 138000)('Lengshuijiang', 137994)('Zit\u00e1cuaro', 137970)('Torrance', 137946)('Eugene', 137893)('Naga', 137810)('Hafar al-Batin', 137800)('Darmstadt', 137776)('Batumi', 137700)('Jacobabad', 137700)('Paderborn', 137647)('Sittwe (Akyab)', 137600)('Mwene-Ditu', 137459)('Pembroke Pines', 137427)('La Serena', 137409)('Tanga', 137400)('Peristerion', 137288)('Calama', 137265)('al-Rusayfa', 137247)('Clermont-Ferrand', 137140)('Laiyang', 137080)('Chechon', 137070)('Amroha', 137061)('Serampore', 137028)('Bat Yam', 137000)('Dimitrovgrad', 137000)('Higashimurayama', 136970)('Salem', 136924)('Walbrzych', 136923)('Minna', 136900)('Chapra', 136877)('Pali', 136842)('Xianning', 136811)('Maunath Bhanjan', 136697)('Badajoz', 136613)('Dali', 136554)('Yonago', 136461)('Anda', 136446)('Jincheng', 136396)('Saint Catharines', 136216)('Adoni', 136182)('Pervouralsk', 136100)('Jaunpur', 136062)('Indaiatuba', 135968)('Envigado', 135848)('Tirunelveli', 135825)('Hortol\u00e2ndia', 135755)('Boca del R\u00edo', 135721)('Zaanstad', 135621)('San Mateo', 135603)('Amiens', 135501)('Bahraich', 135400)('Comilla', 135313)('Boma', 135284)('Sirjan', 135024)('Matsubara', 135010)('Preston', 135000)('Podgorica', 135000)('San Fernando del Valle de Cata', 134935)('Bojnurd', 134835)('Sosan', 134746)('Allende', 134645)('Ciudad Losada', 134501)('Longyan', 134481)('Musashino', 134426)('Xichang', 134419)('R\u00edo Cuarto', 134355)('Aix-en-Provence', 134222)('Djougou', 134099)('Tsuchiura', 134072)('Gadag Betigeri', 134051)('Silao', 134037)('Pasuruan', 134019)('Caxias', 133980)('Limoges', 133968)('Panabo', 133950)('Pasadena', 133936)('Proddatur', 133914)('Wendeng', 133910)('Bene Beraq', 133900)('Ciudad del Este', 133881)('Bruxelles [Brussel]', 133859)('Macuspana', 133795)('Koronadal', 133786)('Himki', 133700)('Panevezys', 133695)('San Juan Bautista Tuxtepec', 133675)('Ordu', 133642)('Hailun', 133565)('Escondido', 133559)('Binzhou', 133555)('Joetsu', 133505)('Chittoor', 133462)('Shihung', 133443)('N\u00eemes', 133424)('San Lorenzo', 133395)('S\u00e3o Caetano do Sul', 133321)('Shikarpur', 133300)('Barrackpur', 133265)('Miyakonojo', 133183)('Linhe', 133183)('Tychy', 133178)('Link\u00f6ping', 133168)('Valdivia', 133106)('Bharuch (Broach)', 133102)('Wuwei', 133101)('Khanewal', 133000)('Duyun', 132971)('Misato', 132957)('Bala\u0161iha', 132900)('Tours', 132820)('Stockport', 132813)('Cienfuegos', 132770)('Mishan', 132744)('Itu', 132736)('Naihati', 132701)('Long Xuyen', 132681)('Nevinnomyssk', 132600)('Pjatigorsk', 132500)('Shangrao', 132455)('Saint-Louis', 132400)('Korolev', 132400)('Victoria de las Tunas', 132350)('Maragheh', 132318)('San Crist\u00f3bal de las Casas', 132317)('Changji', 132260)('Meixian', 132156)('Ferrara', 132127)('Serpuhov', 132000)('Yushu', 131861)('Kakamigahara', 131831)('Salala', 131813)('Tiefa', 131807)('Sunnyvale', 131760)('Shillong', 131719)('Tong-yong', 131717)('Savannah', 131510)('Taunggyi (Taunggye)', 131500)('Saint-Denis', 131480)('Mutare', 131367)('Nossa Senhora do Socorro', 131351)('Guacara', 131334)('Kongju', 131229)('Duma', 131158)('Huai\u00b4an', 131149)('Sambalpur', 131138)('Yongju', 131097)('Marawi', 131090)('Rimini', 131062)('Dabrowa G\u00f3rnicza', 131037)('Plock', 131011)('Bafoussam', 131000)('Mbeya', 130800)('Ibarra', 130643)('Daito', 130594)('Nawabganj', 130577)('Valle de Santiago', 130557)('Junagadh', 130484)('Seto', 130470)('Dagupan', 130328)('Valera', 130281)('al-Salimiya', 130215)('Hafizabad', 130200)('Leiyang', 130115)('Guaymas', 130108)('Satu Mare', 130059)('Zalantun', 130031)('Lobito', 130000)('Yamoussoukro', 130000)('Berdjansk', 130000)('Pinsk', 130000)('Rae Bareli', 129904)('Soyapango', 129800)('Battambang', 129800)('Elblag', 129782)('Sagay', 129765)('Parna\u00edba', 129756)('Meikhtila', 129700)('Hu\u00e1nuco', 129688)('Po\u00e7os de Caldas', 129683)('Quevedo', 129631)('Opole', 129553)('Colima', 129454)('Kupang', 129300)('Tebing Tinggi', 129300)('\u00b4s-Hertogenbosch', 129170)('Percut Sei Tuan', 129000)('Potsdam', 128983)('Rewa', 128981)('Fontana', 128929)('Weihai', 128888)('Orange', 128821)('Skikda', 128747)('Botosani', 128730)('Dolores Hidalgo', 128675)('Aydin', 128651)('Gurgaon', 128608)('Loudi', 128418)('Naperville', 128358)('Benguela', 128300)('Alexandria', 128283)('Biskra', 128281)('Qingzhou', 128258)('Usak', 128162)('Teres\u00f3polis', 128079)('Gweru', 128037)('Angren', 128000)('Khammam', 127992)('Longueuil', 127977)('Kariya', 127969)('Lagos de Moreno', 127949)('[San Crist\u00f3bal de] la Laguna', 127945)('Piedras Negras', 127898)('Nazret', 127842)('Dinajpur', 127815)('Barreiras', 127801)('Mazar-e-Sharif', 127800)('Rancho Cucamonga', 127743)('San Miguel', 127696)('Thai Nguyen', 127643)('Castanhal', 127634)('Birjand', 127608)('Urayasu', 127550)('Altamira', 127490)('Beppu', 127486)('Hong Gai', 127484)('Toamasina', 127441)('Grand Prairie', 127427)('Odintsovo', 127400)('W\u00fcrzburg', 127350)('Blida (el-Boulaida)', 127284)('Binjai', 127222)('Niihama', 127207)('Bulandshahr', 127201)('Ekibastuz', 127200)('Cork', 127187)('Gy\u00f6r', 127119)('Warraq al-Arab', 127108)('Logro\u00f1o', 127093)('Minoo', 127026)('Pavlograd', 127000)('Sjeverodonetsk', 127000)('Slovjansk', 127000)('Uzgorod', 127000)('Ramat Gan', 126900)('Fujieda', 126897)('Qidong', 126872)('Alagoinhas', 126820)('Huaihua', 126785)('Itapecerica da Serra', 126672)('Abiko', 126670)('Khon Kaen', 126500)('T\u00faxpam', 126475)('Luohe', 126438)('Yuanlin', 126402)('Sibu', 126381)('East Los Angeles', 126379)('Roxas', 126352)('Ilam', 126346)('V\u00e4ster\u00e5s', 126328)('Yangmei', 126323)('Uruguaiana', 126305)('T\u00e9mara', 126303)('Syrakusa', 126282)('Amersfoort', 126270)('San Pedro Garza Garc\u00eda', 126147)('Hobart', 126118)('Warri', 126100)('Navsari', 126089)('Paranagu\u00e1', 126076)('Malkajgiri', 126066)('Pak Kret', 126055)('Gorz\u00f3w Wielkopolski', 126019)('Fullerton', 126003)('Chinhae', 125997)('Ibirit\u00e9', 125982)('Cartago', 125884)('Sandakan', 125841)('Timon', 125812)('Sukabumi', 125766)('Bender (T\u00eeghina)', 125700)('al-Tuqba', 125700)('Lubao', 125699)('Punta Arenas', 125631)('Guanare', 125621)('Luzi\u00e2nia', 125597)('Maca\u00e9', 125597)('Nobeoka', 125547)('Bida', 125500)('Midnapore (Medinipur)', 125498)('Miraj', 125407)('Geelong', 125382)('Raj Nandgaon', 125371)('Chuzhou', 125341)('Kohat', 125300)('Tarija', 125255)('Alandur', 125244)('Regensburg', 125236)('Puri', 125199)('Digos', 125171)('Tondabayashi', 125094)('Piatra Neamt', 125070)('Navadwip', 125037)('Recklinghausen', 125022)('Sirsa', 125000)('Corona', 124966)('Flint', 124943)('Orehovo-Zujevo', 124900)('Kafr al-Shaykh', 124819)('Cizah', 124800)('G\u00f6ttingen', 124775)('San Pedro de Macor\u00eds', 124735)('Mocuba', 124700)('Paradise', 124682)('Kamy\u0161in', 124600)('Mesquite', 124523)('Korba', 124501)('Te\u00f3filo Otoni', 124489)('Sterling Heights', 124471)('Faizabad', 124437)('Alor Setar', 124412)('Waru', 124300)('Cuauht\u00e9moc', 124279)('Selayang Baru', 124228)('Kaiyuan', 124219)('Ueda', 124217)('Villeurbanne', 124215)('\u00d6rebro', 124207)('Milagro', 124177)('Sangju', 124116)('Comodoro Rivadavia', 124104)('Etawah', 124072)('Manzanillo', 124014)('Kashihara', 124013)('Norwich', 124000)('Pangkal Pinang', 124000)('Or\u0161a', 124000)('Sioux Falls', 123975)('Linqing', 123958)('Pathankot', 123930)('Mufulira', 123900)('Iguala de la Independencia', 123883)('Loja', 123875)('Le\u00f3n', 123865)('San Miguel', 123824)('Magelang', 123800)('Nakhon Sawan', 123800)('Moji-Gua\u00e7u', 123782)('Metz', 123776)('Zacatecas', 123700)('Chaohu', 123676)('Malaybalay', 123672)('New Haven', 123626)('Matsusaka', 123582)('K\u00f6kshetau', 123400)('Novot\u0161eboksarsk', 123400)('Edirne', 123383)('Wloclawek', 123373)('Laohekou', 123366)('Gandhinagar', 123359)('Dujiangyan', 123357)('Ikire', 123300)('\u00c7orlu', 123300)('Palghat (Palakkad)', 123289)('Isesaki', 123285)('Matanzas', 123273)('Zhumadian', 123232)('Tlajomulco de Z\u00fa\u00f1iga', 123220)('Khan Yunis', 123175)('R\u00edobamba', 123163)('Makurdi', 123100)('Esmeraldas', 123045)('Mendoza', 123027)('Veraval', 123000)('Bremerhaven', 122735)('Hoshiarpur', 122705)('Mergui (Myeik)', 122700)('Bern', 122700)('Poryong', 122604)('Blitar', 122600)('Ambala', 122596)('Lafia', 122500)('Serang', 122400)('al-Mukalla', 122400)('Topeka', 122377)('Norrk\u00f6ping', 122199)('Amadora', 122106)('Maastricht', 122087)('Kwang-yang', 122052)('Zama', 122046)('Kisarazu', 121967)('Wolfsburg', 121954)('Pleven', 121952)('Linchuan', 121949)('Tulancingo de Bravo', 121946)('Palmas', 121919)('Isparta', 121911)('Pindamonhangaba', 121904)('Sitapur', 121842)('Daloa', 121842)('Concord', 121780)('Zinacantepec', 121715)('Chorz\u00f3w', 121708)('T\u0161erkessk', 121700)('Misrata', 121669)('Bhiwani', 121629)('Muzaffargarh', 121600)('At\u0161insk', 121600)('Evansville', 121582)('Hartford', 121578)('Miryang', 121501)('Tarn\u00f3w', 121494)('Cuddapah', 121463)('Jiaonan', 121397)('Rotherham', 121380)('Bhimavaram', 121314)('Francisco Morato', 121197)('Krishnanagar', 121110)('Bottrop', 121097)('San Mart\u00edn Texmelucan', 121093)('Noda', 121030)('Fayetteville', 121015)('Cambridge', 121000)('Magadan', 121000)('Ishinomaki', 120963)('Zinder', 120892)('Randfontein', 120838)('Sassari', 120803)('Santa Coloma de Gramenet', 120802)('Bag\u00e9', 120793)('Probolinggo', 120770)('Cedar Rapids', 120758)('Oulu', 120753)('Mit\u0161urinsk', 120700)('Tuguegarao', 120645)('Elizabeth', 120568)('Sanmenxia', 120523)('Kislovodsk', 120400)('Chandannagar', 120378)('Mandya', 120265)('Antsirab\u00e9', 120239)('Sapucaia do Sul', 120217)('Bogra', 120170)('Copiap\u00f3', 120128)('Dibrugarh', 120127)('Remscheid', 120125)('Heyuan', 120101)('Manzhouli', 120023)('Bukan', 120020)('Lhasa', 120000)('Ilagan', 119990)('Nandyal', 119813)('Dordrecht', 119811)('Inisa', 119800)('Yanbu', 119800)('Balurghat', 119796)('R\u00e2mnicu V\u00e2lcea', 119741)('Fujinomiya', 119714)('Baliuag', 119675)('Kawachinagano', 119666)('Car\u00fapano', 119639)('Dunedin', 119600)('Heilbronn', 119526)('Monza', 119516)('Cabo Frio', 119503)('Hebron', 119401)('Jelets', 119400)('Itapetininga', 119391)('Imabari', 119357)('San Nicol\u00e1s de los Arroyos', 119302)('Aizuwakamatsu', 119287)('Mallawi', 119283)('Patos de Minas', 119262)('Higashihiroshima', 119166)('San Juan', 119152)('Lansing', 119128)('El Jadida', 119083)('Alt\u0161evsk', 119000)('Camaragibe', 118968)('Habikino', 118968)('Ayacucho', 118960)('Tepatitl\u00e1n de Morelos', 118948)('Lianyuan', 118858)('Quilpu\u00e9', 118857)('Mart\u00ednez de la Torre', 118815)('Ebetsu', 118805)('Hofu', 118751)('Lancaster', 118718)('Fort Collins', 118652)('Seversk', 118600)('Kuytun', 118553)('Suceava', 118549)('Surigao', 118534)('Orizaba', 118488)('Kiryu', 118326)('Karab\u00fck', 118285)('San Carlos', 118259)('Kilis', 118245)('Namibe', 118200)('Zielona G\u00f3ra', 118182)('Luanshya', 118100)('Neyveli', 118080)('Sri Jayawardenepura Kotte', 118000)('Drobeta-Turnu Severin', 117865)('Apatzing\u00e1n', 117849)('Bergamo', 117837)('Khanpur', 117800)('Morogoro', 117800)('Okinawa', 117748)('Helsingborg', 117737)('Besan\u00e7on', 117733)('San Juan del Monte', 117680)('Fatehpur', 117675)('Coral Springs', 117549)('Tanauan', 117539)('Sylhet', 117396)('Alanya', 117300)('Puqi', 117264)('Yaizu', 117258)('Pforzheim', 117227)('Shagamu', 117200)('Noginsk', 117200)('Leiden', 117196)('B\u00e9ja\u00efa', 117162)('Hamilton', 117100)('J\u00f6nk\u00f6ping', 117095)('Stamford', 117083)('Atlixco', 117019)('Catia La Mar', 117012)('Thousand Oaks', 117005)('Cilegon', 117000)('Bragan\u00e7a Paulista', 116929)('Masjed-e-Soleyman', 116883)('Mahbubnagar', 116833)('Vallejo', 116760)('Budaun', 116695)('Escobar', 116675)('Porbandar', 116671)('Palmdale', 116670)('Offenbach am Main', 116627)('Concordia', 116485)('Richmond Hill', 116428)('Ubon Ratchathani', 116300)('Navoi', 116300)('Velikije Luki', 116300)('Machakos', 116293)('Columbia', 116278)('El Tigre', 116256)('Brugge', 116246)('Novokuiby\u0161evsk', 116200)('Hongjiang', 116188)('Herakleion', 116178)('Delicias', 116132)('Ulm', 116103)('Lysyt\u0161ansk', 116000)('El Monte', 115965)('Abilene', 115930)('Thunder Bay', 115913)('Taliao', 115897)('Hanam', 115812)('Toyokawa', 115781)('Curic\u00f3', 115766)('Neftekamsk', 115700)('Pescara', 115698)('Uvira', 115590)('Ebina', 115571)('Ixtlahuaca', 115548)('Maribor', 115532)('North Las Vegas', 115488)('Silchar', 115483)('Kimje', 115427)('Saqqez', 115394)('Mostaganem', 115212)('Concepcion', 115171)('Rodriguez (Montalban)', 115167)('Berhampore (Baharampur)', 115144)('Nepean', 115100)('Queimados', 115020)('Gojra', 115000)('Juba', 114980)('Aragua\u00edna', 114948)('Purnea (Purnia)', 114912)('Olmalik', 114900)('Bankura', 114876)('Daugavpils', 114829)('Ingolstadt', 114826)('Asaka', 114815)('Sungai Petani', 114763)('Cape Breton', 114733)('Gera', 114718)('Garanhuns', 114603)('Qinzhou', 114586)('Sariaya', 114568)('Baquba', 114516)('Lausanne', 114500)('Ajman', 114395)('Cianjur', 114300)('Renqiu', 114256)('Phan Thi\u00eat', 114236)('Kallithea', 114233)('Rajapalaiyam', 114202)('Latina', 114099)('Titagarh', 114085)('Yuyao', 114065)('Cam Ranh', 114041)('East York', 114034)('Halisahar', 114028)('Guigang', 114025)('Ann Arbor', 114024)('Ipswich', 114000)('Caen', 113987)('Kaili', 113958)('Halifax', 113910)('Jabaliya', 113901)('Beaumont', 113866)('Leninsk-Kuznetski', 113800)('Waco', 113726)('Bilbays', 113608)('Vit\u00f3ria de Santo Ant\u00e3o', 113595)('Yongchon', 113511)('Sachon', 113494)('Pilar', 113428)('Macon', 113336)('Independence', 113288)('Hathras', 113285)('Yan\u00b4an', 113277)('Malasiqui', 113190)('Santa Rita', 113135)('Orl\u00e9ans', 113126)('Kairouan', 113100)('Larisa', 113090)('Watford', 113080)('Barbacena', 113079)('Tarragona', 113016)('Maradi', 112965)('Peoria', 112936)('Salzgitter', 112934)('Beihai', 112673)('Xuangzhou', 112673)('Inglewood', 112580)('Vinh', 112455)('Nkongsamba', 112454)('El Mante', 112453)('Nador', 112450)('General Mariano Alvarez', 112446)('Bhir (Bid)', 112434)('Nyiregyh\u00e1za', 112419)('Koszalin', 112375)('Quzhou', 112373)('Abha', 112300)('Lerdo', 112272)('Gonder', 112249)('Lleida (L\u00e9rida)', 112207)('Kueishan', 112195)('T\u00e9bessa', 112007)('Slough', 112000)('Paramaribo', 112000)('Kiziltepe', 112000)('Jevpatorija', 112000)('Eldoret', 111882)('Tanshui', 111882)('Pallavaram', 111866)('Yong\u00b4an', 111762)('Innsbruck', 111752)('Sohumi', 111700)('Higashikurume', 111666)('Ikoma', 111645)('Urdaneta', 111582)('Zonguldak', 111542)('Ciparay', 111500)('Oktjabrski', 111500)('Springfield', 111454)('Hagonoy', 111425)('Simi Valley', 111351)('Kitami', 111295)('Abaetetuba', 111258)('Gonbad-e Qabus', 111253)('Saveh', 111245)('Awka', 111200)('Sergijev Posad', 111100)('Taitung', 111039)('San Jose', 111009)('Exeter', 111000)('Koganei', 110969)('Girardot', 110963)('Cottbus', 110894)('Haarlemmermeer', 110722)('Polomolok', 110709)('Arzamas', 110700)('Buga', 110699)('Almoloya de Ju\u00e1rez', 110550)('Santiago', 110531)('Tanza', 110517)('Ac\u00e1mbaro', 110487)('Ozamis', 110420)('Acu\u00f1a', 110388)('Spanish Town', 110379)('Mulhouse', 110359)('Reutlingen', 110343)('Anand', 110266)('Lafayette', 110257)('Tlemcen (Tilimsen)', 110242)('Zoetermeer', 110214)('San Luis', 110136)('Zixing', 110048)('Iwatsuki', 110034)('Mango', 110024)('Chincha Alta', 110016)('Mozyr', 110000)('Kiseljovsk', 110000)('Tema', 109975)('Ja\u00fa', 109965)('Santipur', 109956)('Townsville', 109914)('F\u00fcrth', 109771)('Bhind', 109755)('Tunja', 109740)('Vicenza', 109738)('Mishima', 109699)('Gilbert', 109697)('Lhokseumawe', 109600)('Bahawalnagar', 109600)('Novotroitsk', 109600)('Carrollton', 109576)('Bellevue', 109569)('Liyang', 109520)('Rudnyy', 109500)('Termiz', 109500)('Mexico', 109481)('Gondiya', 109470)('Korhogo', 109445)('Butembo', 109406)('Manzanillo', 109350)('Legnica', 109335)('Mbour', 109300)('Yizheng', 109268)('Ja\u00e9n', 109247)('Lauro de Freitas', 109236)('Yumen', 109234)('Siegen', 109225)('Tiruvannamalai', 109196)('Cambridge', 109186)('Reykjav\u00edk', 109184)('Guatire', 109121)('Ourense (Orense)', 109120)('Goma', 109094)('Brahmanbaria', 109032)('Kamjanets-Podilskyi', 109000)('Franco da Rocha', 108964)('Biserta', 108900)('West Valley City', 108896)('Guadalupe', 108881)('Stavanger', 108848)('Uiwang', 108788)('Clarksville', 108787)('Costa Mesa', 108724)('Handa', 108600)('Muridke', 108600)('Yeotmal (Yavatmal)', 108578)('Florencia', 108574)('Kulti-Barakar', 108518)('Liling', 108504)('San Francisco de Macor\u00eds', 108485)('Teixeira de Freitas', 108441)('Hualien', 108407)('My Tho', 108404)('Peoria', 108364)('Yuncheng', 108359)('Varginha', 108314)('Moga', 108304)('Obninsk', 108300)('Shivapuri', 108277)('Muroran', 108275)('San Jose', 108254)('Ribeir\u00e3o Pires', 108121)('Ara\u00b4ar', 108100)('Maicao', 108053)('al-Raqqa', 108020)('Huejutla de Reyes', 108017)('Bidar', 108016)('Cajamarca', 108009)('Koblenz', 108003)('Komatsu', 107937)('Shanwei', 107847)('Naju', 107831)('Gombe', 107800)('Pak Pattan', 107800)('Mahabad', 107799)('South Bend', 107789)('Sabar\u00e1', 107781)('Terni', 107770)('Catanduva', 107761)('Rio Verde', 107755)('Sogamoso', 107728)('Silay', 107722)('General Trias', 107691)('Botucatu', 107663)('Yatsushiro', 107661)('Lashio (Lasho)', 107600)('Guntakal', 107592)('Iida', 107583)('Bawshar', 107500)('Forl\u00ec', 107475)('Unnao', 107425)('Kansk', 107400)('Barasat', 107365)('Colatina', 107354)('Cixi', 107329)('Downey', 107323)('Gloucester', 107314)('B\u00e9char', 107311)('Waterbury', 107271)('Varamin', 107233)('Tambaram', 107187)('Tabaco', 107166)('Abohar', 107163)('Calabozo', 107146)('Siirt', 107100)('Tokuyama', 107078)('Ksar el Kebir', 107065)('Manchester', 107006)('Yuanjiang', 107004)('Gloucester', 107000)('Taman', 107000)('Kokubunji', 106996)('Andimeshk', 106923)('Akishima', 106914)('Moers', 106837)('Depok', 106800)('Igboho', 106800)('Santa Cruz do Sul', 106734)('Iwakuni', 106647)('Kalisz', 106641)('Allentown', 106632)('Cabuyao', 106630)('Pilibhit', 106605)('Gab\u00e8s', 106600)('Rouen', 106592)('Valparai', 106523)('McAllen', 106414)('Da Lat', 106409)('Viransehir', 106400)('Boulogne-Billancourt', 106367)('Bozhou', 106346)('Glazov', 106300)('Saint Helens', 106293)('Linhares', 106278)('Kusatsu', 106232)('Joliet', 106221)('Hidalgo', 106198)('Bergisch Gladbach', 106150)('Kuwana', 106121)('Gonda', 106078)('Tekirdag', 106077)('Tangail', 106004)('Sutton Coldfield', 106001)('Cheltenham', 106000)('Abottabad', 106000)('Novopolotsk', 106000)('Solikamsk', 106000)('Surendranagar', 105973)('Calapan', 105910)('Mati', 105908)('Ejigbo', 105900)('Emmen', 105853)('Zwolle', 105819)('Paarl', 105768)('Midsayap', 105760)('Prome (Pyay)', 105700)('Sarapul', 105700)('Schaerbeek', 105692)('Pozuelos', 105690)('Sanda', 105643)('Khorramshahr', 105636)('Kecskem\u00e9t', 105606)('Sliven', 105530)('Hikone', 105508)('Namur', 105419)('Abbotsford', 105403)('Qutubullapur', 105380)('Beawar', 105363)('Jinchang', 105287)('Fu\u00b4an', 105265)('Ust-Ilimsk', 105200)('Los Cabos', 105199)('Lowell', 105167)('Provo', 105166)('Sz\u00e9kesfeh\u00e9rv\u00e1r', 105119)('Perpignan', 105115)('Apucarana', 105114)('Citeureup', 105100)('Siem Reap', 105100)('West Covina', 105080)('Suqian', 105021)('Koudougou', 105000)('Agege', 105000)('Jenakijeve', 105000)('Comit\u00e1n de Dom\u00ednguez', 104986)('Trento', 104906)('\u0160t\u0161olkovo', 104900)('Shahrud', 104765)('Osijek', 104761)('Nantou', 104723)('Henzada (Hinthada)', 104700)('Hindupur', 104651)('Gandhidham', 104585)('Shishou', 104571)('Ume\u00e5', 104512)('York', 104425)('Mezduret\u0161ensk', 104400)('Hengshui', 104269)('Karaman', 104200)('Wichita Falls', 104197)('Haldwani-cum-Kathgodam', 104195)('Cunduac\u00e1n', 104164)('Barretos', 104156)('Zwickau', 104146)('Matar\u00f3', 104095)('Hildesheim', 104013)('Afyon', 103984)('Toda', 103969)('Kingston', 103962)('Cauayan', 103952)('Oldham', 103931)('R\u00edo Bravo', 103901)('Erie', 103717)('Sekondi-Takoradi', 103653)('Daly City', 103621)('Nancy', 103605)('Myingyan', 103600)('Guelph', 103593)('Tellicherry (Thalassery)', 103579)('Marv Dasht', 103579)('Parakou', 103577)('Jamalpur', 103556)('Namwon', 103544)('Pemalang', 103500)('Usolje-Sibirskoje', 103500)('Citrus Heights', 103455)('Guaratinguet\u00e1', 103433)('Ise-Ekiti', 103400)('Tando Adam', 103400)('Witten', 103384)('Klaten', 103300)('Ibb', 103300)('Jaranwala', 103300)('Elista', 103300)('Norwalk', 103298)('Pabna', 103277)('Cachoeirinha', 103240)('Danjiangkou', 103211)('Tajimi', 103171)('Cod\u00f3', 103153)('Algeciras', 103106)('Fujin', 103104)('Lungtan', 103088)('Salatiga', 103000)('Wardha', 102985)('Schwerin', 102878)('Temapache', 102824)('Sanya', 102820)('Guangshui', 102770)('Gary', 102746)('Berkeley', 102743)('Chilapa de Alvarez', 102716)('Ikeda', 102710)('Olomouc', 102702)('Aksaray', 102681)('Rishra', 102649)('Huangshan', 102628)('Serekunda', 102600)('Ugep', 102600)('Jaragu\u00e1 do Sul', 102580)('Arusha', 102500)('Grudziadz', 102434)('Ceyhan', 102412)('Xingcheng', 102384)('Gingoog', 102379)('Cubat\u00e3o', 102372)('Slupsk', 102370)('Santa Clara', 102361)('Green Bay', 102313)('Erzincan', 102304)('Jastrzebie-Zdr\u00f3j', 102294)('Cape Coral', 102286)('Dumaguete', 102265)('Le-Cap-Ha\u00eftien', 102233)('Itabira', 102217)('Khairpur', 102200)('Jalib al-Shuyukh', 102178)('Bhuj', 102176)('Fukaya', 102156)('Arvada', 102153)('Zhucheng', 102134)('Pueblo', 102121)('San Fernando', 102082)('Kunshan', 102052)('Novara', 102037)('Shah Alam', 102019)('Tete', 101984)('Saint John\u00b4s', 101936)('Novo\u0161ahtinsk', 101900)('Sandy', 101853)('Coquitlam', 101820)('Potchefstroom', 101817)('Francistown', 101805)('Mit Ghamr', 101801)('Arayat', 101792)('Ise', 101732)('Chishtian Mandi', 101700)('Votkinsk', 101700)('Modinagar', 101660)('Gudivada', 101656)('Sakata', 101651)('Puno', 101578)('Ede', 101574)('Daska', 101500)('Athens-Clarke County', 101489)('Basirhat', 101409)('Bismil', 101400)('Bayawan (Tulong)', 101391)('Saanich', 101388)('Cambridge', 101355)('Kasuga', 101344)('B\u00e6rum', 101340)('Itaituba', 101320)('Kalemie', 101309)('Cibinong', 101300)('Villa Nueva', 101295)('Naogaon', 101266)('Tartu', 101246)('Kidapawan', 101205)('Marbella', 101144)('Kyzyl', 101100)('Ventanilla', 101056)('Araras', 101046)('Daraga (Locsin)', 101031)('Marilao', 101017)('Epe', 101000)('Mary', 101000)('Krasnyi Lut\u0161', 101000)('Stahanov', 101000)('Lida', 101000)('Soligorsk', 101000)('Westminster', 100940)('Basildon', 100924)('San Buenaventura', 100916)('Zabol', 100887)('Hidalgo del Parral', 100881)('Uttarpara-Kotrung', 100867)('Ongole', 100836)('Kamagaya', 100821)('Mahajanga', 100807)('Sancti-Sp\u00edritus', 100751)('Erlangen', 100750)('Tsuruoka', 100713)('Gatineau', 100702)('Resende', 100627)('Beau Bassin-Rose Hill', 100616)('Portsmouth', 100565)('Livonia', 100545)('North Barrackpur', 100513)('Guna', 100490)('Haining', 100478)('Shahr-e Kord', 100477)('al-Arish', 100447)('Serov', 100400)('Dobric', 100399)('Subotica', 100386)('Atibaia', 100356)('Haldia', 100347)('Burbank', 100316)('Hoya', 100313)('Nablus', 100231)('Habra', 100223)('Zelenodolsk', 100200)('Kanchrapara', 100194)('San Francisco del Rinc\u00f3n', 100149)('Arecibo', 100131)('Tiaret', 100118)('Zeleznodoroznyi', 100100)('Tonk', 100079)('Guaynabo', 100053)('Nishio', 100032)('Pouso Alegre', 100028)('Kaiserslautern', 100025)('Worthing', 100000)('Malita', 100000)('Negombo', 100000)('Kine\u0161ma', 100000)('Clearwater', 99936)('Taxco de Alarc\u00f3n', 99907)('Nazilli', 99900)('Trier', 99891)('Dipolog', 99862)('Portmore', 99799)('Zumpango', 99781)('Jena', 99779)('Tokai', 99738)('San Pedro Cholula', 99734)('Lerma', 99714)('Palangka Raya', 99693)('Lambar\u00e9', 99681)('Sirajganj', 99669)('Ezeiza', 99578)('Moundou', 99500)('Tokat', 99500)('Iserlohn', 99474)('Xai-Xai', 99442)('Diourbel', 99400)('Toledo', 99387)('Cavite', 99367)('Ciudad Ojeda', 99354)('Gurue', 99300)('Tecom\u00e1n', 99296)('Pingliang', 99265)('Fuqing', 99193)('Liberec', 99155)('Fianarantsoa', 99005)('Oleksandrija', 99000)('T\u00e2rgoviste', 98980)('Focsani', 98979)('Crato', 98965)('Lund', 98948)('al-Qatif', 98900)('Touliu', 98900)('Champdani', 98818)('Danao', 98781)('Inazawa', 98746)('Xinzhou', 98667)('Orai', 98640)('Pudukkottai', 98619)('Dadu', 98600)('Passos', 98570)('Jieyang', 98531)('T\u00e2rgu Jiu', 98524)('Ciego de \u00c1vila', 98505)('Bandar-e Anzali', 98500)('Vacoas-Phoenix', 98464)('Mayag\u00fcez', 98434)('Nueva San Salvador', 98400)('Araguari', 98399)('Piacenza', 98384)('Narsinghdi', 98342)('Ancona', 98329)('S\u00e3o Jos\u00e9 de Ribamar', 98318)('Rafsanjan', 98300)('Midland', 98293)('Davenport', 98256)('Sakado', 98221)('Sasaram', 98220)('Barakaldo', 98212)('Lecce', 98208)('Kuznetsk', 98200)('Pinhais', 98198)('Cesk\u00e9 Budejovice', 98186)('Sert\u00e3ozinho', 98140)('Isehara', 98123)('Lower Hutt', 98100)('Hradec Kr\u00e1lov\u00e9', 98080)('Mission Viejo', 98049)('Taldyqorghan', 98000)('Uhta', 98000)('Zhangjiagang', 97994)('Jaworzno', 97929)('Jessentuki', 97900)('Bislig', 97860)('Miami Beach', 97855)('Hazaribag', 97712)('Talkha', 97700)('Palayankottai', 97662)('Takasago', 97632)('Nou\u00e2dhibou', 97600)('Tobolsk', 97600)('Conselheiro Lafaiete', 97507)('Chelmsford', 97451)('Neftejugansk', 97400)('Las Margaritas', 97389)('Chinandega', 97387)('Talavera', 97329)('Dese', 97314)('Mandi Bahauddin', 97300)('Bataisk', 97300)('Nojabrsk', 97300)('Paulo Afonso', 97291)('Bolzano', 97232)('Banda', 97227)('Qalyub', 97200)('Cosoleacaque', 97199)('Tong Xian', 97168)('Ocumare del Tuy', 97168)('Bala\u0161ov', 97100)('Buon Ma Thuot', 97044)('Rustenburg', 97008)('Crawley', 97000)('Molodet\u0161no', 97000)('Roubaix', 96984)('Fujimi', 96972)('Mekele', 96938)('Lahti', 96921)('Zeleznogorsk', 96900)('Bor\u00e5s', 96883)('Angra dos Reis', 96864)('Guagua', 96858)('Godhra', 96813)('Tavoy (Dawei)', 96800)('Tsaotun', 96800)('Moshi', 96800)('Ech-Chleff (el-Asnam)', 96794)('Saidpur', 96777)('San Luis de la Paz', 96763)('Nigel', 96734)('Gazipur', 96717)('Catanzaro', 96700)('Savannakhet', 96652)('Mojokerto', 96626)('Eun\u00e1polis', 96610)('Bayambang', 96609)('Zukovski', 96500)('Marand', 96400)('Salto', 96348)('Hospet', 96322)('Ashoknagar-Kalyangarh', 96315)('Ourinhos', 96291)('Tulcea', 96278)('Achalpur', 96216)('Parnamirim', 96210)('Settat', 96200)('Bahir Dar', 96140)('Jacobina', 96131)('Nasugbu', 96113)('Patan', 96109)('Co\u00edmbra', 96100)('Anzero-Sudzensk', 96100)('Colchester', 96063)('Zenica', 96027)('Urasoe', 96002)('Ahmadpur East', 96000)('Konotop', 96000)('Coronel Fabriciano', 95933)('Valle de la Pascua', 95927)('Purwakarta', 95900)('Ya\u00b4an', 95900)('Garut', 95800)('Jinzhou', 95761)('Mandasor', 95758)('Damoh', 95661)('Baybay', 95630)('Yonezawa', 95592)('Konan', 95521)('La Spezia', 95504)('\u00dast\u00ed nad Labem', 95491)('Tonghae', 95472)('Jos\u00e9 Azueta', 95448)('Delta', 95411)('Jirja', 95400)('Sunrise Manor', 95362)('Santiago Ixcuintla', 95311)('San Felipe', 95305)('Kudus', 95300)('Kamalia', 95300)('Fernando de la Mora', 95287)('Delft', 95268)('Capas', 95219)('Yamatokoriyama', 95165)('Satara', 95133)('Heerlen', 95052)('G\u00fctersloh', 95028)('Worcester', 95000)('Kostjantynivka', 95000)('Meru', 94947)('Tejupilco', 94934)('Udine', 94932)('Songkhla', 94900)('Meerut Cantonment', 94876)('Sultan Kudarat', 94861)('Ovalle', 94854)('Kendari', 94800)('Praia', 94800)('Pagakku (Pakokku)', 94800)('Maizuru', 94784)('New Bedford', 94780)('Tantoyuca', 94709)('Jaya Pura', 94700)('\u0160umen', 94686)('Birigui', 94685)('San Rafael', 94651)('Torbat-e Heydariyeh', 94600)('Dos Hermanas', 94591)('El Cajon', 94578)('Solihull', 94531)('Dehri', 94526)('Torre del Greco', 94505)('Laoag', 94466)('Andria', 94443)('Delhi Cantonment', 94326)('Salvatierra', 94322)('Rochdale', 94313)('Araure', 94269)('Idfu', 94200)('Jahrom', 94200)('Norman', 94193)('Nakhon Pathom', 94100)('Bugulma', 94100)('Richmond', 94100)('Toa Baja', 94085)('Gorontalo', 94058)('Fort-de-France', 94050)('Emeishan', 94000)('Zeleznogorsk', 94000)('Albany', 93994)('Maxixe', 93985)('Pre\u0161ov', 93977)('Resita', 93976)('Argenteuil', 93961)('Jelenia G\u00f3ra', 93901)('Ming\u00e4\u00e7evir', 93900)('al-Hawiya', 93900)('Tatu\u00ed', 93897)('George', 93818)('San Fernando de Apure', 93809)('Onomichi', 93756)('Santiago de Compostela', 93745)('Marl', 93735)('Chhindwara', 93731)('Brockton', 93653)('Bayugan', 93623)('Tourcoing', 93540)('Brindisi', 93454)('Bansberia', 93447)('Tultepec', 93364)('Roanoke', 93357)('Nagaon', 93350)('Ji-Paran\u00e1', 93346)('Higashimatsuyama', 93342)('Novouralsk', 93300)('Giugliano in Campania', 93286)('Malungon', 93232)('Kimitsu', 93216)('Majalaya', 93200)('Sundsvall', 93126)('Bacabal', 93121)('Kanpur Cantonment', 93109)('Khuzdar', 93100)('Birkenhead', 93087)('Coronel', 93061)('Isahaya', 93058)('Enshi', 93056)('Kanuma', 93053)('Bose', 93009)('Kars', 93000)('Billings', 92988)('Vidisha', 92917)('Pu\u0161kin', 92900)('Yuzhou', 92889)('Compton', 92864)('Tabora', 92800)('Camet\u00e1', 92779)('Alkmaar', 92713)('Pondok Aren', 92700)('Taza', 92700)('Santa Cruz', 92694)('Sudbury', 92686)('Temixco', 92686)('Jombang', 92600)('Vorkuta', 92600)('Bettiah', 92583)('Izumisano', 92583)('Purulia', 92574)('Sorsogon', 92512)('Candelaria', 92429)('Kameoka', 92398)('Pisa', 92379)('Prizren', 92303)('Sunggal', 92300)('Ashqelon', 92300)('Vihari', 92300)('Derbent', 92300)('Gainesville', 92291)('Cairns', 92273)('Torrej\u00f3n de Ardoz', 92262)('Fairfield', 92256)('Mun-gyong', 92239)('Gua\u00edba', 92224)('Kangshan', 92200)('L\u00fcnen', 92044)('Arden-Arcade', 92040)('Rafah', 92020)('Gillingham', 92000)('Hartlepool', 92000)('Woking/Byfleet', 92000)('Ilan', 92000)('S\u00e3o Louren\u00e7o da Mata', 91999)('Kaiyuan', 91999)('Barletta', 91904)('Batam', 91871)('Matamoros', 91858)('San Mateo', 91799)('Santana do Livramento', 91779)('Votorantim', 91777)('Visalia', 91762)('Arezzo', 91729)('al-Hawamidiya', 91700)('San Pedro de la Paz', 91684)('Mobara', 91664)('Kirovo-T\u0161epetsk', 91600)('Tumen', 91471)('Narita', 91470)('Pardubice', 91309)('Disuq', 91300)('Nyeri', 91258)('Boulder', 91238)('Kashiwazaki', 91229)('Cary', 91213)('Campo Largo', 91203)('Padang Sidempuan', 91200)('Tsuyama', 91170)('Klagenfurt', 91141)('Tandil', 91101)('Sawangan', 91100)('Unayza', 91100)('D\u00fcren', 91092)('Santa Monica', 91084)('Idlib', 91081)('Halifax', 91069)('Melipilla', 91056)('Semnan', 91045)('Putian', 91030)('Najran', 91000)('Krasnogorsk', 91000)('Southport', 90959)('Ratingen', 90951)('San Felipe', 90940)('Mons', 90935)('Maidstone', 90878)('Linhai', 90870)('Suhar', 90814)('Hassan', 90803)('Quetzaltenango', 90801)('G\u00e4vle', 90742)('Ambala Sadar', 90712)('Giron', 90688)('Montreuil', 90674)('Xilin Hot', 90646)('Castilla', 90642)('Birgunj', 90639)('Ligao', 90603)('Baidyabati', 90601)('Fall River', 90555)('P\u00e1nuco', 90551)('Braga', 90535)('Patos', 90519)('Ituiutaba', 90507)('Ineg\u00f6l', 90500)('El Araich', 90400)('Dera Ismail Khan', 90400)('Morvi', 90357)('Frederiksberg', 90327)('Rehovot', 90300)('Alessandria', 90289)('Shaowu', 90286)('Junan', 90222)('Bandirma', 90200)('Corumb\u00e1', 90111)('Miandoab', 90100)('Eastbourne', 90000)('Zhezqazghan', 90000)('Hargeysa', 90000)('Kismaayo', 90000)('Miaoli', 90000)('Berdyt\u0161iv', 90000)('Izmajil', 90000)('\u0160ostka', 90000)('Uman', 90000)('El Lim\u00f3n', 90000)('Klin', 90000)('T\u0161aikovski', 90000)('Banyuwangi', 89900)('Tanjung Pinang', 89900)('Velbert', 89881)('Cesena', 89852)('Qomsheh', 89800)('Novyi Urengoi', 89800)('Wazirabad', 89700)('Esslingen am Neckar', 89667)('El Fuerte', 89556)('Palho\u00e7a', 89465)('Kenosha', 89447)('Kelowna', 89442)('Liepaja', 89439)('San Felipe de Puerto Plata', 89423)('Gharda\u00efa', 89415)('Elgin', 89408)('Huaying', 89400)('Nowshera', 89400)('Barra do Pira\u00ed', 89388)('Pingyi', 89373)('al-Zawiya', 89338)('Odessa', 89293)('Ladysmith', 89292)('Huangyan', 89288)('Barrie', 89269)('Bento Gon\u00e7alves', 89254)('Po\u00e1', 89236)('\u00c1guas Lindas de Goi\u00e1s', 89200)('La Ceiba', 89200)('Raigarh', 89166)('Tierra Blanca', 89143)('Wadi al-Sir', 89104)('Carson', 89089)('Charleston', 89063)('Vejalpur', 89053)('Grimsby', 89000)('Brovary', 89000)('Mukat\u0161eve', 89000)('Pesaro', 88987)('Masaya', 88971)('Apopa', 88800)('Luxembourg [Luxemburg/L\u00ebtzebuerg]', 80700)('Suva', 77366)('Noum\u00e9a', 76293)('Male', 71000)('Les Abymes', 62947)('Mbabane', 61000)('Chaguanas', 56601)('Belize City', 55810)('Masqat', 51969)('Cayenne', 50699)('Honiara', 50100)('S\u00e3o Tom\u00e9', 49541)('Dili', 47900)('Port-of-Spain', 43396)('Banjul', 42326)('Victoria', 41000)('Malabo', 40000)('Moroni', 36000)('Apia', 35900)('Port-Vila', 33700)('Oranjestad', 29034)('Kuwait', 28859)('Dalap-Uliga-Darrit', 28000)('Saint Helier', 27523)('Gibraltar', 27025)('Faaa', 25888)('Papeete', 25553)('Saint John\u00b4s', 24000)('Douglas', 23487)('Nuku\u00b4alofa', 22400)('Thimphu', 22000)('Weno', 22000)('Bandar Seri Begawan', 21484)('Birkirkara', 21445)('Andorra la Vella', 21189)('George Town', 19600)('Kingstown', 17100)('Roseau', 16243)('T\u00f3rshavn', 14542)('Nuuk', 13445)('Monte-Carlo', 13154)('Charlotte Amalie', 13000)('Basse-Terre', 12433)('Mamoutzou', 12000)('Koror', 12000)('Avarua', 11900)('Basseterre', 11600)('Tamuning', 9500)('Garapan', 9200)('Palikir', 8600)('Road Town', 8000)('Belmopan', 7105)('Valletta', 7073)('Bridgetown', 6070)('Saint-Pierre', 5808)('Schaan', 5346)('Tafuna', 5200)('Bikenibeu', 5055)('Vaduz', 5043)('Serravalle', 4802)('Cockburn Town', 4800)('Saint George\u00b4s', 4621)('Funafuti', 4600)('Yangor', 4050)('Willemstad', 2345)('Fagatogo', 2323)('Castries', 2301)('San Marino', 2294)('Bairiki', 2226)('Plymouth', 2000)('Saint George', 1800)('Stanley', 1636)('Jamestown', 1500)('Longyearbyen', 1438)('Monaco-Ville', 1234)('Hamilton', 1200)('Aga\u00f1a', 1139)('Mata-Utu', 1137)('South Hill', 961)('Kingston', 800)('Flying Fish Cove', 700)('Alofi', 682)('The Valley', 595)('Yaren', 559)('Bantam', 503)('Citt\u00e0 del Vaticano', 455)('Fakaofo', 300)('West Island', 167)('Adamstown', 42)"
      },
      {
        "action": "select Name, Population from city ORDER BY population DESC limit 10;",
        "observation": "('Mumbai (Bombay)', 10500000)('Seoul', 9981619)('S\u00e3o Paulo', 9968485)('Shanghai', 9696300)('Jakarta', 9604900)('Karachi', 9269265)('Istanbul', 8787958)('Ciudad de M\u00e9xico', 8591309)('Moscow', 8389200)('New York', 8008278)"
      },
      {
        "action": "select Name, Population from city WHERE Name = 'New York';",
        "observation": "('New York', 8008278)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          "New York",
          8008278
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          "New York",
          8008278
        ]
      ],
      "reward": 1.0
    }
  },
  "605": {
    "environment": "ic_sql",
    "query_idx": 605,
    "query": "Count the number of orchestras that have CD or DVD as their record format.",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = \"CD\" OR Major_Record_Format = \"DVD\"",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('conductor',)('orchestra',)('performance',)('show',)"
      },
      {
        "action": "desc orchestra",
        "observation": "('Orchestra_ID', 'int', 'NO', 'PRI', None, 'auto_increment')('Orchestra', 'text', 'YES', '', None, '')('Conductor_ID', 'int', 'YES', 'MUL', None, '')('Record_Company', 'text', 'YES', '', None, '')('Year_of_Founded', 'double', 'YES', '', None, '')('Major_Record_Format', 'text', 'YES', '', None, '')"
      },
      {
        "action": "select distinct Major_Record_Format from orchestra",
        "observation": "('CD',)('CD / LP',)('DVD',)"
      },
      {
        "action": "select count(*) from orchestra where Major_Record_Format = \"CD\" or Major_Record_Format = \"DVD\";",
        "observation": "(11,)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          11
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          11
        ]
      ],
      "reward": 1.0
    }
  },
  "329": {
    "environment": "ic_sql",
    "query_idx": 329,
    "query": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('cartoon',)('tv_channel',)('tv_series',)"
      },
      {
        "action": "desc tv_channel;",
        "observation": "('id', 'varchar(255)', 'NO', 'PRI', None, '')('series_name', 'text', 'YES', '', None, '')('Country', 'text', 'YES', '', None, '')('Language', 'text', 'YES', '', None, '')('Content', 'text', 'YES', '', None, '')('Pixel_aspect_ratio_PAR', 'text', 'YES', '', None, '')('Hight_definition_TV', 'text', 'YES', '', None, '')('Pay_per_view_PPV', 'text', 'YES', '', None, '')('Package_Option', 'text', 'YES', '', None, '')"
      },
      {
        "action": "desc tv_series;",
        "observation": "('id', 'double', 'NO', 'PRI', None, '')('Episode', 'text', 'YES', '', None, '')('Air_Date', 'text', 'YES', '', None, '')('Rating', 'text', 'YES', '', None, '')('Share', 'double', 'YES', '', None, '')('18_49_Rating_Share', 'text', 'YES', '', None, '')('Viewers_m', 'text', 'YES', '', None, '')('Weekly_Rank', 'double', 'YES', '', None, '')('Channel', 'varchar(255)', 'YES', 'MUL', None, '')"
      },
      {
        "action": "desc cartoon;",
        "observation": "('id', 'double', 'NO', 'PRI', None, '')('Title', 'text', 'YES', '', None, '')('Directed_by', 'text', 'YES', '', None, '')('Written_by', 'text', 'YES', '', None, '')('Original_air_date', 'text', 'YES', '', None, '')('Production_code', 'double', 'YES', '', None, '')('Channel', 'varchar(255)', 'YES', 'MUL', None, '')"
      },
      {
        "action": "select distinct id from tv_channel;",
        "observation": "('700',)('701',)('703',)('704',)('705',)('706',)('707',)('708',)('709',)('713',)('714',)('715',)('717',)('719',)('728',)"
      },
      {
        "action": "select distinct channel from tv_series;",
        "observation": "('700',)('701',)('707',)('708',)('713',)('714',)('717',)('719',)('728',)"
      },
      {
        "action": "select t2.episode from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\";",
        "observation": "('A Love of a Lifetime',)('Keepers',)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          "A Love of a Lifetime"
        ],
        [
          "Keepers"
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          "A Love of a Lifetime"
        ],
        [
          "Keepers"
        ]
      ],
      "reward": 1.0
    }
  },
  "763": {
    "environment": "ic_sql",
    "query_idx": 763,
    "query": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
    "gold": "SELECT T2.name , T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year >= 2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('concert',)('singer',)('singer_in_concert',)('singers',)('stadium',)"
      },
      {
        "action": "desc stadium;",
        "observation": "('Stadium_ID', 'int', 'NO', 'PRI', None, 'auto_increment')('Location', 'text', 'YES', '', None, '')('Name', 'text', 'YES', '', None, '')('Capacity', 'int', 'YES', '', None, '')('Highest', 'int', 'YES', '', None, '')('Lowest', 'int', 'YES', '', None, '')('Average', 'int', 'YES', '', None, '')"
      },
      {
        "action": "desc concert;",
        "observation": "('concert_ID', 'int', 'NO', 'PRI', None, 'auto_increment')('concert_Name', 'text', 'YES', '', None, '')('Theme', 'text', 'YES', '', None, '')('Stadium_ID', 'int', 'YES', 'MUL', None, '')('Year', 'text', 'YES', '', None, '')"
      },
      {
        "action": "select * from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id;",
        "observation": "(1, 'Auditions', 'Free choice', 1, '2014', 1, 'Raith Rovers', \"Stark's Park\", 10104, 4812, 1294, 2106)(3, 'Home Visits', 'Bleeding Love', 2, '2015', 2, 'Ayr United', 'Somerset Park', 11998, 2363, 1057, 1477)(2, 'Super bootcamp', 'Free choice 2', 2, '2014', 2, 'Ayr United', 'Somerset Park', 11998, 2363, 1057, 1477)(6, 'Week 2', 'Party All Night', 7, '2015', 7, 'Alloa Athletic', 'Recreation Park', 3100, 1057, 331, 637)(5, 'Week 1', 'Happy Tonight', 9, '2015', 9, 'Peterhead', 'Balmoor', 4000, 837, 400, 615)(4, 'Week 1', 'Wide Awake', 10, '2014', 10, 'Brechin City', 'Glebe Park', 3960, 780, 315, 552)"
      },
      {
        "action": "select * from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014;",
        "observation": "(1, 'Auditions', 'Free choice', 1, '2014', 1, 'Raith Rovers', \"Stark's Park\", 10104, 4812, 1294, 2106)(2, 'Super bootcamp', 'Free choice 2', 2, '2014', 2, 'Ayr United', 'Somerset Park', 11998, 2363, 1057, 1477)(3, 'Home Visits', 'Bleeding Love', 2, '2015', 2, 'Ayr United', 'Somerset Park', 11998, 2363, 1057, 1477)(4, 'Week 1', 'Wide Awake', 10, '2014', 10, 'Brechin City', 'Glebe Park', 3960, 780, 315, 552)(5, 'Week 1', 'Happy Tonight', 9, '2015', 9, 'Peterhead', 'Balmoor', 4000, 837, 400, 615)(6, 'Week 2', 'Party All Night', 7, '2015', 7, 'Alloa Athletic', 'Recreation Park', 3100, 1057, 331, 637)"
      },
      {
        "action": "select * from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t1.stadium_id;",
        "observation": "Error executing query: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'concert_singer.t1.concert_ID' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by"
      },
      {
        "action": "select t2.Name, t2.Capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t1.stadium_id;",
        "observation": "(\"Stark's Park\", 10104)('Somerset Park', 11998)('Glebe Park', 3960)('Balmoor', 4000)('Recreation Park', 3100)"
      },
      {
        "action": "select t2.Name, t2.Capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t1.stadium_id order by count(*) desc;",
        "observation": "('Somerset Park', 11998)(\"Stark's Park\", 10104)('Glebe Park', 3960)('Balmoor', 4000)('Recreation Park', 3100)"
      },
      {
        "action": "select t2.Name, t2.Capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t1.stadium_id order by count(*) desc limit 1;",
        "observation": "('Somerset Park', 11998)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          "Somerset Park",
          11998
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          "Somerset Park",
          11998
        ]
      ],
      "reward": 1.0
    }
  },
  "859": {
    "environment": "ic_sql",
    "query_idx": 859,
    "query": "What are the names and descriptions of all the sections?",
    "gold": "SELECT section_name , section_description FROM Sections",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('addresses',)('courses',)('degree_programs',)('departments',)('sections',)('semesters',)('student_enrolment',)('student_enrolment_courses',)('students',)('transcript_contents',)('transcripts',)"
      },
      {
        "action": "desc sections;",
        "observation": "('section_id', 'int', 'NO', 'PRI', None, 'auto_increment')('course_id', 'int', 'NO', 'MUL', None, '')('section_name', 'varchar(255)', 'YES', '', None, '')('section_description', 'varchar(255)', 'YES', '', None, '')('other_details', 'varchar(255)', 'YES', '', None, '')"
      },
      {
        "action": "select section_name, section_description from Sections;",
        "observation": "('a', 'non')('b', 'voluptatem')('c', 'qui')('d', 'voluptas')('e', 'ex')('f', 'doloremque')('g', 'provident')('h', 'et')('j', 'quis')('k', 'nesciunt')('l', 'ad')('o', 'et')('p', 'facilis')('u', 'reprehenderit')('y', 'qui')"
      }
    ],
    "info": {
      "agent_obs": [
        [
          "a",
          "non"
        ],
        [
          "b",
          "voluptatem"
        ],
        [
          "c",
          "qui"
        ],
        [
          "d",
          "voluptas"
        ],
        [
          "e",
          "ex"
        ],
        [
          "f",
          "doloremque"
        ],
        [
          "g",
          "provident"
        ],
        [
          "h",
          "et"
        ],
        [
          "j",
          "quis"
        ],
        [
          "k",
          "nesciunt"
        ],
        [
          "l",
          "ad"
        ],
        [
          "o",
          "et"
        ],
        [
          "p",
          "facilis"
        ],
        [
          "u",
          "reprehenderit"
        ],
        [
          "y",
          "qui"
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          "a",
          "non"
        ],
        [
          "b",
          "voluptatem"
        ],
        [
          "c",
          "qui"
        ],
        [
          "d",
          "voluptas"
        ],
        [
          "e",
          "ex"
        ],
        [
          "f",
          "doloremque"
        ],
        [
          "g",
          "provident"
        ],
        [
          "h",
          "et"
        ],
        [
          "j",
          "quis"
        ],
        [
          "k",
          "nesciunt"
        ],
        [
          "l",
          "ad"
        ],
        [
          "o",
          "et"
        ],
        [
          "p",
          "facilis"
        ],
        [
          "u",
          "reprehenderit"
        ],
        [
          "y",
          "qui"
        ]
      ],
      "reward": 1.0
    }
  },
  "612": {
    "environment": "ic_sql",
    "query_idx": 612,
    "query": "Find the id of students who do not have a cat pet.",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat'",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('has_pet',)('pets',)('student',)"
      },
      {
        "action": "desc has_pet;",
        "observation": "('StuID', 'int', 'YES', 'MUL', None, '')('PetID', 'int', 'YES', 'MUL', None, '')"
      },
      {
        "action": "desc pets;",
        "observation": "('PetID', 'int', 'NO', 'PRI', None, 'auto_increment')('PetType', 'varchar(20)', 'YES', '', None, '')('pet_age', 'int', 'YES', '', None, '')('weight', 'double', 'YES', '', None, '')"
      },
      {
        "action": "desc student;",
        "observation": "('StuID', 'int', 'NO', 'PRI', None, 'auto_increment')('LName', 'varchar(12)', 'YES', '', None, '')('Fname', 'varchar(12)', 'YES', '', None, '')('Age', 'int', 'YES', '', None, '')('Sex', 'varchar(1)', 'YES', '', None, '')('Major', 'int', 'YES', '', None, '')('Advisor', 'int', 'YES', '', None, '')('city_code', 'varchar(3)', 'YES', '', None, '')"
      },
      {
        "action": "select t1.StuID from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat';",
        "observation": "(1001,)"
      },
      {
        "action": "select stuid from student where stuid != '1001';",
        "observation": "(1002,)(1003,)(1004,)(1005,)(1006,)(1007,)(1008,)(1009,)(1010,)(1011,)(1012,)(1014,)(1015,)(1016,)(1017,)(1018,)(1019,)(1020,)(1021,)(1022,)(1023,)(1024,)(1025,)(1026,)(1027,)(1028,)(1029,)(1030,)(1031,)(1032,)(1033,)(1034,)(1035,)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          1002
        ],
        [
          1003
        ],
        [
          1004
        ],
        [
          1005
        ],
        [
          1006
        ],
        [
          1007
        ],
        [
          1008
        ],
        [
          1009
        ],
        [
          1010
        ],
        [
          1011
        ],
        [
          1012
        ],
        [
          1014
        ],
        [
          1015
        ],
        [
          1016
        ],
        [
          1017
        ],
        [
          1018
        ],
        [
          1019
        ],
        [
          1020
        ],
        [
          1021
        ],
        [
          1022
        ],
        [
          1023
        ],
        [
          1024
        ],
        [
          1025
        ],
        [
          1026
        ],
        [
          1027
        ],
        [
          1028
        ],
        [
          1029
        ],
        [
          1030
        ],
        [
          1031
        ],
        [
          1032
        ],
        [
          1033
        ],
        [
          1034
        ],
        [
          1035
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          1002
        ],
        [
          1003
        ],
        [
          1004
        ],
        [
          1005
        ],
        [
          1006
        ],
        [
          1007
        ],
        [
          1008
        ],
        [
          1009
        ],
        [
          1010
        ],
        [
          1011
        ],
        [
          1012
        ],
        [
          1014
        ],
        [
          1015
        ],
        [
          1016
        ],
        [
          1017
        ],
        [
          1018
        ],
        [
          1019
        ],
        [
          1020
        ],
        [
          1021
        ],
        [
          1022
        ],
        [
          1023
        ],
        [
          1024
        ],
        [
          1025
        ],
        [
          1026
        ],
        [
          1027
        ],
        [
          1028
        ],
        [
          1029
        ],
        [
          1030
        ],
        [
          1031
        ],
        [
          1032
        ],
        [
          1033
        ],
        [
          1034
        ],
        [
          1035
        ]
      ],
      "reward": 1.0
    }
  },
  "202": {
    "environment": "ic_sql",
    "query_idx": 202,
    "query": "For the countries founded before 1930, what is the total number of distinct official languages?",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = \"T\"",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('city',)('country',)('countrylanguage',)"
      },
      {
        "action": "desc country;",
        "observation": "('Code', 'char(3)', 'NO', 'PRI', '', '')('Name', 'char(52)', 'NO', '', '', '')('Continent', 'text', 'NO', '', None, '')('Region', 'char(26)', 'NO', '', '', '')('SurfaceArea', 'float(10,2)', 'NO', '', '0.00', '')('IndepYear', 'int', 'YES', '', None, '')('Population', 'int', 'NO', '', '0', '')('LifeExpectancy', 'float(3,1)', 'YES', '', None, '')('GNP', 'float(10,2)', 'YES', '', None, '')('GNPOld', 'float(10,2)', 'YES', '', None, '')('LocalName', 'char(45)', 'NO', '', '', '')('GovernmentForm', 'char(45)', 'NO', '', '', '')('HeadOfState', 'char(60)', 'YES', '', None, '')('Capital', 'int', 'YES', '', None, '')('Code2', 'char(2)', 'NO', '', '', '')"
      },
      {
        "action": "desc countrylanguage;",
        "observation": "('CountryCode', 'char(3)', 'NO', 'PRI', '', '')('Language', 'char(30)', 'NO', 'PRI', '', '')('IsOfficial', 'text', 'NO', '', None, '')('Percentage', 'float(4,1)', 'NO', '', '0.0', '')"
      },
      {
        "action": "select distinct code from country;",
        "observation": "('ABW',)('AFG',)('AGO',)('AIA',)('ALB',)('AND',)('ANT',)('ARE',)('ARG',)('ARM',)('ASM',)('ATA',)('ATF',)('ATG',)('AUS',)('AUT',)('AZE',)('BDI',)('BEL',)('BEN',)('BFA',)('BGD',)('BGR',)('BHR',)('BHS',)('BIH',)('BLR',)('BLZ',)('BMU',)('BOL',)('BRA',)('BRB',)('BRN',)('BTN',)('BVT',)('BWA',)('CAF',)('CAN',)('CCK',)('CHE',)('CHL',)('CHN',)('CIV',)('CMR',)('COD',)('COG',)('COK',)('COL',)('COM',)('CPV',)('CRI',)('CUB',)('CXR',)('CYM',)('CYP',)('CZE',)('DEU',)('DJI',)('DMA',)('DNK',)('DOM',)('DZA',)('ECU',)('EGY',)('ERI',)('ESH',)('ESP',)('EST',)('ETH',)('FIN',)('FJI',)('FLK',)('FRA',)('FRO',)('FSM',)('GAB',)('GBR',)('GEO',)('GHA',)('GIB',)('GIN',)('GLP',)('GMB',)('GNB',)('GNQ',)('GRC',)('GRD',)('GRL',)('GTM',)('GUF',)('GUM',)('GUY',)('HKG',)('HMD',)('HND',)('HRV',)('HTI',)('HUN',)('IDN',)('IND',)('IOT',)('IRL',)('IRN',)('IRQ',)('ISL',)('ISR',)('ITA',)('JAM',)('JOR',)('JPN',)('KAZ',)('KEN',)('KGZ',)('KHM',)('KIR',)('KNA',)('KOR',)('KWT',)('LAO',)('LBN',)('LBR',)('LBY',)('LCA',)('LIE',)('LKA',)('LSO',)('LTU',)('LUX',)('LVA',)('MAC',)('MAR',)('MCO',)('MDA',)('MDG',)('MDV',)('MEX',)('MHL',)('MKD',)('MLI',)('MLT',)('MMR',)('MNG',)('MNP',)('MOZ',)('MRT',)('MSR',)('MTQ',)('MUS',)('MWI',)('MYS',)('MYT',)('NAM',)('NCL',)('NER',)('NFK',)('NGA',)('NIC',)('NIU',)('NLD',)('NOR',)('NPL',)('NRU',)('NZL',)('OMN',)('PAK',)('PAN',)('PCN',)('PER',)('PHL',)('PLW',)('PNG',)('POL',)('PRI',)('PRK',)('PRT',)('PRY',)('PSE',)('PYF',)('QAT',)('REU',)('ROM',)('RUS',)('RWA',)('SAU',)('SDN',)('SEN',)('SGP',)('SGS',)('SHN',)('SJM',)('SLB',)('SLE',)('SLV',)('SMR',)('SOM',)('SPM',)('STP',)('SUR',)('SVK',)('SVN',)('SWE',)('SWZ',)('SYC',)('SYR',)('TCA',)('TCD',)('TGO',)('THA',)('TJK',)('TKL',)('TKM',)('TMP',)('TON',)('TTO',)('TUN',)('TUR',)('TUV',)('TWN',)('TZA',)('UGA',)('UKR',)('UMI',)('URY',)('USA',)('UZB',)('VAT',)('VCT',)('VEN',)('VGB',)('VIR',)('VNM',)('VUT',)('WLF',)('WSM',)('YEM',)('YUG',)('ZAF',)('ZMB',)('ZWE',)"
      },
      {
        "action": "select distinct countrycode from country;",
        "observation": "Error executing query: Unknown column 'countrycode' in 'field list'"
      },
      {
        "action": "select distinct countrycode from countrylanguage;",
        "observation": "('ABW',)('AFG',)('AGO',)('AIA',)('ALB',)('AND',)('ANT',)('ARE',)('ARG',)('ARM',)('ASM',)('ATG',)('AUS',)('AUT',)('AZE',)('BDI',)('BEL',)('BEN',)('BFA',)('BGD',)('BGR',)('BHR',)('BHS',)('BIH',)('BLR',)('BLZ',)('BMU',)('BOL',)('BRA',)('BRB',)('BRN',)('BTN',)('BWA',)('CAF',)('CAN',)('CCK',)('CHE',)('CHL',)('CHN',)('CIV',)('CMR',)('COD',)('COG',)('COK',)('COL',)('COM',)('CPV',)('CRI',)('CUB',)('CXR',)('CYM',)('CYP',)('CZE',)('DEU',)('DJI',)('DMA',)('DNK',)('DOM',)('DZA',)('ECU',)('EGY',)('ERI',)('ESH',)('ESP',)('EST',)('ETH',)('FIN',)('FJI',)('FLK',)('FRA',)('FRO',)('FSM',)('GAB',)('GBR',)('GEO',)('GHA',)('GIB',)('GIN',)('GLP',)('GMB',)('GNB',)('GNQ',)('GRC',)('GRD',)('GRL',)('GTM',)('GUF',)('GUM',)('GUY',)('HKG',)('HND',)('HRV',)('HTI',)('HUN',)('IDN',)('IND',)('IRL',)('IRN',)('IRQ',)('ISL',)('ISR',)('ITA',)('JAM',)('JOR',)('JPN',)('KAZ',)('KEN',)('KGZ',)('KHM',)('KIR',)('KNA',)('KOR',)('KWT',)('LAO',)('LBN',)('LBR',)('LBY',)('LCA',)('LIE',)('LKA',)('LSO',)('LTU',)('LUX',)('LVA',)('MAC',)('MAR',)('MCO',)('MDA',)('MDG',)('MDV',)('MEX',)('MHL',)('MKD',)('MLI',)('MLT',)('MMR',)('MNG',)('MNP',)('MOZ',)('MRT',)('MSR',)('MTQ',)('MUS',)('MWI',)('MYS',)('MYT',)('NAM',)('NCL',)('NER',)('NFK',)('NGA',)('NIC',)('NIU',)('NLD',)('NOR',)('NPL',)('NRU',)('NZL',)('OMN',)('PAK',)('PAN',)('PCN',)('PER',)('PHL',)('PLW',)('PNG',)('POL',)('PRI',)('PRK',)('PRT',)('PRY',)('PSE',)('PYF',)('QAT',)('REU',)('ROM',)('RUS',)('RWA',)('SAU',)('SDN',)('SEN',)('SGP',)('SHN',)('SJM',)('SLB',)('SLE',)('SLV',)('SMR',)('SOM',)('SPM',)('STP',)('SUR',)('SVK',)('SVN',)('SWE',)('SWZ',)('SYC',)('SYR',)('TCA',)('TCD',)('TGO',)('THA',)('TJK',)('TKL',)('TKM',)('TMP',)('TON',)('TTO',)('TUN',)('TUR',)('TUV',)('TWN',)('TZA',)('UGA',)('UKR',)('UMI',)('URY',)('USA',)('UZB',)('VAT',)('VCT',)('VEN',)('VGB',)('VIR',)('VNM',)('VUT',)('WLF',)('WSM',)('YEM',)('YUG',)('ZAF',)('ZMB',)('ZWE',)"
      },
      {
        "action": "select * from country where IndepYear < 1930;",
        "observation": "('AFG', 'Afghanistan', 'Asia', 'Southern and Central Asia', 652090.0, 1919, 22720000, 45.9, 5976.0, None, 'Afganistan/Afqanestan', 'Islamic Emirate', 'Mohammad Omar', 1, 'AF')('ALB', 'Albania', 'Europe', 'Southern Europe', 28748.0, 1912, 3401200, 71.6, 3205.0, 2500.0, 'Shqip\u00ebria', 'Republic', 'Rexhep Mejdani', 34, 'AL')('AND', 'Andorra', 'Europe', 'Southern Europe', 468.0, 1278, 78000, 83.5, 1630.0, None, 'Andorra', 'Parliamentary Coprincipality', '', 55, 'AD')('ARG', 'Argentina', 'South America', 'South America', 2780400.0, 1816, 37032000, 75.1, 340238.0, 323310.0, 'Argentina', 'Federal Republic', 'Fernando de la R\u00faa', 69, 'AR')('AUS', 'Australia', 'Oceania', 'Australia and New Zealand', 7741220.0, 1901, 18886000, 79.8, 351182.0, 392911.0, 'Australia', 'Constitutional Monarchy, Federation', 'Elisabeth II', 135, 'AU')('AUT', 'Austria', 'Europe', 'Western Europe', 83859.0, 1918, 8091800, 77.7, 211860.0, 206025.0, '\u00d6sterreich', 'Federal Republic', 'Thomas Klestil', 1523, 'AT')('BEL', 'Belgium', 'Europe', 'Western Europe', 30518.0, 1830, 10239000, 77.8, 249704.0, 243948.0, 'Belgi\u00eb/Belgique', 'Constitutional Monarchy, Federation', 'Albert II', 179, 'BE')('BGR', 'Bulgaria', 'Europe', 'Eastern Europe', 110994.0, 1908, 8190900, 70.9, 12178.0, 10169.0, 'Balgarija', 'Republic', 'Petar Stojanov', 539, 'BG')('BOL', 'Bolivia', 'South America', 'South America', 1098581.0, 1825, 8329000, 63.7, 8571.0, 7967.0, 'Bolivia', 'Republic', 'Hugo B\u00e1nzer Su\u00e1rez', 194, 'BO')('BRA', 'Brazil', 'South America', 'South America', 8547403.0, 1822, 170115000, 62.9, 776739.0, 804108.0, 'Brasil', 'Federal Republic', 'Fernando Henrique Cardoso', 211, 'BR')('BTN', 'Bhutan', 'Asia', 'Southern and Central Asia', 47000.0, 1910, 2124000, 52.4, 372.0, 383.0, 'Druk-Yul', 'Monarchy', 'Jigme Singye Wangchuk', 192, 'BT')('CAN', 'Canada', 'North America', 'North America', 9970610.0, 1867, 31147000, 79.4, 598862.0, 625626.0, 'Canada', 'Constitutional Monarchy, Federation', 'Elisabeth II', 1822, 'CA')('CHE', 'Switzerland', 'Europe', 'Western Europe', 41284.0, 1499, 7160400, 79.6, 264478.0, 256092.0, 'Schweiz/Suisse/Svizzera/Svizra', 'Federation', 'Adolf Ogi', 3248, 'CH')('CHL', 'Chile', 'South America', 'South America', 756626.0, 1810, 15211000, 75.7, 72949.0, 75780.0, 'Chile', 'Republic', 'Ricardo Lagos Escobar', 554, 'CL')('CHN', 'China', 'Asia', 'Eastern Asia', 9572900.0, -1523, 1277558000, 71.4, 982268.0, 917719.0, 'Zhongquo', \"People'sRepublic\", 'Jiang Zemin', 1891, 'CN')('COL', 'Colombia', 'South America', 'South America', 1138914.0, 1810, 42321000, 70.3, 102896.0, 105116.0, 'Colombia', 'Republic', 'Andr\u00e9s Pastrana Arango', 2257, 'CO')('CRI', 'Costa Rica', 'North America', 'Central America', 51100.0, 1821, 4023000, 75.8, 10226.0, 9757.0, 'Costa Rica', 'Republic', 'Miguel \u00c1ngel Rodr\u00edguez Echeverr\u00eda', 584, 'CR')('CUB', 'Cuba', 'North America', 'Caribbean', 110861.0, 1902, 11201000, 76.2, 17843.0, 18862.0, 'Cuba', 'Socialistic Republic', 'Fidel Castro Ruz', 2413, 'CU')('DNK', 'Denmark', 'Europe', 'Nordic Countries', 43094.0, 800, 5330000, 76.5, 174099.0, 169264.0, 'Danmark', 'Constitutional Monarchy', 'Margrethe II', 3315, 'DK')('DOM', 'Dominican Republic', 'North America', 'Caribbean', 48511.0, 1844, 8495000, 73.2, 15846.0, 15076.0, 'Rep\u00fablica Dominicana', 'Republic', 'Hip\u00f3lito Mej\u00eda Dom\u00ednguez', 587, 'DO')('ECU', 'Ecuador', 'South America', 'South America', 283561.0, 1822, 12646000, 71.1, 19770.0, 19769.0, 'Ecuador', 'Republic', 'Gustavo Noboa Bejarano', 594, 'EC')('EGY', 'Egypt', 'Africa', 'Northern Africa', 1001449.0, 1922, 68470000, 63.3, 82710.0, 75617.0, 'Misr', 'Republic', 'Hosni Mubarak', 608, 'EG')('ESP', 'Spain', 'Europe', 'Southern Europe', 505992.0, 1492, 39441700, 78.8, 553233.0, 532031.0, 'Espa\u00f1a', 'Constitutional Monarchy', 'Juan Carlos I', 653, 'ES')('ETH', 'Ethiopia', 'Africa', 'Eastern Africa', 1104300.0, -1000, 62565000, 45.2, 6353.0, 6180.0, 'YeItyop\u00b4iya', 'Republic', 'Negasso Gidada', 756, 'ET')('FIN', 'Finland', 'Europe', 'Nordic Countries', 338145.0, 1917, 5171300, 77.4, 121914.0, 119833.0, 'Suomi', 'Republic', 'Tarja Halonen', 3236, 'FI')('FRA', 'France', 'Europe', 'Western Europe', 551500.0, 843, 59225700, 78.8, 1424285.0, 1392448.0, 'France', 'Republic', 'Jacques Chirac', 2974, 'FR')('GBR', 'United Kingdom', 'Europe', 'British Islands', 242900.0, 1066, 59623400, 77.7, 1378330.0, 1296830.0, 'United Kingdom', 'Constitutional Monarchy', 'Elisabeth II', 456, 'GB')('GRC', 'Greece', 'Europe', 'Southern Europe', 131626.0, 1830, 10545700, 78.4, 120724.0, 119946.0, 'Ell\u00e1da', 'Republic', 'Kostis Stefanopoulos', 2401, 'GR')('GTM', 'Guatemala', 'North America', 'Central America', 108889.0, 1821, 11385000, 66.2, 19008.0, 17797.0, 'Guatemala', 'Republic', 'Alfonso Portillo Cabrera', 922, 'GT')('HND', 'Honduras', 'North America', 'Central America', 112088.0, 1838, 6485000, 69.9, 5333.0, 4697.0, 'Honduras', 'Republic', 'Carlos Roberto Flores Facuss\u00e9', 933, 'HN')('HTI', 'Haiti', 'North America', 'Caribbean', 27750.0, 1804, 8222000, 49.2, 3459.0, 3107.0, 'Ha\u00efti/Dayti', 'Republic', 'Jean-Bertrand Aristide', 929, 'HT')('HUN', 'Hungary', 'Europe', 'Eastern Europe', 93030.0, 1918, 10043200, 71.4, 48267.0, 45914.0, 'Magyarorsz\u00e1g', 'Republic', 'Ferenc M\u00e1dl', 3483, 'HU')('IRL', 'Ireland', 'Europe', 'British Islands', 70273.0, 1921, 3775100, 76.8, 75921.0, 73132.0, 'Ireland/\u00c9ire', 'Republic', 'Mary McAleese', 1447, 'IE')('IRN', 'Iran', 'Asia', 'Southern and Central Asia', 1648195.0, 1906, 67702000, 69.7, 195746.0, 160151.0, 'Iran', 'Islamic Republic', 'Ali Mohammad Khatami-Ardakani', 1380, 'IR')('ITA', 'Italy', 'Europe', 'Southern Europe', 301316.0, 1861, 57680000, 79.0, 1161755.0, 1145372.0, 'Italia', 'Republic', 'Carlo Azeglio Ciampi', 1464, 'IT')('JPN', 'Japan', 'Asia', 'Eastern Asia', 377829.0, -660, 126714000, 80.7, 3787042.0, 4192638.0, 'Nihon/Nippon', 'Constitutional Monarchy', 'Akihito', 1532, 'JP')('LBR', 'Liberia', 'Africa', 'Western Africa', 111369.0, 1847, 3154000, 51.0, 2012.0, None, 'Liberia', 'Republic', 'Charles Taylor', 2440, 'LR')('LIE', 'Liechtenstein', 'Europe', 'Western Europe', 160.0, 1806, 32300, 78.8, 1119.0, 1084.0, 'Liechtenstein', 'Constitutional Monarchy', 'Hans-Adam II', 2446, 'LI')('LUX', 'Luxembourg', 'Europe', 'Western Europe', 2586.0, 1867, 435700, 77.1, 16321.0, 15519.0, 'Luxembourg/L\u00ebtzebuerg', 'Constitutional Monarchy', 'Henri', 2452, 'LU')('MCO', 'Monaco', 'Europe', 'Western Europe', 1.5, 1861, 34000, 78.8, 776.0, None, 'Monaco', 'Constitutional Monarchy', 'Rainier III', 2695, 'MC')('MEX', 'Mexico', 'North America', 'Central America', 1958201.0, 1810, 98881000, 71.5, 414972.0, 401461.0, 'M\u00e9xico', 'Federal Republic', 'Vicente Fox Quesada', 2515, 'MX')('MNG', 'Mongolia', 'Asia', 'Eastern Asia', 1566500.0, 1921, 2662000, 67.3, 1043.0, 933.0, 'Mongol Uls', 'Republic', 'Natsagiin Bagabandi', 2696, 'MN')('NIC', 'Nicaragua', 'North America', 'Central America', 130000.0, 1838, 5074000, 68.7, 1988.0, 2023.0, 'Nicaragua', 'Republic', 'Arnoldo Alem\u00e1n Lacayo', 2734, 'NI')('NLD', 'Netherlands', 'Europe', 'Western Europe', 41526.0, 1581, 15864000, 78.3, 371362.0, 360478.0, 'Nederland', 'Constitutional Monarchy', 'Beatrix', 5, 'NL')('NOR', 'Norway', 'Europe', 'Nordic Countries', 323877.0, 1905, 4478500, 78.7, 145895.0, 153370.0, 'Norge', 'Constitutional Monarchy', 'Harald V', 2807, 'NO')('NPL', 'Nepal', 'Asia', 'Southern and Central Asia', 147181.0, 1769, 23930000, 57.8, 4768.0, 4837.0, 'Nepal', 'Constitutional Monarchy', 'Gyanendra Bir Bikram', 2729, 'NP')('NZL', 'New Zealand', 'Oceania', 'Australia and New Zealand', 270534.0, 1907, 3862000, 77.8, 54669.0, 64960.0, 'New Zealand/Aotearoa', 'Constitutional Monarchy', 'Elisabeth II', 3499, 'NZ')('PAN', 'Panama', 'North America', 'Central America', 75517.0, 1903, 2856000, 75.5, 9131.0, 8700.0, 'Panam\u00e1', 'Republic', 'Mireya Elisa Moscoso Rodr\u00edguez', 2882, 'PA')('PER', 'Peru', 'South America', 'South America', 1285216.0, 1821, 25662000, 70.0, 64140.0, 65186.0, 'Per\u00fa/Piruw', 'Republic', 'Valentin Paniagua Corazao', 2890, 'PE')('POL', 'Poland', 'Europe', 'Eastern Europe', 323250.0, 1918, 38653600, 73.2, 151697.0, 135636.0, 'Polska', 'Republic', 'Aleksander Kwasniewski', 2928, 'PL')('PRT', 'Portugal', 'Europe', 'Southern Europe', 91982.0, 1143, 9997600, 75.8, 105954.0, 102133.0, 'Portugal', 'Republic', 'Jorge Samp\u00e3io', 2914, 'PT')('PRY', 'Paraguay', 'South America', 'South America', 406752.0, 1811, 5496000, 73.7, 8444.0, 9555.0, 'Paraguay', 'Republic', 'Luis \u00c1ngel Gonz\u00e1lez Macchi', 2885, 'PY')('ROM', 'Romania', 'Europe', 'Eastern Europe', 238391.0, 1878, 22455500, 69.9, 38158.0, 34843.0, 'Rom\u00e2nia', 'Republic', 'Ion Iliescu', 3018, 'RO')('SLV', 'El Salvador', 'North America', 'Central America', 21041.0, 1841, 6276000, 69.7, 11863.0, 11203.0, 'El Salvador', 'Republic', 'Francisco Guillermo Flores P\u00e9rez', 645, 'SV')('SMR', 'San Marino', 'Europe', 'Southern Europe', 61.0, 885, 27000, 81.1, 510.0, None, 'San Marino', 'Republic', None, 3171, 'SM')('SWE', 'Sweden', 'Europe', 'Nordic Countries', 449964.0, 836, 8861400, 79.6, 226492.0, 227757.0, 'Sverige', 'Constitutional Monarchy', 'Carl XVI Gustaf', 3048, 'SE')('THA', 'Thailand', 'Asia', 'Southeast Asia', 513115.0, 1350, 61399000, 68.6, 116416.0, 153907.0, 'Prathet Thai', 'Constitutional Monarchy', 'Bhumibol Adulyadej', 3320, 'TH')('TUR', 'Turkey', 'Asia', 'Middle East', 774815.0, 1923, 66591000, 71.0, 210721.0, 189122.0, 'T\u00fcrkiye', 'Republic', 'Ahmet Necdet Sezer', 3358, 'TR')('URY', 'Uruguay', 'South America', 'South America', 175016.0, 1828, 3337000, 75.2, 20831.0, 19967.0, 'Uruguay', 'Republic', 'Jorge Batlle Ib\u00e1\u00f1ez', 3492, 'UY')('USA', 'United States', 'North America', 'North America', 9363520.0, 1776, 278357000, 77.1, 8510700.0, 8110900.0, 'United States', 'Federal Republic', 'George W. Bush', 3813, 'US')('VAT', 'Holy See (Vatican City State)', 'Europe', 'Southern Europe', 0.4, 1929, 1000, None, 9.0, None, 'Santa Sede/Citt\u00e0 del Vaticano', 'Independent Church State', 'Johannes Paavali II', 3538, 'VA')('VEN', 'Venezuela', 'South America', 'South America', 912050.0, 1811, 24170000, 73.1, 95023.0, 88434.0, 'Venezuela', 'Federal Republic', 'Hugo Ch\u00e1vez Fr\u00edas', 3539, 'VE')('YEM', 'Yemen', 'Asia', 'Middle East', 527968.0, 1918, 18112000, 59.8, 6041.0, 5729.0, 'Al-Yaman', 'Republic', 'Ali Abdallah Salih', 1780, 'YE')('YUG', 'Yugoslavia', 'Europe', 'Southern Europe', 102173.0, 1918, 10640000, 72.4, 17000.0, None, 'Jugoslavija', 'Federal Republic', 'Vojislav Ko\u0161tunica', 1792, 'YU')('ZAF', 'South Africa', 'Africa', 'Southern Africa', 1221037.0, 1910, 40377000, 51.1, 116729.0, 129092.0, 'South Africa', 'Republic', 'Thabo Mbeki', 716, 'ZA')"
      },
      {
        "action": "select distinct isOfficial from countrylanguage;",
        "observation": "('T',)('F',)"
      },
      {
        "action": "select count(distinct t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where IndepYear < 1930 and t2.IsOfficial = 'T';",
        "observation": "(40,)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          40
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          40
        ]
      ],
      "reward": 1.0
    }
  },
  "172": {
    "environment": "ic_sql",
    "query_idx": 172,
    "query": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
    "gold": "SELECT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')",
    "reward": 0.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('has_pet',)('pets',)('student',)"
      },
      {
        "action": "desc student;",
        "observation": "('StuID', 'int', 'NO', 'PRI', None, 'auto_increment')('LName', 'varchar(12)', 'YES', '', None, '')('Fname', 'varchar(12)', 'YES', '', None, '')('Age', 'int', 'YES', '', None, '')('Sex', 'varchar(1)', 'YES', '', None, '')('Major', 'int', 'YES', '', None, '')('Advisor', 'int', 'YES', '', None, '')('city_code', 'varchar(3)', 'YES', '', None, '')"
      },
      {
        "action": "desc has_pet;",
        "observation": "('StuID', 'int', 'YES', 'MUL', None, '')('PetID', 'int', 'YES', 'MUL', None, '')"
      },
      {
        "action": "desc pets;",
        "observation": "('PetID', 'int', 'NO', 'PRI', None, 'auto_increment')('PetType', 'varchar(20)', 'YES', '', None, '')('pet_age', 'int', 'YES', '', None, '')('weight', 'double', 'YES', '', None, '')"
      },
      {
        "action": "select distinct PetType from pets;",
        "observation": "('cat',)('dog',)"
      },
      {
        "action": "select * from PetID where PetType = 'cat';",
        "observation": "Error executing query: Table 'pets_1.petid' doesn't exist"
      },
      {
        "action": "select PetID from pets where PetType = 'cat';",
        "observation": "(2001,)"
      },
      {
        "action": "select StuID from has_pet where PetID = '2001';",
        "observation": "(1001,)"
      },
      {
        "action": "select Fname, Age from student where StuID = '1001';",
        "observation": "('Linda', 18)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          "Linda",
          18
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          "Tracy",
          19
        ],
        [
          "Tracy",
          19
        ]
      ],
      "reward": 0.0
    }
  },
  "633": {
    "environment": "ic_sql",
    "query_idx": 633,
    "query": "How many paragraphs for the document with name 'Summer Show'?",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID = T2.document_ID WHERE T2.document_name = 'Summer Show'",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('documents',)('paragraphs',)('ref_template_types',)('templates',)"
      },
      {
        "action": "desc paragraphs;",
        "observation": "('Paragraph_ID', 'int', 'NO', 'PRI', None, 'auto_increment')('Document_ID', 'int', 'NO', 'MUL', None, '')('Paragraph_Text', 'varchar(255)', 'YES', '', None, '')('Other_Details', 'varchar(255)', 'YES', '', None, '')"
      },
      {
        "action": "desc documents;",
        "observation": "('Document_ID', 'int', 'NO', 'PRI', None, 'auto_increment')('Template_ID', 'int', 'YES', 'MUL', None, '')('Document_Name', 'varchar(255)', 'YES', '', None, '')('Document_Description', 'varchar(255)', 'YES', '', None, '')('Other_Details', 'varchar(255)', 'YES', '', None, '')"
      },
      {
        "action": "select t1.Paragraph_ID from paragraphs as t1 join documents as t2 on t1.Document_ID = t2.Document_ID;",
        "observation": "(9,)(16615,)(608931827,)(7,)(280120913,)(510442723,)(1104059,)(3708,)(65,)(241,)(243399026,)(946335436,)(571212310,)(765713812,)(9946,)"
      },
      {
        "action": "select t1.Paragraph_ID from paragraphs as t1 join documents as t2 on t1.Document_ID = t2.Document_ID where t2.Document_Name = 'Summer Show';",
        "observation": "(9,)"
      },
      {
        "action": "select count(*) from paragraphs as t1 join documents as t2 on t1.Document_ID = t2.Document_ID where t2.Document_Name = 'Summer Show';",
        "observation": "(1,)"
      },
      {
        "action": "submit;",
        "observation": "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'submit' at line 1"
      },
      {
        "action": "select count(*) from paragraphs as t1 join documents as t2 on t1.Document_ID = t2.Document_ID where t2.Document_Name = 'Summer Show';",
        "observation": "(1,)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          1
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          1
        ]
      ],
      "reward": 1.0
    }
  },
  "360": {
    "environment": "ic_sql",
    "query_idx": 360,
    "query": "Return the names and template ids for documents that contain the letter w in their description.",
    "gold": "SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('documents',)('paragraphs',)('ref_template_types',)('templates',)"
      },
      {
        "action": "show Documents;",
        "observation": "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Documents' at line 1"
      },
      {
        "action": "desc Documents;",
        "observation": "('Document_ID', 'int', 'NO', 'PRI', None, 'auto_increment')('Template_ID', 'int', 'YES', 'MUL', None, '')('Document_Name', 'varchar(255)', 'YES', '', None, '')('Document_Description', 'varchar(255)', 'YES', '', None, '')('Other_Details', 'varchar(255)', 'YES', '', None, '')"
      },
      {
        "action": "select document_name, template_id from Documents where Document_Description like \"%w%\";",
        "observation": "('Data base', 11)('How to read a book', 4)"
      }
    ],
    "info": {
      "agent_obs": [
        [
          "Data base",
          11
        ],
        [
          "How to read a book",
          4
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          "Data base",
          11
        ],
        [
          "How to read a book",
          4
        ]
      ],
      "reward": 1.0
    }
  },
  "622": {
    "environment": "ic_sql",
    "query_idx": 622,
    "query": "How many shops are there in each location?",
    "gold": "SELECT count(*) , LOCATION FROM shop GROUP BY LOCATION",
    "reward": 1.0,
    "trajectory": [
      {
        "action": "show tables;",
        "observation": "('employee',)('evaluation',)('hiring',)('shop',)"
      },
      {
        "action": "desc shop",
        "observation": "('Shop_ID', 'int', 'NO', 'PRI', None, 'auto_increment')('Name', 'text', 'YES', '', None, '')('Location', 'text', 'YES', '', None, '')('District', 'text', 'YES', '', None, '')('Number_products', 'int', 'YES', '', None, '')('Manager_name', 'text', 'YES', '', None, '')"
      },
      {
        "action": "select count(*), Location from shop group by Location;",
        "observation": "(1, 'Valkeakoski')(1, 'Helsinki')(1, 'Espoo')(1, 'Turku')(1, 'Jakobstad')(1, 'Kotka')(1, 'Kuopio')(1, 'Lahti')(1, 'Mariehamn')"
      }
    ],
    "info": {
      "agent_obs": [
        [
          1,
          "Valkeakoski"
        ],
        [
          1,
          "Helsinki"
        ],
        [
          1,
          "Espoo"
        ],
        [
          1,
          "Turku"
        ],
        [
          1,
          "Jakobstad"
        ],
        [
          1,
          "Kotka"
        ],
        [
          1,
          "Kuopio"
        ],
        [
          1,
          "Lahti"
        ],
        [
          1,
          "Mariehamn"
        ]
      ],
      "corrupt_gold": false,
      "eval_obs": [
        [
          1,
          "Valkeakoski"
        ],
        [
          1,
          "Helsinki"
        ],
        [
          1,
          "Espoo"
        ],
        [
          1,
          "Turku"
        ],
        [
          1,
          "Jakobstad"
        ],
        [
          1,
          "Kotka"
        ],
        [
          1,
          "Kuopio"
        ],
        [
          1,
          "Lahti"
        ],
        [
          1,
          "Mariehamn"
        ]
      ],
      "reward": 1.0
    }
  }
}