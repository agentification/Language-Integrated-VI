{
  "0": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 0,
    "query": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
    "turn_history": {
      "actions": [
        "SELECT player_name FROM poker_players ORDER BY final_tables ASC;"
      ],
      "observations": [
        "[('player5',), ('player3',), ('player1',), ('player2',), ('player4',)]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1,
    "query": "Find the name of airports which do not have any flight in and out.",
    "turn_history": {
      "actions": [
        "SELECT name FROM airports WHERE id NOT IN (SELECT DISTINCT departure_airport_id FROM flights UNION SELECT DISTINCT arrival_airport_id FROM flights);"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "2": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 2,
    "query": "What is the average GNP and total population in all nations whose government is US territory?",
    "turn_history": {
      "actions": [
        "SELECT AVG(GNP), SUM(Population) FROM Country WHERE GovernmentForm LIKE '%US territory%';"
      ],
      "observations": [
        "[(510.333333, Decimal('329000'))]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "3": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 3,
    "query": "Count the number of different nationalities of conductors.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT nationality) FROM conductors;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "4": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 4,
    "query": "What are the ids, version numbers, and type codes for each template?",
    "turn_history": {
      "actions": [
        "SELECT id, version_number, type_code FROM templates;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "5": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 5,
    "query": "What is the money rank of the tallest poker player?",
    "turn_history": {
      "actions": [
        "I'm sorry, but the question you have asked cannot be answered with a single SQL command. It requires more information about the database schema and the data stored in it. Please provide more details about the tables and columns involved in the query."
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'I'm sorry, but the question you have asked cannot be answered with a single SQL ' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "6": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 6,
    "query": "For each hometown, how many teachers are there?",
    "turn_history": {
      "actions": [
        "SELECT hometown, COUNT(teacher_id) AS num_teachers FROM teachers GROUP BY hometown;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "7": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 7,
    "query": "What are the cities whose population is between 160000 and 900000?",
    "turn_history": {
      "actions": [
        "SELECT city_name FROM cities WHERE population BETWEEN 160000 AND 900000;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.cities' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "8": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 8,
    "query": "Count the number of paragraphs.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM paragraphs;"
      ],
      "observations": [
        "[(15,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "9": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 9,
    "query": "Find the average age of losers and winners of all matches.",
    "turn_history": {
      "actions": [
        "SELECT AVG(age) FROM ( SELECT age FROM matches INNER JOIN players ON matches.winner=players.player_id WHERE matches.winner_score < matches.loser_score UNION ALL SELECT age FROM matches INNER JOIN players ON matches.loser=players.player_id WHERE matches.winner_score > matches.loser_score ) AS ages;"
      ],
      "observations": [
        "Error executing query: Unknown column 'age' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "10": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 10,
    "query": "List the title of all cartoons in alphabetical order.",
    "turn_history": {
      "actions": [
        "SELECT title FROM cartoons ORDER BY title ASC;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "11": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 11,
    "query": "Which countries in europe have at least 3 car manufacturers?",
    "turn_history": {
      "actions": [
        "SELECT country FROM manufacturers WHERE continent = 'Europe' GROUP BY country HAVING COUNT(DISTINCT car_manufacturer) >= 3;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.manufacturers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "12": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 12,
    "query": "Please show the record formats of orchestras in ascending order of count.",
    "turn_history": {
      "actions": [
        "SELECT format, COUNT(*) as count FROM orchestras GROUP BY format ORDER BY count ASC;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "13": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 13,
    "query": "How many people live in Asia, and what is the largest GNP among them?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) AS population, MAX(GNP) AS largest_GNP FROM Country WHERE Continent = 'Asia';"
      ],
      "observations": [
        "[(51, 3787042.0)]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "14": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 14,
    "query": "What is the maximum and minimum share for the TV series?",
    "turn_history": {
      "actions": [
        "SELECT MAX(share), MIN(share) FROM TV_series;"
      ],
      "observations": [
        "[(9.0, 5.0)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "15": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 15,
    "query": "What are the names of the teachers ordered by ascending age?",
    "turn_history": {
      "actions": [
        "SELECT name FROM teachers ORDER BY age ASC;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "16": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 16,
    "query": "Please show the most common citizenship of singers.",
    "turn_history": {
      "actions": [
        "SELECT citizenship, COUNT(*) AS count FROM singers GROUP BY citizenship ORDER BY count DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "17": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 17,
    "query": "What is the accelerate of the car make amc hornet sportabout (sw)?",
    "turn_history": {
      "actions": [
        "SELECT Accelerate FROM cars WHERE Car_Make = 'amc' AND Model = 'hornet sportabout (sw)';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "18": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 18,
    "query": "What are the date and the operating professional's first name of each treatment?",
    "turn_history": {
      "actions": [
        "SELECT treatment.date, professional.first_name FROM treatment JOIN professional ON treatment.operating_professional_id = professional.id;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.treatment' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "19": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 19,
    "query": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
    "turn_history": {
      "actions": [
        "SELECT flight_number FROM flights WHERE arrival_city = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'flight_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "20": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 20,
    "query": "What are the names of all the countries that became independent after 1950?",
    "turn_history": {
      "actions": [
        "SELECT Name FROM Country WHERE IndepYear > 1950;"
      ],
      "observations": [
        "[('Angola',), ('United Arab Emirates',), ('Armenia',), ('Antigua and Barbuda',), ('Azerbaijan',), ('Burundi',), ('Benin',), ('Burkina Faso',), ('Bangladesh',), ('Bahrain',), ('Bahamas',), ('Bosnia and Herzegovina',), ('Belarus',), ('Belize',), ('Barbados',), ('Brunei',), ('Botswana',), ('Central African Republic',), ('C\u00f4te d\u2019Ivoire',), ('Cameroon',), ('Congo, The Democratic Republic of the',), ('Congo',), ('Comoros',), ('Cape Verde',), ('Cyprus',), ('Czech Republic',), ('Germany',), ('Djibouti',), ('Dominica',), ('Algeria',), ('Eritrea',), ('Estonia',), ('Fiji Islands',), ('Micronesia, Federated States of',), ('Gabon',), ('Georgia',), ('Ghana',), ('Guinea',), ('Gambia',), ('Guinea-Bissau',), ('Equatorial Guinea',), ('Grenada',), ('Guyana',), ('Croatia',), ('Jamaica',), ('Kazakstan',), ('Kenya',), ('Kyrgyzstan',), ('Cambodia',), ('Kiribati',), ('Saint Kitts and Nevis',), ('Kuwait',), ('Laos',), ('Libyan Arab Jamahiriya',), ('Saint Lucia',), ('Lesotho',), ('Lithuania',), ('Latvia',), ('Morocco',), ('Moldova',), ('Madagascar',), ('Maldives',), ('Marshall Islands',), ('Macedonia',), ('Mali',), ('Malta',), ('Mozambique',), ('Mauritania',), ('Mauritius',), ('Malawi',), ('Malaysia',), ('Namibia',), ('Niger',), ('Nigeria',), ('Nauru',), ('Oman',), ('Palau',), ('Papua New Guinea',), ('Qatar',), ('Russian Federation',), ('Rwanda',), ('Sudan',), ('Senegal',), ('Singapore',), ('Solomon Islands',), ('Sierra Leone',), ('Somalia',), ('Sao Tome and Principe',), ('Suriname',), ('Slovakia',), ('Slovenia',), ('Swaziland',), ('Seychelles',), ('Chad',), ('Togo',), ('Tajikistan',), ('Turkmenistan',), ('Tonga',), ('Trinidad and Tobago',), ('Tunisia',), ('Tuvalu',), ('Tanzania',), ('Uganda',), ('Ukraine',), ('Uzbekistan',), ('Saint Vincent and the Grenadines',), ('Vanuatu',), ('Samoa',), ('Zambia',), ('Zimbabwe',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "21": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 21,
    "query": "What are all the possible breed type and size type combinations?",
    "turn_history": {
      "actions": [
        "SELECT breed_type, size_type FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "22": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 22,
    "query": "What are the minimum and maximum number of products across all the shops?",
    "turn_history": {
      "actions": [
        "SELECT MIN(num_products), MAX(num_products) FROM shops;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "23": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 23,
    "query": "How many pets are owned by students that have an age greater than 20?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM pets WHERE owner_id IN (SELECT student_id FROM students WHERE age > 20);"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "24": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 24,
    "query": "Give the names of poker players who have earnings above 300000.",
    "turn_history": {
      "actions": [
        "SELECT name FROM poker_players WHERE earnings > 300000;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "25": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 25,
    "query": "What is the horsepower of the car with the largest accelerate?",
    "turn_history": {
      "actions": [
        "SELECT horsepower FROM cars ORDER BY accelerate DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "26": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 26,
    "query": "Give the mean GNP and total population of nations which are considered US territory.",
    "turn_history": {
      "actions": [
        "SELECT AVG(GNP), SUM(Population) FROM Country WHERE Continent = 'North America' AND GovernmentForm LIKE '%territory' AND IndepYear IS NULL;"
      ],
      "observations": [
        "[(0.0, Decimal('93000'))]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "27": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 27,
    "query": "How many players are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM players;"
      ],
      "observations": [
        "[(0,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "28": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 28,
    "query": "Which abbreviation corresponds to Jetblue Airways?",
    "turn_history": {
      "actions": [
        "SELECT abbreviation FROM airlines WHERE name = 'Jetblue Airways';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "29": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 29,
    "query": "What is the average horsepower of the cars before 1980?",
    "turn_history": {
      "actions": [
        "SELECT AVG(horsepower) FROM cars WHERE year < 1980;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "30": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 30,
    "query": "What is the ship id and name that caused most total injuries?",
    "turn_history": {
      "actions": [
        "SELECT ship_id, ship_name FROM incidents GROUP BY ship_id, ship_name ORDER BY SUM(total_injuries) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.incidents' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "31": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 31,
    "query": "How many flights arriving in Aberdeen city?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE destination_city = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'destination_city' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "32": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 32,
    "query": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
    "turn_history": {
      "actions": [
        "SELECT name, location, district FROM shops ORDER BY num_products DESC;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "33": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 33,
    "query": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
    "turn_history": {
      "actions": [
        "SELECT enrollment_id, COUNT(*) AS max_count FROM enrollment_results GROUP BY enrollment_id ORDER BY max_count DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollment_results' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "34": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 34,
    "query": "Show the names of high schoolers who have likes, and numbers of likes for each.",
    "turn_history": {
      "actions": [
        "SELECT h.name, COUNT(l.id) AS num_likes FROM highschooler h JOIN likes l ON h.id = l.highschooler_id GROUP BY h.id HAVING COUNT(l.id) > 0;"
      ],
      "observations": [
        "Error executing query: Unknown column 'l.id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "35": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 35,
    "query": "Show the names of high school students and their corresponding number of friends.",
    "turn_history": {
      "actions": [
        "SELECT name, COUNT(friend_id) AS num_friends FROM students WHERE grade = 'high school' GROUP BY name;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "36": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 36,
    "query": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
    "turn_history": {
      "actions": [
        "SELECT first_name FROM students WHERE country = 'Haiti' OR phone_number = '09700166582';"
      ],
      "observations": [
        "Error executing query: Unknown column 'country' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "37": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 37,
    "query": "What is the average weight for each type of pet?",
    "turn_history": {
      "actions": [
        "SELECT type, AVG(weight) FROM pets GROUP BY type;"
      ],
      "observations": [
        "Error executing query: Unknown column 'type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "38": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 38,
    "query": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
    "turn_history": {
      "actions": [
        "SELECT b.name, b.date FROM battles b INNER JOIN outcomes o1 ON b.name = o1.battle INNER JOIN ships s1 ON o1.ship = s1.name AND s1.name = 'Lettice' INNER JOIN outcomes o2 ON b.name = o2.battle INNER JOIN ships s2 ON o2.ship = s2.name AND s2.name = 'HMS Atalanta' WHERE o1.result = 'lost' AND o2.result = 'lost';"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.battles' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "39": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 39,
    "query": "List all singer names in concerts in year 2014.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT singer_name FROM concerts WHERE year = 2014;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "40": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 40,
    "query": "What are the different first names and ages of the students who do have pets?",
    "turn_history": {
      "actions": [
        "SELECT first_name, age FROM students WHERE has_pets = 1;"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "41": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 41,
    "query": "What is the horsepower of the car with the greatest accelerate?",
    "turn_history": {
      "actions": [
        "SELECT horsepower FROM cars ORDER BY accelerate DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "42": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 42,
    "query": "What country is Jetblue Airways affiliated with?",
    "turn_history": {
      "actions": [
        "SELECT country FROM airlines WHERE name = 'Jetblue Airways';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "43": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 43,
    "query": "How many car models were produced by the maker with full name American Motor Company?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM car_models WHERE maker_name = 'American Motor Company';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.car_models' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "44": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 44,
    "query": "Find the first name and gender of student who have more than one pet.",
    "turn_history": {
      "actions": [
        "SELECT first_name, gender FROM student WHERE student_id IN (SELECT student_id FROM pet GROUP BY student_id HAVING COUNT(*) > 1);"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.pet' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "45": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 45,
    "query": "Find the number of pets whose weight is heavier than 10.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM pets WHERE weight > 10;"
      ],
      "observations": [
        "[(2,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "46": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 46,
    "query": "What is the description of the treatment type that costs the least money in total?",
    "turn_history": {
      "actions": [
        "SELECT description FROM treatment_type ORDER BY total_cost LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.treatment_type' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "47": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 47,
    "query": "How many battles did not lose any ship with tonnage '225'?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*)  FROM Battles  WHERE NOT EXISTS (     SELECT *      FROM Outcomes      WHERE Outcomes.battle = Battles.name      AND Outcomes.ship IN (         SELECT Ships.name          FROM Ships          WHERE Ships.tonnage = 225     )      AND Outcomes.result = 'sunk' );"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.battles' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "48": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 48,
    "query": "Show the names of all high schoolers in grade 10.",
    "turn_history": {
      "actions": [
        "SELECT name FROM Highschooler WHERE grade = 10;"
      ],
      "observations": [
        "[('Haley',), ('Kris',), ('Brittany',), ('Andrew',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "49": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 49,
    "query": "list all cartoon titles and their directors ordered by their air date",
    "turn_history": {
      "actions": [
        "SELECT cartoons.title, cartoons.director FROM cartoons ORDER BY cartoons.air_date;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "50": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 50,
    "query": "What is the area code in which the most voters voted?",
    "turn_history": {
      "actions": [
        "SELECT area_code FROM voters GROUP BY area_code ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'voter_1.voters' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "51": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 51,
    "query": "For each citizenship, what is the maximum net worth?",
    "turn_history": {
      "actions": [
        "SELECT citizenship, MAX(net_worth) FROM table_name GROUP BY citizenship;"
      ],
      "observations": [
        "Error executing query: Table 'singer.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "52": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 52,
    "query": "What are the names of all cartoons directed by Ben Jones?",
    "turn_history": {
      "actions": [
        "SELECT name FROM cartoons WHERE director = 'Ben Jones';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "53": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 53,
    "query": "Find the weight of the youngest dog.",
    "turn_history": {
      "actions": [
        "SELECT MIN(weight) FROM dogs WHERE age = (SELECT MIN(age) FROM dogs);"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.dogs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "54": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 54,
    "query": "What the smallest version number and its template type code?",
    "turn_history": {
      "actions": [
        "SELECT MIN(version_number), template_type_code FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "55": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 55,
    "query": "How many departments offer any degree?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT department_id) FROM courses WHERE degree IS NOT NULL;"
      ],
      "observations": [
        "Error executing query: Unknown column 'department_id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "56": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 56,
    "query": "What is the template type descriptions for template type code \"AD\".",
    "turn_history": {
      "actions": [
        "SELECT template_type_description FROM template_types WHERE template_type_code = 'AD';"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.template_types' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "57": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 57,
    "query": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
    "turn_history": {
      "actions": [
        "SELECT title FROM cartoons WHERE director IN ('Ben Jones', 'Brandon Vietti');"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "58": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 58,
    "query": "Find the first name and age of students who have a pet.",
    "turn_history": {
      "actions": [
        "SELECT first_name, age FROM students WHERE pet IS NOT NULL;"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "59": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 59,
    "query": "Show the student IDs and numbers of friends corresponding to each.",
    "turn_history": {
      "actions": [
        "SELECT student_id, COUNT(friend_id) AS number_of_friends FROM friends GROUP BY student_id;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.friends' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "60": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 60,
    "query": "What are the distinct template type descriptions for the templates ever used by any document?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT template_type_description FROM templates INNER JOIN documents ON templates.template_id = documents.template_id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'template_type_description' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "61": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 61,
    "query": "What is the average edispl of the cars of model volvo?",
    "turn_history": {
      "actions": [
        "SELECT AVG(edispl) FROM cars WHERE model = 'volvo';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "62": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 62,
    "query": "Find the name of the shops that do not hire any employee.",
    "turn_history": {
      "actions": [
        "SELECT name FROM shops WHERE shop_id NOT IN (SELECT shop_id FROM employees);"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "63": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 63,
    "query": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
    "turn_history": {
      "actions": [
        "SELECT country, COUNT(*) AS num_channels FROM tv_channels GROUP BY country ORDER BY num_channels DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "64": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 64,
    "query": "Show all template ids and number of documents using each template.",
    "turn_history": {
      "actions": [
        "SELECT template_id, COUNT(*) AS num_documents FROM documents GROUP BY template_id;"
      ],
      "observations": [
        "[(1, 1), (4, 1), (6, 1), (7, 1), (8, 1), (10, 1), (11, 2), (14, 2), (20, 1), (21, 1), (22, 1), (25, 1)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "65": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 65,
    "query": "What are the names of the singers who performed in a concert in 2014?",
    "turn_history": {
      "actions": [
        "SELECT singer_name FROM concert WHERE year = 2014;"
      ],
      "observations": [
        "Error executing query: Unknown column 'singer_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "66": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 66,
    "query": "Show the stadium name and the number of concerts in each stadium.",
    "turn_history": {
      "actions": [
        "SELECT stadium_name, COUNT(*) as num_concerts FROM concerts GROUP BY stadium_name;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "67": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 67,
    "query": "What are the orchestras that do not have any performances?",
    "turn_history": {
      "actions": [
        "SELECT orchestra_name  FROM orchestras  WHERE orchestra_id NOT IN (SELECT DISTINCT orchestra_id FROM performances);"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "68": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 68,
    "query": "What are the type codes and descriptions for all template types?",
    "turn_history": {
      "actions": [
        "SELECT type_code, description FROM template_types;"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.template_types' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "69": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 69,
    "query": "What are the names of the teachers who teach at least two courses?",
    "turn_history": {
      "actions": [
        "SELECT teacher_name FROM teachers WHERE teacher_id IN (   SELECT teacher_id   FROM courses   GROUP BY teacher_id   HAVING COUNT(*) >= 2 );"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "70": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 70,
    "query": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
    "turn_history": {
      "actions": [
        "SELECT contestant_number, contestant_name FROM contestants WHERE votes = (SELECT MIN(votes) FROM contestants WHERE votes > 0);"
      ],
      "observations": [
        "Error executing query: Unknown column 'votes' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "71": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 71,
    "query": "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
    "turn_history": {
      "actions": [
        "SELECT citizenship FROM singers WHERE birth_year < 1945 OR birth_year > 1955;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "72": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 72,
    "query": "What is the average, minimum, and maximum age of all singers from France?",
    "turn_history": {
      "actions": [
        "SELECT AVG(age), MIN(age), MAX(age) FROM singers WHERE country = 'France';"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "73": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 73,
    "query": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE departure_city = 'Aberdeen' AND destination_city = 'Ashley';"
      ],
      "observations": [
        "Error executing query: Unknown column 'departure_city' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "74": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 74,
    "query": "What are years of founding for orchestras that have had more than a single performance?",
    "turn_history": {
      "actions": [
        "SELECT year_founded FROM orchestras GROUP BY year_founded HAVING COUNT(*) > 1;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "75": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 75,
    "query": "What are the names of tournaments that have more than 10 matches?",
    "turn_history": {
      "actions": [
        "SELECT tournament_name FROM tournaments WHERE (SELECT COUNT(*) FROM matches WHERE matches.tournament_id = tournaments.tournament_id) > 10;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.tournaments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "76": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 76,
    "query": "How many orchestras does each record company manage?",
    "turn_history": {
      "actions": [
        "SELECT record_company, COUNT(orchestra)  FROM table_name  GROUP BY record_company;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "77": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 77,
    "query": "What are different nationalities of people and the corresponding number of people from each nation?",
    "turn_history": {
      "actions": [
        "SELECT nationality, COUNT(*) as count FROM people GROUP BY nationality;"
      ],
      "observations": [
        "[('Russia', 6), ('Bulgaria', 1)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "78": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 78,
    "query": "In 1980, how many cars were made?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE year = 1980;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "79": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 79,
    "query": "How many countries have governments that are republics?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countries WHERE government_form = 'Republic';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "80": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 80,
    "query": "What are the first names of all players, and their average rankings?",
    "turn_history": {
      "actions": [
        "SELECT first_name, AVG(rank) FROM players GROUP BY first_name;"
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') FROM players GROUP BY first_name' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "81": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 81,
    "query": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
    "turn_history": {
      "actions": [
        "SELECT airline_name  FROM flights  WHERE departure_airport = 'APG'  AND arrival_airport = 'CVO'  INTERSECT  SELECT airline_name  FROM flights  WHERE departure_airport = 'CVO'  AND arrival_airport = 'APG';"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "82": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 82,
    "query": "Please show the different record companies and the corresponding number of orchestras.",
    "turn_history": {
      "actions": [
        "SELECT record_company, COUNT(orchestra) FROM table_name GROUP BY record_company;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "83": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 83,
    "query": "Find the abbreviation and country of the airline that has fewest number of flights?",
    "turn_history": {
      "actions": [
        "SELECT abbreviation, country FROM airlines WHERE airline_id = (   SELECT airline_id   FROM flights   GROUP BY airline_id   ORDER BY COUNT(*) ASC   LIMIT 1 );"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_id' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "84": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 84,
    "query": "List the language used least number of TV Channel. List language and number of TV Channel.",
    "turn_history": {
      "actions": [
        "SELECT language, COUNT(*) AS num_channels FROM tv_channels GROUP BY language ORDER BY num_channels ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "85": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 85,
    "query": "Return the codes of countries for which Spanish is the predominantly spoken language.",
    "turn_history": {
      "actions": [
        "SELECT Code FROM CountryLanguage WHERE Language = 'Spanish' AND Percentage > 50;"
      ],
      "observations": [
        "Error executing query: Unknown column 'Code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "86": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 86,
    "query": "What are the names of conductors, ordered by age?",
    "turn_history": {
      "actions": [
        "SELECT name FROM conductors ORDER BY age;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "87": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 87,
    "query": "What is the total count of teachers?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM teachers;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "88": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 88,
    "query": "Find the number of professionals who have ever treated dogs.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT professional_id) FROM treatments WHERE animal_type = 'dog';"
      ],
      "observations": [
        "Error executing query: Unknown column 'animal_type' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "89": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 89,
    "query": "how many cars were produced in 1980?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE year = 1980;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "90": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 90,
    "query": "What are all the makers and models?",
    "turn_history": {
      "actions": [
        "SELECT maker, model FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "91": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 91,
    "query": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
    "turn_history": {
      "actions": [
        "SELECT package_options, series_name FROM tv_channel WHERE supports_hd = 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'package_options' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "92": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 92,
    "query": "What is the average miles per gallon of all the cards with 4 cylinders?",
    "turn_history": {
      "actions": [
        "SELECT AVG(miles_per_gallon) FROM cars WHERE cylinders = 4;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "93": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 93,
    "query": "How many continents are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM continents;"
      ],
      "observations": [
        "[(5,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "94": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 94,
    "query": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
    "turn_history": {
      "actions": [
        "SELECT winner_name  FROM tournament  WHERE tournament_name = 'Australian Open'  ORDER BY rank_points DESC  LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.tournament' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "95": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 95,
    "query": "List all document ids with at least two paragraphs.",
    "turn_history": {
      "actions": [
        "SELECT document_id FROM documents GROUP BY document_id HAVING COUNT(DISTINCT paragraph_id) >= 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'paragraph_id' in 'having clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "96": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 96,
    "query": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
    "turn_history": {
      "actions": [
        "SELECT record_company FROM orchestras ORDER BY year_founded DESC;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "97": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 97,
    "query": "What is the name of the museum that had no visitor yet?",
    "turn_history": {
      "actions": [
        "SELECT name FROM museum WHERE visitors = 0;"
      ],
      "observations": [
        "Error executing query: Unknown column 'visitors' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "98": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 98,
    "query": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
    "turn_history": {
      "actions": [
        "SELECT title FROM cartoons WHERE director IN ('Ben Jones', 'Brandon Vietti');"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "99": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 99,
    "query": "What are the song titles and singer names?",
    "turn_history": {
      "actions": [
        "SELECT song_title, singer_name FROM songs;"
      ],
      "observations": [
        "Error executing query: Table 'singer.songs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "100": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 100,
    "query": "Return the id of the document with the fewest paragraphs.",
    "turn_history": {
      "actions": [
        "SELECT id FROM documents ORDER BY paragraphs LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "101": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 101,
    "query": "How many dogs went through any treatments?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM treatments WHERE animal_type = 'dog';"
      ],
      "observations": [
        "Error executing query: Unknown column 'animal_type' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "102": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 102,
    "query": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
    "turn_history": {
      "actions": [
        "SELECT code FROM countries WHERE language <> 'English' AND government_form <> 'Republic'"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "103": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 103,
    "query": "List the cost of each treatment and the corresponding treatment type description.",
    "turn_history": {
      "actions": [
        "SELECT treatment.cost, treatment_type.description FROM treatment JOIN treatment_type ON treatment.treatment_type_id = treatment_type.id;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.treatment' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "104": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 104,
    "query": "What is the average transcript date?",
    "turn_history": {
      "actions": [
        "SELECT AVG(transcript_date) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "105": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 105,
    "query": "What is the number of the cars with horsepower more than 150?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE horsepower > 150;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "106": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 106,
    "query": "List the first and last name of all players who are left / L hand in the order of birth date.",
    "turn_history": {
      "actions": [
        "SELECT first_name, last_name FROM players WHERE handedness = 'L' ORDER BY birth_date;"
      ],
      "observations": [
        "Error executing query: Unknown column 'handedness' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "107": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 107,
    "query": "What is the degree summary name that has the most number of students enrolled?",
    "turn_history": {
      "actions": [
        "SELECT degree_summary_name FROM enrollment_summary GROUP BY degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollment_summary' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "108": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 108,
    "query": "What are the names of people who are not from Russia?",
    "turn_history": {
      "actions": [
        "SELECT name FROM people WHERE country <> 'Russia';"
      ],
      "observations": [
        "Error executing query: Unknown column 'country' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "109": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 109,
    "query": "Find the first name of students who have both cat and dog pets .",
    "turn_history": {
      "actions": [
        "SELECT first_name FROM students WHERE pet = 'cat' AND first_name IN (SELECT first_name FROM students WHERE pet = 'dog');"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "110": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 110,
    "query": "What is the name of the conductor who has conducted the most orchestras?",
    "turn_history": {
      "actions": [
        "SELECT conductor_name FROM orchestras GROUP BY conductor_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "111": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 111,
    "query": "How many countries has more than 2 car makers ?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT Country) FROM CarMakers GROUP BY Country HAVING COUNT(DISTINCT Maker) > 2;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.carmakers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "112": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 112,
    "query": "Which language is spoken by the largest number of countries?",
    "turn_history": {
      "actions": [
        "SELECT Language, COUNT(*) AS NumCountries FROM CountryLanguage GROUP BY Language ORDER BY NumCountries DESC LIMIT 1;"
      ],
      "observations": [
        "[('English', 60)]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "113": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 113,
    "query": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
    "turn_history": {
      "actions": [
        "SELECT name, country, age FROM singers ORDER BY age DESC;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "114": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 114,
    "query": "For all of the 4 cylinder cars, which model has the most horsepower?",
    "turn_history": {
      "actions": [
        "SELECT model FROM cars WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "115": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 115,
    "query": "Give the names of countries that are in Europe and have a population equal to 80000.",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries WHERE continent = 'Europe' AND population = 80000;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "116": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 116,
    "query": "How many dog pets are raised by female students?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM pets WHERE species = 'dog' AND owner_gender = 'female' AND owner_type = 'student';"
      ],
      "observations": [
        "Error executing query: Unknown column 'species' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "117": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 117,
    "query": "Which airlines have less than 200 flights?",
    "turn_history": {
      "actions": [
        "SELECT airline_name FROM flights GROUP BY airline_name HAVING COUNT(*) < 200;"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "118": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 118,
    "query": "Count the number of dogs that went through a treatment.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM treatment WHERE animal_type = 'dog';"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.treatment' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "119": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 119,
    "query": "Find the distinct breed type and size type combinations for dogs.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT breed_type, size_type FROM dogs;"
      ],
      "observations": [
        "Error executing query: Unknown column 'breed_type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "120": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 120,
    "query": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
    "turn_history": {
      "actions": [
        "SELECT pixel_aspect_ratio, nation FROM tv_channels WHERE language != 'English'"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "121": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 121,
    "query": "How many official languages are spoken in Afghanistan?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';"
      ],
      "observations": [
        "[(2,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "122": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 122,
    "query": "List the first name of all the professionals along with the description of the treatment they have done.",
    "turn_history": {
      "actions": [
        "SELECT professionals.first_name, treatments.description FROM professionals INNER JOIN treatments ON professionals.id = treatments.professional_id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'treatments.description' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "123": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 123,
    "query": "How many high schoolers are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM Highschooler;"
      ],
      "observations": [
        "[(16,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "124": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 124,
    "query": "What is the continent name which Anguilla belongs to?",
    "turn_history": {
      "actions": [
        "SELECT continent_name FROM countries WHERE country_name = 'Anguilla';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "125": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 125,
    "query": "What other details can you tell me about students in reverse alphabetical order?",
    "turn_history": {
      "actions": [
        "SELECT * FROM students ORDER BY name DESC;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'order clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "126": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 126,
    "query": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countries WHERE Language='Spanish' ORDER BY Percentage DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "127": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 127,
    "query": "What is the name and capacity of the stadium with the most concerts after 2013 ?",
    "turn_history": {
      "actions": [
        "SELECT name, capacity FROM stadiums WHERE id IN (     SELECT stadium_id     FROM concerts     WHERE year > 2013     GROUP BY stadium_id     ORDER BY COUNT(*) DESC     LIMIT 1 );"
      ],
      "observations": [
        "Error executing query: This version of MySQL doesn't yet support 'LIMIT & IN/ALL/ANY/SOME subquery'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "128": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 128,
    "query": "Which continent is Anguilla in?",
    "turn_history": {
      "actions": [
        "SELECT continent FROM countries WHERE name = 'Anguilla';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "129": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 129,
    "query": "What's the name of the course with most number of enrollments?",
    "turn_history": {
      "actions": [
        "SELECT course_name FROM enrollments GROUP BY course_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "130": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 130,
    "query": "What is the count of the car models produced in the United States?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE country = 'United States';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "131": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 131,
    "query": "Find the number of cartoons directed by each of the listed directors.",
    "turn_history": {
      "actions": [
        "SELECT director, COUNT(cartoon) FROM cartoons GROUP BY director;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "132": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 132,
    "query": "List the names of employees and sort in ascending order of age.",
    "turn_history": {
      "actions": [
        "SELECT name FROM employees ORDER BY age ASC;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "133": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 133,
    "query": "What are the names and areas of countries with the top 5 largest area?",
    "turn_history": {
      "actions": [
        "SELECT name, area FROM countries ORDER BY area DESC LIMIT 5;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "134": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 134,
    "query": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
    "turn_history": {
      "actions": [
        "SELECT country_name, COUNT(language) AS num_languages FROM country_language GROUP BY country_name HAVING num_languages > 2;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.country_language' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "135": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 135,
    "query": "Return the names of the 3 most populated countries.",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries ORDER BY population DESC LIMIT 3;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "136": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 136,
    "query": "What is the total surface area of the countries in the Caribbean region?",
    "turn_history": {
      "actions": [
        "SELECT SUM(surface_area) FROM countries WHERE region = 'Caribbean';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "137": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 137,
    "query": "Show names of all high school students who do not have any friends.",
    "turn_history": {
      "actions": [
        "SELECT name FROM students WHERE grade = 'high' AND id NOT IN (SELECT student_id FROM friendships);"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "138": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 138,
    "query": "How many different winners both participated in the WTA Championships and were left handed?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tournament_name = 'WTA Championships' AND winner_hand = 'L';"
      ],
      "observations": [
        "Error executing query: Unknown column 'tournament_name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "139": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 139,
    "query": "What is the age and hometown of every teacher?",
    "turn_history": {
      "actions": [
        "SELECT age, hometown FROM teacher;"
      ],
      "observations": [
        "[('32', 'Blackrod Urban District'), ('29', 'Bolton County Borough'), ('26', 'Farnworth Municipal Borough'), ('33', 'Horwich Urban District'), ('45', 'Kearsley Urban District'), ('41', 'Little Lever Urban District'), ('39', 'Turton Urban District')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "140": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 140,
    "query": "What is the department description for the one whose name has the word computer?",
    "turn_history": {
      "actions": [
        "SELECT department_description FROM departments WHERE department_name LIKE '%computer%';"
      ],
      "observations": [
        "[('error',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "141": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 141,
    "query": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.",
    "turn_history": {
      "actions": [
        "SELECT pet_id FROM ownership WHERE student_id IN (SELECT student_id FROM student WHERE last_name = 'Smith');"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.ownership' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "142": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 142,
    "query": "What is the name and directors of all the cartoons that are ordered by air date?",
    "turn_history": {
      "actions": [
        "SELECT name, directors FROM cartoons ORDER BY air_date;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "143": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 143,
    "query": "How many documents are using the template with type code 'PPT'?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM documents WHERE template_type = 'PPT';"
      ],
      "observations": [
        "Error executing query: Unknown column 'template_type' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "144": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 144,
    "query": "Which city is the most frequent source airport?",
    "turn_history": {
      "actions": [
        "SELECT source_airport_city AS most_frequent_city FROM flights GROUP BY source_airport_city ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'source_airport_city' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "145": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 145,
    "query": "Show the number of high schoolers for each grade.",
    "turn_history": {
      "actions": [
        "SELECT grade, COUNT(*) AS num_high_schoolers FROM students WHERE grade >= 9 AND grade <= 12 GROUP BY grade;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "146": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 146,
    "query": "What is the name and capacity for the stadium with the highest average attendance?",
    "turn_history": {
      "actions": [
        "SELECT name, capacity FROM stadiums ORDER BY average_attendance DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "147": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 147,
    "query": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
    "turn_history": {
      "actions": [
        "SELECT c.title  FROM Cartoons c  INNER JOIN Series s ON c.series_id = s.id  WHERE s.name = 'Sky Radio' AND c.showed_on_tv_channel = 1;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "148": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 148,
    "query": "What are the opening year and staff number of the museum named Plaza Museum?",
    "turn_history": {
      "actions": [
        "SELECT opening_year, staff_number FROM museum WHERE name = 'Plaza Museum';"
      ],
      "observations": [
        "Error executing query: Unknown column 'opening_year' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "149": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 149,
    "query": "What is the first, middle, and last name of the earliest school graduate?",
    "turn_history": {
      "actions": [
        "SELECT first_name, middle_name, last_name FROM graduates ORDER BY graduation_date ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.graduates' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "150": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 150,
    "query": "How many cars have more than 4 cylinders?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE cylinders > 4;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "151": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 151,
    "query": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
    "turn_history": {
      "actions": [
        "SELECT o.owner_id, o.last_name FROM owners o JOIN pets p ON o.owner_id = p.owner_id JOIN treatments t ON p.pet_id = t.pet_id WHERE p.species = 'dog' GROUP BY o.owner_id ORDER BY SUM(t.cost) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.pets' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "152": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 152,
    "query": "What are the countries having at least one car maker? List name and id.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT countries.id, countries.name  FROM countries  INNER JOIN car_makers ON countries.id = car_makers.country_id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'countries.id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "153": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 153,
    "query": "Which makers designed more than 3 car models? List full name and the id.",
    "turn_history": {
      "actions": [
        "SELECT maker_id, CONCAT_WS(' ', maker_fname, maker_lname) AS full_name FROM makers WHERE maker_id IN (   SELECT maker_id   FROM models   GROUP BY maker_id   HAVING COUNT(*) > 3 );"
      ],
      "observations": [
        "Error executing query: Table 'car_1.makers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "154": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 154,
    "query": "Show paragraph details for paragraph with text 'Korea ' .",
    "turn_history": {
      "actions": [
        "SELECT * FROM paragraph_details WHERE paragraph_text = 'Korea';"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.paragraph_details' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "155": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 155,
    "query": "How many countries have a republic as their form of government?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countries WHERE government_form = 'Republic';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "156": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 156,
    "query": "How many different degrees are offered?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT degree) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "157": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 157,
    "query": "Count the number of poker players.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM poker_players;"
      ],
      "observations": [
        "[(5,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "158": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 158,
    "query": "How many different forms of governments are there in Africa?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT government_form) FROM countries WHERE continent = 'Africa';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "159": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 159,
    "query": "What are the name, population, and life expectancy of the largest Asian country by land?",
    "turn_history": {
      "actions": [
        "SELECT name, population, life_expectancy FROM countries WHERE continent = 'Asia' ORDER BY surface_area DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "160": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 160,
    "query": "Which employee received the most awards in evaluations? Give me the employee name.",
    "turn_history": {
      "actions": [
        "SELECT employee_name FROM evaluations GROUP BY employee_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.evaluations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "161": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 161,
    "query": "How many different types of pet are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT type_of_pet) FROM pets;"
      ],
      "observations": [
        "Error executing query: Unknown column 'type_of_pet' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "162": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 162,
    "query": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.tv_channel_id AND cartoon.director = 'Ben Jones' WHERE cartoon.id IS NULL;"
      ],
      "observations": [
        "Error executing query: Unknown column 'cartoon.tv_channel_id' in 'on clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "163": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 163,
    "query": "Which city has most number of arriving flights?",
    "turn_history": {
      "actions": [
        "SELECT arrival_city, COUNT(*) AS num_arrivals FROM flights GROUP BY arrival_city ORDER BY num_arrivals DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'arrival_city' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "164": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 164,
    "query": "Return the average attendance across all shows.",
    "turn_history": {
      "actions": [
        "SELECT AVG(attendance) FROM shows;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.shows' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "165": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 165,
    "query": "What major is every student who does not own a cat as a pet, and also how old are they?",
    "turn_history": {
      "actions": [
        "SELECT major, age FROM students WHERE pet <> 'cat'"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "166": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 166,
    "query": "How many matches were played in 2013 or 2016?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM matches WHERE season IN (2013, 2016);"
      ],
      "observations": [
        "Error executing query: Unknown column 'season' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "167": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 167,
    "query": "Return the names of friends of the high school student Kyle.",
    "turn_history": {
      "actions": [
        "SELECT name FROM friends WHERE student = 'Kyle' AND school = 'High School';"
      ],
      "observations": [
        "Error executing query: Table 'network_1.friends' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "168": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 168,
    "query": "What are the countries that have cartoons on TV that were written by Todd Casey?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT country FROM tv_shows WHERE writer = 'Todd Casey' AND genre = 'Cartoon';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_shows' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "169": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 169,
    "query": "What is the average grade of students who have friends?",
    "turn_history": {
      "actions": [
        "SELECT AVG(grade) FROM students WHERE has_friends = 1;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "170": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 170,
    "query": "What is the name of the conductor who has worked the greatest number of years?",
    "turn_history": {
      "actions": [
        "SELECT conductor_name FROM conductors ORDER BY years_of_service DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "171": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 171,
    "query": "How many degrees does the engineering department offer?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM degrees WHERE department = 'engineering';"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.degrees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "172": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 172,
    "query": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
    "turn_history": {
      "actions": [
        "SELECT first_name, age FROM students WHERE pet = 'dog' AND first_name NOT IN (SELECT first_name FROM students WHERE pet = 'cat');"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "173": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 173,
    "query": "What is the average and maximum age for each pet type?",
    "turn_history": {
      "actions": [
        "SELECT pet_type, AVG(age) AS avg_age, MAX(age) AS max_age FROM pets GROUP BY pet_type;"
      ],
      "observations": [
        "Error executing query: Unknown column 'pet_type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "174": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 174,
    "query": "Which distinct car models are the produced after 1980?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT car_model FROM car_table WHERE production_year > 1980;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.car_table' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "175": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 175,
    "query": "What are each professional's first name and description of the treatment they have performed?",
    "turn_history": {
      "actions": [
        "SELECT professionals.first_name, treatments.description FROM professionals INNER JOIN treatments ON professionals.id = treatments.professional_id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'treatments.description' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "176": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 176,
    "query": "What is the average horsepower for all cars produced before 1980 ?",
    "turn_history": {
      "actions": [
        "SELECT AVG(horsepower) FROM cars WHERE year < 1980;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "177": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 177,
    "query": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
    "turn_history": {
      "actions": [
        "SELECT last_name FROM students WHERE state = 'North Carolina' AND student_id NOT IN (SELECT student_id FROM student_degrees);"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.student_degrees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "178": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 178,
    "query": "How many countries speak both English and Dutch?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countrylanguage cl1 JOIN countrylanguage cl2 ON cl1.CountryCode = cl2.CountryCode JOIN country c ON cl1.CountryCode = c.Code WHERE cl1.Language = 'English' AND cl2.Language = 'Dutch' AND c.Continent != 'Antarctica';"
      ],
      "observations": [
        "[(3,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "179": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 179,
    "query": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
    "turn_history": {
      "actions": [
        "SELECT last_name FROM students  WHERE state = 'North Carolina'  AND student_id NOT IN (SELECT student_id FROM student_degrees);"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.student_degrees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "180": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 180,
    "query": "Count the number of different templates used for documents.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT template) FROM documents;"
      ],
      "observations": [
        "Error executing query: Unknown column 'template' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "181": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 181,
    "query": "Which city has the most frequent destination airport?",
    "turn_history": {
      "actions": [
        "SELECT city FROM flights GROUP BY city ORDER BY COUNT(destination_airport) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'city' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "182": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 182,
    "query": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
    "turn_history": {
      "actions": [
        "SELECT first_name, middle_name, last_name FROM students WHERE program = 'Bachelor';"
      ],
      "observations": [
        "Error executing query: Unknown column 'program' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "183": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 183,
    "query": "Give the language that is spoken in the most countries.",
    "turn_history": {
      "actions": [
        "SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "[('English',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "184": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 184,
    "query": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?",
    "turn_history": {
      "actions": [
        "SELECT id, name FROM countries WHERE id IN (SELECT country_id FROM car_makers GROUP BY country_id HAVING COUNT(*) > 3) OR id IN (SELECT country_id FROM car_models WHERE name = 'fiat');"
      ],
      "observations": [
        "Error executing query: Table 'car_1.car_models' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "185": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 185,
    "query": "What are the death and injury situations caused by the ship with tonnage 't'?",
    "turn_history": {
      "actions": [
        "SELECT death_situation, injury_situation FROM ship_table WHERE tonnage = 't';"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.ship_table' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "186": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 186,
    "query": "How many flights does airline 'JetBlue Airways' have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE airline = 'JetBlue Airways';"
      ],
      "observations": [
        "[(0,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "187": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 187,
    "query": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
    "turn_history": {
      "actions": [
        "SELECT p.id, p.cell_phone FROM professionals p INNER JOIN treatments t ON p.id = t.professional_id GROUP BY p.id, p.cell_phone HAVING COUNT(DISTINCT t.type) >= 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'p.id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "188": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 188,
    "query": "How many pets have a greater weight than 10?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM pets WHERE weight > 10;"
      ],
      "observations": [
        "[(2,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "189": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 189,
    "query": "Show the names of high schoolers who have at least 3 friends.",
    "turn_history": {
      "actions": [
        "SELECT name FROM Highschooler WHERE ID IN (SELECT ID1 FROM Friend GROUP BY ID1 HAVING COUNT(ID2) >= 3) ORDER BY name;"
      ],
      "observations": [
        "Error executing query: Unknown column 'ID1' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "190": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 190,
    "query": "What are the languages used by the least number of TV Channels and how many channels use it?",
    "turn_history": {
      "actions": [
        "SELECT language, COUNT(*) AS num_channels FROM channel_languages GROUP BY language HAVING num_channels = (SELECT MIN(channel_count) FROM (SELECT COUNT(*) AS channel_count FROM channel_languages GROUP BY language) AS counts)"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.channel_languages' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "191": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 191,
    "query": "Find the average age of students who do not have any pet .",
    "turn_history": {
      "actions": [
        "SELECT AVG(age) FROM students WHERE pet IS NULL;"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "192": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 192,
    "query": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
    "turn_history": {
      "actions": [
        "SELECT role, street, city, state FROM professionals WHERE city LIKE '%West%';"
      ],
      "observations": [
        "Error executing query: Unknown column 'role' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "193": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 193,
    "query": "List each language and the number of TV Channels using it.",
    "turn_history": {
      "actions": [
        "SELECT language, COUNT(*) AS num_channels FROM tv_channels GROUP BY language;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "194": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 194,
    "query": "Show names of teachers and the courses they are arranged to teach.",
    "turn_history": {
      "actions": [
        "SELECT teachers.name, courses.course_name FROM teachers INNER JOIN courses ON teachers.teacher_id = courses.teacher_id;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "195": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 195,
    "query": "Give the name, population, and head of state for the country that has the largest area.",
    "turn_history": {
      "actions": [
        "SELECT name, population, head_of_state FROM countries ORDER BY area DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "196": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 196,
    "query": "What is the sname of every sing that does not have any song?",
    "turn_history": {
      "actions": [
        "SELECT sname FROM songs WHERE sid NOT IN (SELECT sid FROM albumsongs);"
      ],
      "observations": [
        "Error executing query: Table 'singer.songs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "197": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 197,
    "query": "What is the name of the singer who is worth the most?",
    "turn_history": {
      "actions": [
        "SELECT name FROM singers ORDER BY net_worth DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "198": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 198,
    "query": "Return the id and type code of the template that is used for the greatest number of documents.",
    "turn_history": {
      "actions": [
        "SELECT id, type_code FROM templates WHERE id = (   SELECT template_id   FROM documents   GROUP BY template_id   ORDER BY COUNT(*) DESC   LIMIT 1 );"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "199": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 199,
    "query": "Find the highest rank of losers in all matches.",
    "turn_history": {
      "actions": [
        "SELECT MAX(rank) FROM losers;"
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') FROM losers' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "200": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 200,
    "query": "How many 'United Airlines' flights depart from Airport 'AHD'?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND departure_airport = 'AHD';"
      ],
      "observations": [
        "Error executing query: Unknown column 'departure_airport' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "201": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 201,
    "query": "What is the name of the shop that is hiring the largest number of employees?",
    "turn_history": {
      "actions": [
        "SELECT shop_name FROM hiring_table GROUP BY shop_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.hiring_table' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "202": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 202,
    "query": "For the countries founded before 1930, what is the total number of distinct official languages?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT official_language)  FROM countries  WHERE year_founded < 1930;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "203": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 203,
    "query": "What are the names of the singers whose birth years are either 1948 or 1949?",
    "turn_history": {
      "actions": [
        "SELECT name FROM singers WHERE birth_year IN (1948, 1949);"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "204": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 204,
    "query": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT country FROM tv_channels WHERE country NOT IN (   SELECT country   FROM tv_channels   JOIN shows ON tv_channels.channel_id = shows.channel_id   JOIN writers ON shows.show_id = writers.show_id   WHERE writers.writer_name = 'Todd Casey' AND shows.show_genre = 'Cartoon' );"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "205": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 205,
    "query": "How many flights land in Aberdeen or Abilene?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE destination IN ('Aberdeen', 'Abilene');"
      ],
      "observations": [
        "Error executing query: Unknown column 'destination' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "206": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 206,
    "query": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE accelerate > (SELECT MAX(horsepower) FROM cars);"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "207": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 207,
    "query": "What are the names of high schoolers who have 3 or more friends?",
    "turn_history": {
      "actions": [
        "SELECT h.name FROM Highschooler h, Friend f WHERE h.ID = f.ID1 GROUP BY h.ID HAVING COUNT(*) >= 3;"
      ],
      "observations": [
        "Error executing query: Unknown column 'f.ID1' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "208": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 208,
    "query": "What are the names of the teachers whose courses have not been arranged?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT teacher_name  FROM teachers  WHERE teacher_id NOT IN (SELECT teacher_id FROM courses WHERE course_arranged = 'Yes');"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "209": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 209,
    "query": "What are the regions that use English or Dutch?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT region FROM table_name WHERE language IN ('English', 'Dutch');"
      ],
      "observations": [
        "Error executing query: Table 'world_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "210": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 210,
    "query": "Find the number of players for each hand type.",
    "turn_history": {
      "actions": [
        "SELECT hand_type, COUNT(*) AS num_players FROM players GROUP BY hand_type;"
      ],
      "observations": [
        "Error executing query: Unknown column 'hand_type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "211": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 211,
    "query": "Find the model of the car whose weight is below the average weight.",
    "turn_history": {
      "actions": [
        "SELECT model FROM cars WHERE weight < (SELECT AVG(weight) FROM cars);"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "212": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 212,
    "query": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT Model FROM table_name WHERE Maker='General Motors' OR Weight>3500;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "213": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 213,
    "query": "Give the city and country for the Alton airport.",
    "turn_history": {
      "actions": [
        "SELECT city, country FROM airports WHERE name = 'Alton';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "214": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 214,
    "query": "How many car models are produced by each maker ? Only list the count and the maker full name .",
    "turn_history": {
      "actions": [
        "SELECT COUNT(car_model) AS model_count, maker_full_name FROM car_table GROUP BY maker_full_name;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.car_table' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "215": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 215,
    "query": "What are the maximum and minimum values of area codes?",
    "turn_history": {
      "actions": [
        "SELECT MAX(area_code), MIN(area_code) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'voter_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "216": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 216,
    "query": "List the arrival date and the departure date for all the dogs.",
    "turn_history": {
      "actions": [
        "SELECT arrival_date, departure_date FROM dogs;"
      ],
      "observations": [
        "Error executing query: Unknown column 'arrival_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "217": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 217,
    "query": "What are the contestant numbers and names of the contestants who had at least two votes?",
    "turn_history": {
      "actions": [
        "SELECT contestant_number, contestant_name FROM votes WHERE votes >= 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'contestant_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "218": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 218,
    "query": "Show the names of conductors and the orchestras they have conducted.",
    "turn_history": {
      "actions": [
        "SELECT ConductorName, OrchestraName FROM Conductors INNER JOIN Conducted ON Conductors.ConductorID = Conducted.ConductorID INNER JOIN Orchestras ON Conducted.OrchestraID = Orchestras.OrchestraID;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "219": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 219,
    "query": "How many paragraphs in total?",
    "turn_history": {
      "actions": [
        "I'm sorry, but your question is unclear. Can you please provide more context and information about what you are trying to achieve?"
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'I'm sorry, but your question is unclear. Can you please provide more context and' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "220": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 220,
    "query": "What is the most common singer citizenship ?",
    "turn_history": {
      "actions": [
        "SELECT citizenship, COUNT(*) AS count FROM singers GROUP BY citizenship ORDER BY count DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "221": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 221,
    "query": "What is the most populace city that speaks English?",
    "turn_history": {
      "actions": [
        "SELECT city.name, MAX(city.population)  FROM city  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE countrylanguage.language = 'English'  GROUP BY city.name  ORDER BY MAX(city.population) DESC  LIMIT 1;"
      ],
      "observations": [
        "[('New York', 8008278)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "222": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 222,
    "query": "Find the total number of players.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM players;"
      ],
      "observations": [
        "[(0,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "223": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 223,
    "query": "How many different series and contents are listed in the TV Channel table?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT series), COUNT(DISTINCT content) FROM TV_Channel;"
      ],
      "observations": [
        "Error executing query: Unknown column 'series' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "224": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 224,
    "query": "List the names of teachers in ascending order of age.",
    "turn_history": {
      "actions": [
        "SELECT name FROM teachers ORDER BY age ASC;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "225": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 225,
    "query": "What is the number of nations that use English and Dutch?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countries WHERE language IN ('English', 'Dutch');"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "226": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 226,
    "query": "How many airlines are from USA?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM airlines WHERE country = 'USA';"
      ],
      "observations": [
        "[(12,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "227": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 227,
    "query": "Find the make and production time of the cars that were produced in the earliest year?",
    "turn_history": {
      "actions": [
        "SELECT make, production_time FROM cars WHERE production_time = (SELECT MIN(production_time) FROM cars);"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "228": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 228,
    "query": "How many different templates do all document use?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT template) FROM document;"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.document' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "229": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 229,
    "query": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
    "turn_history": {
      "actions": [
        "SELECT id FROM tv_channels WHERE id NOT IN (SELECT channel_id FROM tv_shows WHERE director='Ben Jones' AND genre='cartoon')"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "230": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 230,
    "query": "What are the ids, names, and descriptions for all documents?",
    "turn_history": {
      "actions": [
        "SELECT id, name, description FROM documents;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "231": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 231,
    "query": "What are the ids of templates with template type code PP or PPT?",
    "turn_history": {
      "actions": [
        "SELECT id FROM templates WHERE template_type_code IN ('PP', 'PPT');"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "232": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 232,
    "query": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
    "turn_history": {
      "actions": [
        "SELECT owner_id, zip_code FROM owners WHERE owner_id IN (     SELECT owner_id     FROM dogs     WHERE owner_id = owners.owner_id     GROUP BY owner_id     ORDER BY SUM(cost) DESC     LIMIT 1 );"
      ],
      "observations": [
        "Error executing query: This version of MySQL doesn't yet support 'LIMIT & IN/ALL/ANY/SOME subquery'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "233": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 233,
    "query": "How many countries exist?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countries;"
      ],
      "observations": [
        "[(15,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "234": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 234,
    "query": "Count the number of paragraphs in the document named 'Summer Show'.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM documents WHERE name = 'Summer Show' AND type = 'paragraph';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "235": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 235,
    "query": "Which template type code is used by most number of documents?",
    "turn_history": {
      "actions": [
        "SELECT template_type_code FROM documents GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'template_type_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "236": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 236,
    "query": "How many singers are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM singers;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "237": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 237,
    "query": "Tell me the number of dogs that have not received any treatment .",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM dogs WHERE treatment_received = 'No';"
      ],
      "observations": [
        "Error executing query: Unknown column 'treatment_received' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "238": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 238,
    "query": "What are the names of all high schoolers in grade 10?",
    "turn_history": {
      "actions": [
        "SELECT name FROM Highschooler WHERE grade = 10;"
      ],
      "observations": [
        "[('Haley',), ('Kris',), ('Brittany',), ('Andrew',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "239": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 239,
    "query": "Show names of people whose nationality is not \"Russia\".",
    "turn_history": {
      "actions": [
        "SELECT name FROM people WHERE nationality <> 'Russia';"
      ],
      "observations": [
        "[('Teodor Salparov',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "240": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 240,
    "query": "Show the years in which orchestras that have given more than one performance are founded.",
    "turn_history": {
      "actions": [
        "SELECT YEAR(founded) FROM orchestras WHERE id IN (SELECT orchestra_id FROM performances              GROUP BY orchestra_id              HAVING COUNT(*) > 1);"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "241": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 241,
    "query": "How much does the youngest dog weigh?",
    "turn_history": {
      "actions": [
        "SELECT MIN(weight) FROM dogs;"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.dogs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "242": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 242,
    "query": "What is the average and maximum capacities for all stadiums ?",
    "turn_history": {
      "actions": [
        "SELECT AVG(capacity), MAX(capacity) FROM stadiums;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "243": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 243,
    "query": "Give the nationality that is most common across all people.",
    "turn_history": {
      "actions": [
        "SELECT nationality FROM people GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "[('Russia',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "244": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 244,
    "query": "Return the money rank of the player with the greatest earnings.",
    "turn_history": {
      "actions": [
        "SELECT player_name, earnings, DENSE_RANK() OVER (ORDER BY earnings DESC) AS money_rank FROM players ORDER BY earnings DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'poker_player.players' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "245": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 245,
    "query": "What airline serves the most flights?",
    "turn_history": {
      "actions": [
        "SELECT airline_name FROM flights GROUP BY airline_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "246": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 246,
    "query": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT airline_name FROM flights WHERE departure_airport = 'CVO' AND airline_name NOT IN (   SELECT airline_name   FROM flights   WHERE departure_airport = 'APG' );"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "247": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 247,
    "query": "What are each owner's first name, last name, and the size of their dog?",
    "turn_history": {
      "actions": [
        "SELECT owner.first_name, owner.last_name, dog.size FROM owner JOIN dog ON owner.id = dog.owner_id;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.owner' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "248": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 248,
    "query": "How many museums were opened after 2013 or before 2008?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM museums WHERE year_opened > 2013 OR year_opened < 2008;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.museums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "249": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 249,
    "query": "Find the number of shops in each location.",
    "turn_history": {
      "actions": [
        "SELECT location, COUNT(shop_id) AS num_shops FROM shops GROUP BY location;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "250": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 250,
    "query": "Give the total surface area covered by countries in Asia or Europe.",
    "turn_history": {
      "actions": [
        "SELECT SUM(surface_area) FROM countries WHERE continent IN ('Asia', 'Europe');"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "251": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 251,
    "query": "What is the average age of the visitors whose membership level is not higher than 4?",
    "turn_history": {
      "actions": [
        "SELECT AVG(age) FROM visitors WHERE membership_level <= 4;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visitors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "252": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 252,
    "query": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
    "turn_history": {
      "actions": [
        "SELECT air_date FROM TV_series WHERE episode_name = 'A Love of a Lifetime';"
      ],
      "observations": [
        "Error executing query: Unknown column 'episode_name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "253": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 253,
    "query": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
    "turn_history": {
      "actions": [
        "SELECT semester_id  FROM enrollment  WHERE program = 'Masters'  AND semester_id IN (SELECT semester_id FROM enrollment WHERE program = 'Bachelors' );"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollment' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "254": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 254,
    "query": "Compute the average age of all the dogs.",
    "turn_history": {
      "actions": [
        "SELECT AVG(age) FROM dogs;"
      ],
      "observations": [
        "[(5.066666666666666,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "255": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 255,
    "query": "Give the flight numbers of flights landing at APG.",
    "turn_history": {
      "actions": [
        "SELECT flight_number FROM flights WHERE destination = 'APG';"
      ],
      "observations": [
        "Error executing query: Unknown column 'flight_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "256": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 256,
    "query": "How many type of governments are in Africa?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT government_type) FROM countries WHERE continent = 'Africa';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "257": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 257,
    "query": "What is the money rank of the poker player with the highest earnings?",
    "turn_history": {
      "actions": [
        "SELECT MAX(earnings_rank) FROM poker_players;"
      ],
      "observations": [
        "Error executing query: Unknown column 'earnings_rank' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "258": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 258,
    "query": "Find the total number of tours for each ranking date.",
    "turn_history": {
      "actions": [
        "SELECT ranking_date, COUNT(*) AS total_tours FROM tours GROUP BY ranking_date;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.tours' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "259": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 259,
    "query": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
    "turn_history": {
      "actions": [
        "SELECT first_name FROM students WHERE country = 'Haiti' OR cell_phone = '09700166582' LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'country' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "260": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 260,
    "query": "List the maximum weight and type for each type of pet.",
    "turn_history": {
      "actions": [
        "SELECT type, MAX(weight) FROM pets GROUP BY type;"
      ],
      "observations": [
        "Error executing query: Unknown column 'type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "261": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 261,
    "query": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
    "turn_history": {
      "actions": [
        "SELECT teacher.name, course.course_name FROM teacher INNER JOIN course ON teacher.teacher_id = course.teacher_id ORDER BY teacher.name ASC;"
      ],
      "observations": [
        "Error executing query: Unknown column 'course.course_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "262": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 262,
    "query": "What are the number of concerts that occurred in the stadium with the largest capacity ?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM concerts WHERE stadium_capacity = (SELECT MAX(stadium_capacity) FROM concerts);"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "263": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 263,
    "query": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
    "turn_history": {
      "actions": [
        "SELECT document_id FROM table_name WHERE paragraph_text IN ('Brazil', 'Ireland');"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "264": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 264,
    "query": "What is the average, minimum, and maximum age for all French singers?",
    "turn_history": {
      "actions": [
        "SELECT AVG(age), MIN(age), MAX(age) FROM singers WHERE nationality = 'French';"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "265": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 265,
    "query": "Return the code of the template type that is most commonly used in documents.",
    "turn_history": {
      "actions": [
        "SELECT template_type_code FROM documents GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'template_type_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "266": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 266,
    "query": "What are the names of poker players?",
    "turn_history": {
      "actions": [
        "SELECT name FROM poker_players;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "267": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 267,
    "query": "List all song names by singers above the average age.",
    "turn_history": {
      "actions": [
        "SELECT songs.name  FROM songs  JOIN singers ON songs.singer_id = singers.id  WHERE singers.age > (SELECT AVG(age) FROM singers)"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.songs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "268": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 268,
    "query": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT Language) FROM CountryLanguage WHERE CountryCode IN (   SELECT Code FROM Country WHERE IndepYear < 1930 ) AND IsOfficial = 'T'"
      ],
      "observations": [
        "[(40,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "269": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 269,
    "query": "What is the template type code for template type description \"Book\".",
    "turn_history": {
      "actions": [
        "SELECT template_type_code FROM template_types WHERE template_type_description = 'Book';"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.template_types' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "270": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 270,
    "query": "What is the average life expectancy in African countries that are republics?",
    "turn_history": {
      "actions": [
        "SELECT AVG(life_expectancy) FROM countries WHERE continent = 'Africa' AND government_form = 'Republic';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "271": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 271,
    "query": "Find the name and rank points of the winner who won the most times.",
    "turn_history": {
      "actions": [
        "SELECT name, SUM(rank_points) as total_rank_points FROM table_name WHERE wins = (SELECT MAX(wins) FROM table_name) GROUP BY name ORDER BY total_rank_points DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "272": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 272,
    "query": "What is the date and id of the transcript with at least 2 courses listed?",
    "turn_history": {
      "actions": [
        "SELECT date, id FROM transcript WHERE course_count >= 2;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.transcript' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "273": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 273,
    "query": "What are the ids of documents that have 2 or more paragraphs?",
    "turn_history": {
      "actions": [
        "SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) >= 2;"
      ],
      "observations": [
        "[(80,), (2394,), (651512,), (16514113,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "274": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 274,
    "query": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
    "turn_history": {
      "actions": [
        "SELECT government_form, SUM(population) AS total_population FROM world WHERE government_form IN (   SELECT government_form   FROM world   GROUP BY government_form   HAVING AVG(life_expectancy) > 72 ) GROUP BY government_form;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.world' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "275": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 275,
    "query": "What languages are only used by a single country with a republic government?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT language.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code JOIN governmentform ON country.governmentform = governmentform.name JOIN language ON countrylanguage.language = language.code WHERE governmentform.name = 'Republic' AND country.code IN (     SELECT countrycode     FROM countrylanguage     GROUP BY countrycode     HAVING COUNT(*) = 1 )"
      ],
      "observations": [
        "Error executing query: Table 'world_1.governmentform' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "276": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 276,
    "query": "How many languages are spoken in Aruba?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM languages WHERE CountryCode = 'ABW';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.languages' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "277": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 277,
    "query": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
    "turn_history": {
      "actions": [
        "SELECT id, last_name, cell_phone FROM professionals WHERE state = 'Indiana' OR treatments > 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "278": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 278,
    "query": "What are the arriving date and the departing date of all the dogs?",
    "turn_history": {
      "actions": [
        "SELECT arriving_date, departing_date FROM dogs;"
      ],
      "observations": [
        "Error executing query: Unknown column 'arriving_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "279": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 279,
    "query": "Which airlines have a flight with destination airport AHD?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT airline_name  FROM flights  WHERE destination_airport = 'AHD';"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "280": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 280,
    "query": "What are the names of the singers and number of concerts for each person?",
    "turn_history": {
      "actions": [
        "SELECT singers.name, COUNT(concerts.id) AS num_concerts FROM singers JOIN concerts ON singers.id = concerts.singer_id GROUP BY singers.id;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "281": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 281,
    "query": "When was the last transcript released?",
    "turn_history": {
      "actions": [
        "SELECT MAX(release_date) FROM transcripts;"
      ],
      "observations": [
        "Error executing query: Unknown column 'release_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "282": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 282,
    "query": "Give the flight numbers of flights arriving in Aberdeen.",
    "turn_history": {
      "actions": [
        "SELECT flight_number FROM flights WHERE destination = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'flight_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "283": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 283,
    "query": "What is the total number of airlines?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM airlines;"
      ],
      "observations": [
        "[(12,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "284": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 284,
    "query": "How many flights fly from Aberdeen to Ashley?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE origin = 'Aberdeen' AND destination = 'Ashley';"
      ],
      "observations": [
        "Error executing query: Unknown column 'origin' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "285": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 285,
    "query": "What is the airport code of the airport with the most flights?",
    "turn_history": {
      "actions": [
        "SELECT airport_code FROM flights GROUP BY airport_code ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'airport_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "286": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 286,
    "query": "What language is predominantly spoken in Aruba?",
    "turn_history": {
      "actions": [
        "SELECT language FROM countrylanguage WHERE countrycode='ABW' AND isofficial='T'"
      ],
      "observations": [
        "[('Dutch',)]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "287": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 287,
    "query": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
    "turn_history": {
      "actions": [
        "SELECT channel_name, series_name FROM tv_channels WHERE series_name = 'The Rise of the Blue Beetle!';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "288": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 288,
    "query": "Which airlines have departing flights from both APG and CVO airports?",
    "turn_history": {
      "actions": [
        "SELECT airline_name  FROM flights  WHERE departure_airport IN ('APG', 'CVO')  GROUP BY airline_name  HAVING COUNT(DISTINCT departure_airport) = 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "289": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 289,
    "query": "Sort employee names by their age in ascending order.",
    "turn_history": {
      "actions": [
        "SELECT name FROM employee ORDER BY age ASC;"
      ],
      "observations": [
        "[('George Chuter',), ('Andrew Sheridan',), ('Lee Mears',), ('Tim Payne',), ('Matt Stevens',), ('Jason Hobson',), ('Steve Borthwick',), ('Louis Deacon',), ('Phil Vickery',), ('Mark Regan',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "290": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 290,
    "query": "List the names of poker players ordered by the final tables made in ascending order.",
    "turn_history": {
      "actions": [
        "SELECT name FROM poker_players ORDER BY final_tables ASC;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "291": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 291,
    "query": "Describe the section h.",
    "turn_history": {
      "actions": [
        "DESCRIBE section_h;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.section_h' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "292": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 292,
    "query": "What is the description of the department whose name has the substring the computer?",
    "turn_history": {
      "actions": [
        "SELECT description FROM department WHERE name LIKE '%the computer%';"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.department' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "293": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 293,
    "query": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
    "turn_history": {
      "actions": [
        "SELECT first_name, last_name, email FROM owners WHERE state LIKE '%North%';"
      ],
      "observations": [
        "Error executing query: Unknown column 'email' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "294": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 294,
    "query": "What are the manager name and district of the shop that sells the largest number of products?",
    "turn_history": {
      "actions": [
        "SELECT s.manager_name, s.district FROM shops s WHERE s.shop_id = (   SELECT p.shop_id   FROM products p   GROUP BY p.shop_id   ORDER BY COUNT(*) DESC   LIMIT 1 );"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "295": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 295,
    "query": "What are the first name and last name of the professionals who have done treatment with cost below average?",
    "turn_history": {
      "actions": [
        "SELECT first_name, last_name FROM professionals WHERE professional_id IN (   SELECT professional_id   FROM treatments   WHERE cost < (SELECT AVG(cost) FROM treatments) );"
      ],
      "observations": [
        "Error executing query: Unknown column 'cost' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "296": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 296,
    "query": "Find the id and name of the museum that has the most staff members?",
    "turn_history": {
      "actions": [
        "SELECT id, name FROM museum ORDER BY staff_members DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "297": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 297,
    "query": "How many singers do we have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM singers;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "298": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 298,
    "query": "Show countries where a singer above age 40 and a singer below 30 are from.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT c.country_name FROM singers s1 JOIN singers s2 ON s1.country_id = s2.country_id JOIN countries c ON s1.country_id = c.country_id WHERE s1.age > 40 AND s2.age < 30;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "299": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 299,
    "query": "What are airlines that have flights arriving at airport 'AHD'?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT airline_name FROM flights WHERE arrival_airport = 'AHD';"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "300": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 300,
    "query": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
    "turn_history": {
      "actions": [
        "SELECT first_name, middle_name, last_name FROM students WHERE program = 'Bachelors';"
      ],
      "observations": [
        "Error executing query: Unknown column 'program' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "301": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 301,
    "query": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
    "turn_history": {
      "actions": [
        "SELECT abbreviation, country FROM airlines WHERE flights = (SELECT MIN(flights) FROM airlines)"
      ],
      "observations": [
        "Error executing query: Unknown column 'flights' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "302": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 302,
    "query": "How many different results are there for the battles?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT result) FROM battles;"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.battles' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "303": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 303,
    "query": "Whose permanent address is different from his or her current address? List his or her first name.",
    "turn_history": {
      "actions": [
        "SELECT first_name FROM table_name WHERE permanent_address <> current_address;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "304": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 304,
    "query": "What is the number of continents?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM continents;"
      ],
      "observations": [
        "[(5,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "305": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 305,
    "query": "Which address holds the most number of students currently? List the address id and all lines.",
    "turn_history": {
      "actions": [
        "SELECT address_id, address_line1, address_line2, city, state, zip FROM address WHERE address_id IN (     SELECT address_id     FROM student_address     GROUP BY address_id     ORDER BY COUNT(*) DESC     LIMIT 1 );"
      ],
      "observations": [
        "Error executing query: This version of MySQL doesn't yet support 'LIMIT & IN/ALL/ANY/SOME subquery'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "306": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 306,
    "query": "What are the full names of all left handed players, in order of birth date?",
    "turn_history": {
      "actions": [
        "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players WHERE handedness = 'left' ORDER BY birth_date;"
      ],
      "observations": [
        "Error executing query: Unknown column 'handedness' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "307": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 307,
    "query": "Show ids of all students who do not have any friends.",
    "turn_history": {
      "actions": [
        "SELECT id FROM students WHERE id NOT IN (SELECT student_id FROM friendships);"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "308": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 308,
    "query": "Show the ids of high schoolers who have friends and are also liked by someone else.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT h1.id FROM Highschooler h1, Friend f1, Likes l1 WHERE h1.id = f1.id1 AND h1.id = l1.id1 AND f1.id2 = l1.id2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'f1.id1' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "309": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 309,
    "query": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT record_company FROM orchestras WHERE year_founded < 2003 OR year_founded > 2003;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "310": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 310,
    "query": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
    "turn_history": {
      "actions": [
        "SELECT series_name FROM series  INNER JOIN episodes ON series.series_id = episodes.series_id  WHERE episode_name = 'A Love of a Lifetime';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.series' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "311": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 311,
    "query": "List the name of singers that do not have any song.",
    "turn_history": {
      "actions": [
        "SELECT name FROM singers WHERE id NOT IN (SELECT singer_id FROM songs);"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "312": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 312,
    "query": "List document IDs, document names, and document descriptions for all documents.",
    "turn_history": {
      "actions": [
        "SELECT document_id, document_name, document_description FROM documents;"
      ],
      "observations": [
        "[(1, 'Introduction of OS', 'n'), (3, 'Summer Show', 'u'), (76, 'Robbin CV', 'y'), (80, 'Welcome to NY', 'h'), (82, 'Data base', 'w'), (2394, 'Customer reviews', 'y'), (3830, 'Do not panic', 'k'), (33930, 'How Google people work', 'z'), (50123, 'Learning French', 'r'), (651512, 'How to write a CV', 'f'), (801801, 'How to read a book', 'w'), (3540024, 'Palm reading', 'y'), (16514113, 'A history of Arts', 'h'), (385906526, 'About Korea', 'b')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "313": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 313,
    "query": "What are the different models for the cards produced after 1980?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT model FROM cards WHERE year > 1980;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cards' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "314": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 314,
    "query": "What is the content of TV Channel with serial name \"Sky Radio\"?",
    "turn_history": {
      "actions": [
        "SELECT content FROM TV_Channel WHERE serial_name = 'Sky Radio';"
      ],
      "observations": [
        "Error executing query: Unknown column 'serial_name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "315": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 315,
    "query": "What are each owner's first name and their dogs's name?",
    "turn_history": {
      "actions": [
        "SELECT owner.first_name, dog.name FROM owner JOIN dog ON owner.id = dog.owner_id;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.owner' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "316": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 316,
    "query": "What is the id, line 1, and line 2 of the address with the most students?",
    "turn_history": {
      "actions": [
        "SELECT id, line1, line2 FROM address WHERE id IN (SELECT address_id FROM student GROUP BY address_id ORDER BY COUNT(*) DESC LIMIT 1);"
      ],
      "observations": [
        "Error executing query: This version of MySQL doesn't yet support 'LIMIT & IN/ALL/ANY/SOME subquery'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "317": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 317,
    "query": "How many friends does the high school student Kyle have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM friends WHERE student_name = 'Kyle' AND school_level = 'High School';"
      ],
      "observations": [
        "Error executing query: Table 'network_1.friends' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "318": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 318,
    "query": "What is the country with the most number of TV Channels and how many does it have?",
    "turn_history": {
      "actions": [
        "SELECT country, COUNT(*) AS num_channels FROM tv_channels GROUP BY country ORDER BY num_channels DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "319": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 319,
    "query": "Show me the cost of the most recently performed treatment.",
    "turn_history": {
      "actions": [
        "SELECT cost FROM treatments ORDER BY date_performed DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'cost' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "320": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 320,
    "query": "Return the birth date of the poker player with the lowest earnings.",
    "turn_history": {
      "actions": [
        "SELECT birth_date FROM poker_players ORDER BY earnings ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'birth_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "321": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 321,
    "query": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
    "turn_history": {
      "actions": [
        "SELECT id, text FROM paragraphs WHERE document_name = 'Welcome to NY';"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "322": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 322,
    "query": "Find the number of flights landing in the city of Aberdeen or Abilene.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE destination IN ('Aberdeen', 'Abilene');"
      ],
      "observations": [
        "Error executing query: Unknown column 'destination' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "323": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 323,
    "query": "Show the stadium names without any concert.",
    "turn_history": {
      "actions": [
        "SELECT name FROM stadiums WHERE id NOT IN (SELECT stadium_id FROM concerts);"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "324": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 324,
    "query": "What is the first name and gender of the all the students who have more than one pet?",
    "turn_history": {
      "actions": [
        "SELECT first_name, gender FROM students WHERE student_id IN (SELECT student_id FROM pets GROUP BY student_id HAVING COUNT(*) > 1);"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "325": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 325,
    "query": "How many visitors below age 30 are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM visitors WHERE age < 30;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visitors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "326": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 326,
    "query": "Which continent speaks the most languages?",
    "turn_history": {
      "actions": [
        "SELECT continent, COUNT(language) AS num_languages FROM countries GROUP BY continent ORDER BY num_languages DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "327": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 327,
    "query": "What is the charge amount of the most expensive charge type?",
    "turn_history": {
      "actions": [
        "SELECT MAX(charge_amount) FROM charge_type;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.charge_type' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "328": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 328,
    "query": "Return the nationalities for which there are two or more people.",
    "turn_history": {
      "actions": [
        "SELECT nationality FROM table_name GROUP BY nationality HAVING COUNT(*) >= 2;"
      ],
      "observations": [
        "Error executing query: Table 'poker_player.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "329": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 329,
    "query": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
    "turn_history": {
      "actions": [
        "SELECT Episode FROM TVSeries WHERE Channel = 'Sky Radio'"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tvseries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "330": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 330,
    "query": "What is the maximum accelerate for different number of cylinders?",
    "turn_history": {
      "actions": [
        "SELECT MAX(accelerate) FROM table_name GROUP BY cylinders;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "331": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 331,
    "query": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
    "turn_history": {
      "actions": [
        "SELECT p.id, p.role, p.first_name FROM professionals p INNER JOIN treatments t ON p.id = t.professional_id GROUP BY p.id, p.role, p.first_name HAVING COUNT(t.id) >= 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'p.id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "332": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 332,
    "query": "What are the names of all European countries with at least 3 manufacturers?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT c.country_name FROM countries c JOIN manufacturers m ON c.country_id = m.country_id WHERE c.continent = 'Europe' GROUP BY c.country_name HAVING COUNT(DISTINCT m.manufacturer_name) >= 3;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.manufacturers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "333": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 333,
    "query": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?",
    "turn_history": {
      "actions": [
        "SELECT MAX(mpg) FROM cars WHERE cylinders = 8 OR year < 1980;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "334": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 334,
    "query": "Return the money rank of the poker player with the greatest height.",
    "turn_history": {
      "actions": [
        "SELECT money_rank FROM poker_players ORDER BY height DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'money_rank' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "335": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 335,
    "query": "Return the owner id, first name and last name of the owner who has the most dogs.",
    "turn_history": {
      "actions": [
        "SELECT owner_id, first_name, last_name FROM owners WHERE owner_id = (   SELECT owner_id   FROM dogs   GROUP BY owner_id   ORDER BY COUNT(*) DESC   LIMIT 1 );"
      ],
      "observations": [
        "[(14, 'Rachelle', 'Funk')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "336": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 336,
    "query": "What are the names of all courses that have some students enrolled?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT course_name FROM courses INNER JOIN enrollments ON courses.course_id = enrollments.course_id;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "337": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 337,
    "query": "What are names of countries with the top 3 largest population?",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries ORDER BY population DESC LIMIT 3;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "338": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 338,
    "query": "Find the minimum grade of students who have no friends.",
    "turn_history": {
      "actions": [
        "SELECT MIN(grade) FROM students WHERE id NOT IN (SELECT DISTINCT student_id FROM friendships);"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "339": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 339,
    "query": "How many ships ended up being 'Captured'?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM Ships WHERE result = 'Captured';"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.ships' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "340": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 340,
    "query": "What is the code of airport that has the highest number of flights?",
    "turn_history": {
      "actions": [
        "SELECT airport_code FROM flights GROUP BY airport_code ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'airport_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "341": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 341,
    "query": "How many continents speak Chinese?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT continent) FROM countries WHERE language = 'Chinese';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "342": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 342,
    "query": "Return the template type code of the template that is used by a document named Data base.",
    "turn_history": {
      "actions": [
        "SELECT template_type_code FROM templates WHERE document_name = 'Data base';"
      ],
      "observations": [
        "Error executing query: Unknown column 'document_name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "343": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 343,
    "query": "Give average earnings of poker players who are taller than 200.",
    "turn_history": {
      "actions": [
        "SELECT AVG(earnings) FROM poker_players WHERE height > 200;"
      ],
      "observations": [
        "Error executing query: Unknown column 'earnings' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "344": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 344,
    "query": "How many players are there for each hand type?",
    "turn_history": {
      "actions": [
        "SELECT hand_type, COUNT(player_id) AS num_players FROM players GROUP BY hand_type;"
      ],
      "observations": [
        "Error executing query: Unknown column 'hand_type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "345": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 345,
    "query": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM orchestras WHERE record_format IN ('CD', 'DVD');"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "346": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 346,
    "query": "Which language is the most popular in Aruba?",
    "turn_history": {
      "actions": [
        "SELECT language, COUNT(*) AS total FROM population WHERE country = 'Aruba' GROUP BY language ORDER BY total DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.population' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "347": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 347,
    "query": "Find the id and weight of all pets whose age is older than 1.",
    "turn_history": {
      "actions": [
        "SELECT id, weight FROM pets WHERE age > 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "348": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 348,
    "query": "Give the names of countries with English and French as official languages.",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries WHERE official_languages LIKE '%English%' AND official_languages LIKE '%French%';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "349": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 349,
    "query": "Give the code of the airport with the least flights.",
    "turn_history": {
      "actions": [
        "SELECT code FROM airports ORDER BY flights ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "350": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 350,
    "query": "Which countries have greater area than that of any country in Europe?",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries WHERE area > (SELECT MAX(area) FROM countries WHERE continent = 'Europe')"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "351": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 351,
    "query": "What are the codes of template types that are not used for any document?",
    "turn_history": {
      "actions": [
        "SELECT code FROM template_types WHERE code NOT IN (SELECT DISTINCT template_type_code FROM documents);"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.template_types' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "352": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 352,
    "query": "List the date of each treatment, together with the first name of the professional who operated it.",
    "turn_history": {
      "actions": [
        "SELECT treatment_date, professional.first_name FROM treatment JOIN professional ON treatment.professional_id = professional.id;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.treatment' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "353": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 353,
    "query": "What is last date created of votes from the state 'CA'?",
    "turn_history": {
      "actions": [
        "SELECT MAX(created_date) FROM votes WHERE state = 'CA';"
      ],
      "observations": [
        "Error executing query: Unknown column 'created_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "354": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 354,
    "query": "What are the email, cell phone and home phone of each professional?",
    "turn_history": {
      "actions": [
        "SELECT email, cell_phone, home_phone FROM professionals;"
      ],
      "observations": [
        "Error executing query: Unknown column 'email' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "355": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 355,
    "query": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
    "turn_history": {
      "actions": [
        "SELECT package_option  FROM tv_channel  WHERE NOT EXISTS      (SELECT *       FROM cartoon       WHERE cartoon.director = 'Ben Jones'       AND cartoon.channel_id = tv_channel.channel_id)"
      ],
      "observations": [
        "Error executing query: Unknown column 'cartoon.director' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "356": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 356,
    "query": "Find the arriving date and the departing date of the dogs that received a treatment.",
    "turn_history": {
      "actions": [
        "SELECT arrival_date, departure_date FROM dogs_treatments;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.dogs_treatments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "357": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 357,
    "query": "What are the names and ids of every course with less than 2 sections?",
    "turn_history": {
      "actions": [
        "SELECT id, name FROM courses WHERE (SELECT COUNT(*) FROM sections WHERE sections.course_id = courses.id) < 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "358": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 358,
    "query": "Count the number of flights into ATO.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE destination = 'ATO';"
      ],
      "observations": [
        "Error executing query: Unknown column 'destination' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "359": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 359,
    "query": "What are the names of players who won in both 2013 and 2016?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT p1.player_name FROM players p1 INNER JOIN results r1 ON p1.player_id = r1.player_id INNER JOIN tournaments t1 ON r1.tournament_id = t1.tournament_id INNER JOIN results r2 ON p1.player_id = r2.player_id INNER JOIN tournaments t2 ON r2.tournament_id = t2.tournament_id WHERE t1.year = 2013 AND t2.year = 2016;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.results' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "360": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 360,
    "query": "Return the names and template ids for documents that contain the letter w in their description.",
    "turn_history": {
      "actions": [
        "SELECT name, template_id FROM documents WHERE description LIKE '%w%';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "361": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 361,
    "query": "What are airport names at City 'Aberdeen'?",
    "turn_history": {
      "actions": [
        "SELECT name FROM airports WHERE city = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "362": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 362,
    "query": "What are the different template type codes, and how many templates correspond to each?",
    "turn_history": {
      "actions": [
        "SELECT template_type_code, COUNT(*) FROM templates GROUP BY template_type_code;"
      ],
      "observations": [
        "[('AD', 3), ('BK', 6), ('CV', 2), ('PP', 5), ('PPT', 3)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "363": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 363,
    "query": "Show all countries and the number of singers in each country.",
    "turn_history": {
      "actions": [
        "SELECT Country, COUNT(*) AS 'Number of Singers' FROM Singers GROUP BY Country;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "364": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 364,
    "query": "Find the last name of the student who has a cat that is age 3.",
    "turn_history": {
      "actions": [
        "SELECT last_name FROM students WHERE pet_type = 'cat' AND pet_age = 3 ORDER BY id DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "365": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 365,
    "query": "What are the ids and names of the battles that led to more than 10 people killed in total.",
    "turn_history": {
      "actions": [
        "SELECT id, name FROM battles WHERE total_killed > 10;"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.battles' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "366": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 366,
    "query": "Count the number of documents.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM documents;"
      ],
      "observations": [
        "[(14,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "367": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 367,
    "query": "What is the name and id of the department with the most number of degrees ?",
    "turn_history": {
      "actions": [
        "SELECT department_id, department_name  FROM departments  WHERE department_id = (SELECT department_id                         FROM degrees                         GROUP BY department_id                         ORDER BY COUNT(*) DESC                         LIMIT 1);"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.degrees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "368": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 368,
    "query": "Which region is the city Kabul located in?",
    "turn_history": {
      "actions": [
        "SELECT region FROM cities WHERE name = 'Kabul';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.cities' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "369": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 369,
    "query": "What is the zip code for Port Chelsea?",
    "turn_history": {
      "actions": [
        "SELECT zip_code FROM locations WHERE city = 'Port Chelsea';"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.locations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "370": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 370,
    "query": "Give me the description of the treatment type whose total cost is the lowest.",
    "turn_history": {
      "actions": [
        "SELECT description FROM treatment_type ORDER BY total_cost ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.treatment_type' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "371": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 371,
    "query": "Which year had the most matches?",
    "turn_history": {
      "actions": [
        "SELECT year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1;"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "372": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 372,
    "query": "Give the ids of documents that have between one and two paragraphs.",
    "turn_history": {
      "actions": [
        "SELECT id FROM documents WHERE num_paragraphs BETWEEN 1 AND 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "373": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 373,
    "query": "What are the ids of high school students who do not have friends?",
    "turn_history": {
      "actions": [
        "SELECT id FROM students WHERE grade = 'high school' AND id NOT IN (SELECT student_id FROM friendships);"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "374": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 374,
    "query": "Find the first names that are used for professionals or owners but are not used as dog names.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT first_name FROM dogs WHERE first_name NOT IN (   SELECT first_name   FROM dogs   WHERE breed = 'dog' ) AND (role = 'professional' OR role = 'owner')"
      ],
      "observations": [
        "Error executing query: Unknown column 'first_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "375": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 375,
    "query": "Which unique cities are in Asian countries where Chinese is the official language ?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT city FROM table_name WHERE country_continent = 'Asia' AND official_language = 'Chinese';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "376": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 376,
    "query": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
    "turn_history": {
      "actions": [
        "SELECT first_name, last_name, email FROM owners WHERE state LIKE '%North%';"
      ],
      "observations": [
        "Error executing query: Unknown column 'email' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "377": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 377,
    "query": "Which grade has the most high schoolers?",
    "turn_history": {
      "actions": [
        "SELECT grade, COUNT(*) AS num_high_schoolers FROM table_name WHERE school_type = 'high school' GROUP BY grade ORDER BY num_high_schoolers DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "378": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 378,
    "query": "What are the country codes of countries where people use languages other than English?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT country_code FROM language WHERE language <> 'English';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.language' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "379": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 379,
    "query": "Return the template type description of the template type with the code AD.",
    "turn_history": {
      "actions": [
        "SELECT description FROM template_type WHERE code = 'AD';"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.template_type' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "380": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 380,
    "query": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
    "turn_history": {
      "actions": [
        "SELECT name FROM visitors WHERE membership_level > 4 ORDER BY membership_level DESC;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visitors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "381": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 381,
    "query": "What are the nationalities that are shared by at least two people?",
    "turn_history": {
      "actions": [
        "SELECT nationality FROM people GROUP BY nationality HAVING COUNT(*) > 1;"
      ],
      "observations": [
        "[('Russia',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "382": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 382,
    "query": "List the names of all winners who played in both 2013 and 2016.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT winner_name  FROM matches  WHERE year = 2013 AND winner_name IN  (SELECT winner_name FROM matches WHERE year = 2016)"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "383": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 383,
    "query": "What is the number of employees from each city?",
    "turn_history": {
      "actions": [
        "SELECT city, COUNT(*) as num_employees FROM employees GROUP BY city;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "384": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 384,
    "query": "Give the name of the country in Asia with the lowest life expectancy.",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries WHERE continent = 'Asia' ORDER BY life_expectancy ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "385": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 385,
    "query": "Find the program which most number of students are enrolled in. List both the id and the summary.",
    "turn_history": {
      "actions": [
        "SELECT id, summary FROM programs WHERE id = (     SELECT program_id     FROM enrollments     GROUP BY program_id     ORDER BY COUNT(*) DESC     LIMIT 1 );"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.programs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "386": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 386,
    "query": "For each singer name, what is the total sales for their songs?",
    "turn_history": {
      "actions": [
        "SELECT singers.name, SUM(songs.sales) AS total_sales FROM singers JOIN songs ON singers.id = songs.singer_id GROUP BY singers.name;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "387": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 387,
    "query": "find the code of the country where has the greatest number of players.",
    "turn_history": {
      "actions": [
        "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "388": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 388,
    "query": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
    "turn_history": {
      "actions": [
        "SELECT government_form, SUM(population) AS total_population FROM countries WHERE government_form IN (   SELECT government_form   FROM countries   GROUP BY government_form   HAVING AVG(life_expectancy) > 72 ) GROUP BY government_form;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "389": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 389,
    "query": "What are the age and hometown of teachers?",
    "turn_history": {
      "actions": [
        "SELECT age, hometown FROM teachers;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "390": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 390,
    "query": "Return the grade for the high schooler named Kyle.",
    "turn_history": {
      "actions": [
        "SELECT grade FROM high_schoolers WHERE name = 'Kyle';"
      ],
      "observations": [
        "Error executing query: Table 'network_1.high_schoolers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "391": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 391,
    "query": "How many car makers are there in each continents? List the continent name and the count.",
    "turn_history": {
      "actions": [
        "SELECT continent, COUNT(DISTINCT car_maker) AS count FROM car_makers GROUP BY continent;"
      ],
      "observations": [
        "Error executing query: Unknown column 'continent' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "392": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 392,
    "query": "What is the most common nationality of people?",
    "turn_history": {
      "actions": [
        "SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1;"
      ],
      "observations": [
        "[('Russia', 6)]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "393": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 393,
    "query": "List the airport code and name in the city of Anthony.",
    "turn_history": {
      "actions": [
        "SELECT airport_code, airport_name FROM airports WHERE city = 'Anthony';"
      ],
      "observations": [
        "Error executing query: Unknown column 'airport_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "394": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 394,
    "query": "Find the average rank of winners in all matches.",
    "turn_history": {
      "actions": [
        "SELECT AVG(rank) FROM matches WHERE winner IS NOT NULL;"
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') FROM matches WHERE winner IS NOT NULL' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "395": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 395,
    "query": "For a volvo model, how many cylinders does the version with least accelerate have?",
    "turn_history": {
      "actions": [
        "SELECT MIN(cylinders) FROM table_name WHERE model = 'volvo' AND accelerate = (SELECT MIN(accelerate) FROM table_name WHERE model = 'volvo');"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "396": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 396,
    "query": "Find the major and age of students who do not have a cat pet.",
    "turn_history": {
      "actions": [
        "SELECT major, age FROM students WHERE pet <> 'cat';"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "397": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 397,
    "query": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT year FROM cars WHERE weight < 4000 OR weight > 3000;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "398": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 398,
    "query": "Count the number of countries in Asia.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countries WHERE continent = 'Asia';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "399": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 399,
    "query": "For the cars with 4 cylinders, which model has the largest horsepower?",
    "turn_history": {
      "actions": [
        "SELECT model FROM cars WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "400": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 400,
    "query": "List the number of all matches who played in years of 2013 or 2016.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);"
      ],
      "observations": [
        "[(0,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "401": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 401,
    "query": "Find the first name and country code of the oldest player.",
    "turn_history": {
      "actions": [
        "SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "402": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 402,
    "query": "What are the names of the countries with no car makers?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT CountryName  FROM Countries  WHERE CountryCode NOT IN (SELECT DISTINCT CountryCode FROM CarMakers)"
      ],
      "observations": [
        "Error executing query: Table 'car_1.carmakers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "403": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 403,
    "query": "Return the name, location and district of all shops in descending order of number of products.",
    "turn_history": {
      "actions": [
        "SELECT name, location, district FROM shops ORDER BY (SELECT COUNT(*) FROM products WHERE products.shop_id = shops.id) DESC;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "404": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 404,
    "query": "Find the total number of matches.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM matches;"
      ],
      "observations": [
        "[(0,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "405": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 405,
    "query": "List the first name and birth date of all players from the country with code USA.",
    "turn_history": {
      "actions": [
        "SELECT first_name, birth_date FROM players WHERE country_code = 'USA';"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "406": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 406,
    "query": "Which year has most number of concerts?",
    "turn_history": {
      "actions": [
        "SELECT YEAR(date) AS year, COUNT(*) AS num_concerts FROM concerts GROUP BY YEAR(date) ORDER BY num_concerts DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "407": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 407,
    "query": "Return the grade that has the greatest number of high schoolers.",
    "turn_history": {
      "actions": [
        "SELECT grade FROM table_name WHERE school_level = 'high school' GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "408": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 408,
    "query": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
    "turn_history": {
      "actions": [
        "SELECT visitors.id, visitors.name, visitors.membership_level FROM visitors JOIN tickets ON visitors.id = tickets.visitor_id GROUP BY visitors.id ORDER BY SUM(tickets.price) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visitors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "409": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 409,
    "query": "What is the name of country that has the shortest life expectancy in Asia?",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries WHERE continent = 'Asia' ORDER BY life_expectancy ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "410": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 410,
    "query": "How many cartoons were written by \"Joseph Kuhr\"?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cartoons WHERE author = 'Joseph Kuhr';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "411": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 411,
    "query": "Count the number of United Airlines flights that arrive in Aberdeen.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND destination = 'Aberdeen' AND status = 'Arrived';"
      ],
      "observations": [
        "Error executing query: Unknown column 'destination' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "412": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 412,
    "query": "Find the manager name and district of the shop whose number of products is the largest.",
    "turn_history": {
      "actions": [
        "SELECT s.manager_name, s.district FROM shops s WHERE s.num_products = (SELECT MAX(num_products) FROM shops)"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "413": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 413,
    "query": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?",
    "turn_history": {
      "actions": [
        "SELECT dog_name  FROM dogs  WHERE owner_id IN (SELECT owner_id FROM treatments GROUP BY owner_id HAVING SUM(cost) <= 1000);"
      ],
      "observations": [
        "Error executing query: Unknown column 'dog_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "414": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 414,
    "query": "Count the number of dogs of an age below the average.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs);"
      ],
      "observations": [
        "[(9,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "415": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 415,
    "query": "Return the document id, template id, and description for the document with the name Robbin CV.",
    "turn_history": {
      "actions": [
        "SELECT id, template_id, description FROM documents WHERE name = 'Robbin CV';"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "416": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 416,
    "query": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
    "turn_history": {
      "actions": [
        "SELECT name, membership_level FROM visitors WHERE membership_level > 4 ORDER BY age ASC;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visitors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "417": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 417,
    "query": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
    "turn_history": {
      "actions": [
        "SELECT students.first_name, students.middle_name, students.last_name, enrollments.id  FROM students  JOIN enrollments ON students.id = enrollments.student_id  WHERE enrollments.semester = 'one'  GROUP BY enrollments.student_id  HAVING COUNT(DISTINCT enrollments.degree_program) = 2;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "418": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 418,
    "query": "What is the code of the country with the most players?",
    "turn_history": {
      "actions": [
        "SELECT code FROM countries ORDER BY players DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "419": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 419,
    "query": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
    "turn_history": {
      "actions": [
        "SELECT name, location FROM stadiums WHERE id IN (   SELECT stadium_id   FROM concerts   WHERE YEAR(date) = 2014 ) AND id IN (   SELECT stadium_id   FROM concerts   WHERE YEAR(date) = 2015 );"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "420": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 420,
    "query": "What grade is Kyle in?",
    "turn_history": {
      "actions": [
        "SELECT grade FROM students WHERE name = 'Kyle';"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "421": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 421,
    "query": "What are the names of high schoolers who have likes, and how many likes does each have?",
    "turn_history": {
      "actions": [
        "SELECT h.name, COUNT(l.id) AS num_likes FROM highschooler h, likes l WHERE h.id = l.highschooler_id GROUP BY h.id HAVING COUNT(l.id) > 0;"
      ],
      "observations": [
        "Error executing query: Unknown column 'l.id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "422": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 422,
    "query": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
    "turn_history": {
      "actions": [
        "SELECT teachers.name, courses.course_name FROM teachers INNER JOIN courses ON teachers.teacher_id = courses.teacher_id ORDER BY teachers.name ASC;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "423": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 423,
    "query": "List the names of conductors in ascending order of age.",
    "turn_history": {
      "actions": [
        "SELECT name FROM conductors ORDER BY age ASC;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "424": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 424,
    "query": "Show the property type descriptions of properties belonging to that code.",
    "turn_history": {
      "actions": [
        "SELECT description FROM property_type WHERE code = 'property_code';"
      ],
      "observations": [
        "Error executing query: Table 'real_estate_properties.property_type' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "425": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 425,
    "query": "When is the first transcript released? List the date and details.",
    "turn_history": {
      "actions": [
        "SELECT date, details FROM transcripts ORDER BY date ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "426": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 426,
    "query": "What is the code of airport that has fewest number of flights?",
    "turn_history": {
      "actions": [
        "SELECT airport_code FROM flights GROUP BY airport_code ORDER BY COUNT(*) ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'airport_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "427": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 427,
    "query": "What are the names of the teachers who are aged either 32 or 33?",
    "turn_history": {
      "actions": [
        "SELECT name FROM teachers WHERE age IN (32, 33);"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "428": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 428,
    "query": "What are the full names of all players, sorted by birth date?",
    "turn_history": {
      "actions": [
        "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players ORDER BY birth_date;"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "429": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 429,
    "query": "What are flight numbers of flights departing from Airport \"APG\"?",
    "turn_history": {
      "actions": [
        "SELECT flight_number FROM flights WHERE departure_airport = 'APG';"
      ],
      "observations": [
        "Error executing query: Unknown column 'flight_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "430": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 430,
    "query": "What are the population and life expectancies in Brazil?",
    "turn_history": {
      "actions": [
        "SELECT population, life_expectancy FROM Brazil;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.brazil' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "431": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 431,
    "query": "Count the number of likes for each student id.",
    "turn_history": {
      "actions": [
        "SELECT student_id, COUNT(like_id) AS num_likes FROM likes GROUP BY student_id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'like_id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "432": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 432,
    "query": "find the minimum and maximum number of products of all stores.",
    "turn_history": {
      "actions": [
        "SELECT MIN(num_products), MAX(num_products) FROM stores;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.stores' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "433": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 433,
    "query": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
    "turn_history": {
      "actions": [
        "SELECT document_id, COUNT(paragraph_id) AS num_paragraphs FROM paragraphs GROUP BY document_id ORDER BY document_id;"
      ],
      "observations": [
        "[(3, 1), (80, 2), (2394, 3), (3830, 1), (33930, 1), (50123, 1), (651512, 2), (3540024, 1), (16514113, 2), (385906526, 1)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "434": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 434,
    "query": "List the names of orchestras that have no performance.",
    "turn_history": {
      "actions": [
        "SELECT name FROM orchestras WHERE id NOT IN (SELECT orchestra_id FROM performances);"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "435": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 435,
    "query": "Give the average life expectancy for countries in Africa which are republics?",
    "turn_history": {
      "actions": [
        "SELECT AVG(lifeExpectancy) FROM countries WHERE continent = 'Africa' AND governmentForm = 'Republic';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "436": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 436,
    "query": "List the first and last name of all players in the order of birth date.",
    "turn_history": {
      "actions": [
        "SELECT first_name, last_name FROM players ORDER BY birth_date;"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "437": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 437,
    "query": "How many degrees does the engineering department have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM engineering;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.engineering' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "438": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 438,
    "query": "List all the student details in reversed lexicographical order.",
    "turn_history": {
      "actions": [
        "SELECT * FROM student ORDER BY name DESC;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.student' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "439": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 439,
    "query": "What is the number of distinct languages used around the world?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT language) FROM world;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.world' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "440": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 440,
    "query": "Find the states where both owners and professionals live.",
    "turn_history": {
      "actions": [
        "SELECT state FROM owners WHERE state IN (SELECT state FROM professionals);"
      ],
      "observations": [
        "[('Wisconsin',), ('Indiana',), ('Mississippi',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "441": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 441,
    "query": "What is the average age for all students who do not own any pets ?",
    "turn_history": {
      "actions": [
        "SELECT AVG(age) FROM students WHERE pet_owner = 'No';"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "442": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 442,
    "query": "What are the names and descriptions for all the sections?",
    "turn_history": {
      "actions": [
        "SELECT name, description FROM sections;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "443": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 443,
    "query": "Which breed do the most dogs have? Give me the breed name.",
    "turn_history": {
      "actions": [
        "SELECT breed_name FROM dogs GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'breed_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "444": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 444,
    "query": "Find the number of left handed winners who participated in the WTA Championships.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM players WHERE handedness = 'left' AND tournament = 'WTA Championships' AND winner = 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'handedness' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "445": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 445,
    "query": "List the names of the dogs of the rarest breed and the treatment dates of them.",
    "turn_history": {
      "actions": [
        "SELECT dogs.name, treatments.treatment_date FROM dogs JOIN breeds ON dogs.breed_id = breeds.id JOIN treatments ON dogs.id = treatments.dog_id WHERE breeds.rarity = (SELECT MIN(rarity) FROM breeds)"
      ],
      "observations": [
        "Error executing query: Unknown column 'treatments.treatment_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "446": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 446,
    "query": "How long is the people\u2019s average life expectancy in Central Africa?",
    "turn_history": {
      "actions": [
        "SELECT AVG(life_expectancy) FROM table_name WHERE region = 'Central Africa';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "447": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 447,
    "query": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .",
    "turn_history": {
      "actions": [
        "SELECT name FROM dogs WHERE treatment_cost <= 1000;"
      ],
      "observations": [
        "Error executing query: Unknown column 'treatment_cost' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "448": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 448,
    "query": "What is Kyle's id?",
    "turn_history": {
      "actions": [
        "SELECT id FROM table_name WHERE name = 'Kyle';"
      ],
      "observations": [
        "Error executing query: Table 'network_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "449": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 449,
    "query": "What is the total surface area of the continents Asia and Europe?",
    "turn_history": {
      "actions": [
        "SELECT SUM(surface_area) FROM continents WHERE name IN ('Asia', 'Europe');"
      ],
      "observations": [
        "Error executing query: Table 'world_1.continents' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "450": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 450,
    "query": "Give the airport code and airport name corresonding to the city Anthony.",
    "turn_history": {
      "actions": [
        "SELECT airport_code, airport_name FROM airports WHERE city = 'Anthony';"
      ],
      "observations": [
        "Error executing query: Unknown column 'airport_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "451": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 451,
    "query": "Count the number of different nationalities.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT nationality) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'poker_player.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "452": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 452,
    "query": "Give the country codes for countries in which people speak langauges that are not English.",
    "turn_history": {
      "actions": [
        "SELECT country_code FROM language WHERE language <> 'English';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.language' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "453": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 453,
    "query": "List the email, cell phone and home phone of all the professionals.",
    "turn_history": {
      "actions": [
        "SELECT email, cell_phone, home_phone FROM professionals;"
      ],
      "observations": [
        "Error executing query: Unknown column 'email' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "454": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 454,
    "query": "Return the name of the airport with code 'AKO'.",
    "turn_history": {
      "actions": [
        "SELECT name FROM airports WHERE code = 'AKO';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "455": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 455,
    "query": "Which employee received the biggest bonus? Give me the employee name.",
    "turn_history": {
      "actions": [
        "SELECT employee_name FROM employee_bonus ORDER BY bonus_amount DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employee_bonus' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "456": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 456,
    "query": "How many United Airlines flights go to City 'Aberdeen'?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND destination_city = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'destination_city' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "457": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 457,
    "query": "Show titles of songs and names of singers.",
    "turn_history": {
      "actions": [
        "SELECT title, singer_name FROM songs;"
      ],
      "observations": [
        "Error executing query: Table 'singer.songs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "458": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 458,
    "query": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
    "turn_history": {
      "actions": [
        "SELECT type, MAX(weight) FROM pets GROUP BY type;"
      ],
      "observations": [
        "Error executing query: Unknown column 'type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "459": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 459,
    "query": "Show all paragraph texts for the document \"Customer reviews\".",
    "turn_history": {
      "actions": [
        "SELECT paragraph_text FROM document WHERE document_name = 'Customer reviews';"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.document' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "460": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 460,
    "query": "What are the template ids of any templates used in more than a single document?",
    "turn_history": {
      "actions": [
        "SELECT template_id FROM document GROUP BY template_id HAVING COUNT(DISTINCT document_id) > 1;"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.document' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "461": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 461,
    "query": "List the vote ids, phone numbers and states of all votes.",
    "turn_history": {
      "actions": [
        "SELECT vote_id, phone_number, state FROM votes;"
      ],
      "observations": [
        "[(1, 2147483647, 'NY'), (2, 2147483647, 'NY'), (3, 2147483647, 'CA'), (5, 2147483647, 'NJ')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "462": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 462,
    "query": "What are the maximum and minimum share of performances whose type is not \"Live final\".",
    "turn_history": {
      "actions": [
        "SELECT MAX(share), MIN(share) FROM performances WHERE type != 'Live final';"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.performances' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "463": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 463,
    "query": "Find the number of matches happened in each year.",
    "turn_history": {
      "actions": [
        "SELECT YEAR(date_column), COUNT(*) FROM table_name GROUP BY YEAR(date_column);"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "464": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 464,
    "query": "What is the semester which most student registered in? Show both the name and the id.",
    "turn_history": {
      "actions": [
        "SELECT semester, COUNT(student_id) AS num_students FROM registrations GROUP BY semester ORDER BY num_students DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.registrations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "465": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 465,
    "query": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
    "turn_history": {
      "actions": [
        "SELECT owner_id, zip_code FROM dogs GROUP BY owner_id ORDER BY SUM(payment_amount) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'zip_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "466": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 466,
    "query": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT b.id, b.name FROM battles b INNER JOIN outcomes o ON b.name = o.battle WHERE o.ship LIKE '%Brig%' AND b.id NOT IN (     SELECT o2.battle     FROM outcomes o2     WHERE o2.result = 'sunk'     AND o2.ship LIKE '%Brig%' )"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.battles' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "467": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 467,
    "query": "What is the name of each teacher and what course they teach?",
    "turn_history": {
      "actions": [
        "SELECT teacher.name, course.course_name FROM teacher INNER JOIN course ON teacher.teacher_id = course.teacher_id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'course.course_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "468": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 468,
    "query": "What are the birth year and citizenship of singers?",
    "turn_history": {
      "actions": [
        "SELECT birth_year, citizenship FROM singers;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "469": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 469,
    "query": "Which department offers the most number of degrees? List department name and id.",
    "turn_history": {
      "actions": [
        "SELECT department.id, department.name FROM department INNER JOIN degree ON department.id = degree.department_id GROUP BY department.id, department.name ORDER BY COUNT(degree.id) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.department' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "470": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 470,
    "query": "What is the feature type name of feature AirCon?",
    "turn_history": {
      "actions": [
        "SELECT feature_type_name FROM feature WHERE feature_name = 'AirCon';"
      ],
      "observations": [
        "Error executing query: Table 'real_estate_properties.feature' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "471": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 471,
    "query": "Find the semester when both Master students and Bachelor students got enrolled in.",
    "turn_history": {
      "actions": [
        "SELECT semester FROM enrollment WHERE program = 'Master' AND semester IN (     SELECT semester     FROM enrollment     WHERE program = 'Bachelor' )"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollment' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "472": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 472,
    "query": "What are the students' first names who have both cats and dogs as pets?",
    "turn_history": {
      "actions": [
        "SELECT first_name FROM students WHERE pet = 'cat' AND first_name IN (SELECT first_name FROM students WHERE pet = 'dog')"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "473": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 473,
    "query": "Find the number of distinct type of pets.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT type) FROM pets;"
      ],
      "observations": [
        "Error executing query: Unknown column 'type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "474": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 474,
    "query": "What are the names and ids of all countries with at least one car maker?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT countries.id, countries.name FROM countries INNER JOIN car_makers ON countries.id = car_makers.country_id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'countries.id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "475": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 475,
    "query": "What is the total population and maximum GNP in Asia?",
    "turn_history": {
      "actions": [
        "SELECT SUM(population), MAX(GNP) FROM Country WHERE Continent = 'Asia';"
      ],
      "observations": [
        "[(Decimal('3705025700'), 3787042.0)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "476": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 476,
    "query": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
    "turn_history": {
      "actions": [
        "SELECT area_code FROM votes WHERE contestant_name = 'Tabatha Gehling' AND area_code IN (SELECT area_code FROM votes WHERE contestant_name = 'Kelly Clauss');"
      ],
      "observations": [
        "Error executing query: Unknown column 'area_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "477": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 477,
    "query": "What are the African countries that have a  population less than any country in Asia?",
    "turn_history": {
      "actions": [
        "SELECT * FROM countries WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM countries WHERE continent = 'Asia')"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "478": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 478,
    "query": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
    "turn_history": {
      "actions": [
        "SELECT ConductorName, OrchestraName FROM Conductors INNER JOIN Conducted_Orchestras ON Conductors.ConductorID = Conducted_Orchestras.ConductorID INNER JOIN Orchestras ON Conducted_Orchestras.OrchestraID = Orchestras.OrchestraID;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "479": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 479,
    "query": "What is the id of the pet owned by the student whose last name is 'Smith'?",
    "turn_history": {
      "actions": [
        "SELECT pet_id FROM student_pet WHERE student_id IN (SELECT student_id FROM student WHERE last_name = 'Smith');"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.student_pet' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "480": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 480,
    "query": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
    "turn_history": {
      "actions": [
        "SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1;"
      ],
      "observations": [
        "[(14, 'Funk')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "481": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 481,
    "query": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
    "turn_history": {
      "actions": [
        "SELECT name  FROM museums  WHERE year_opened > 2010  AND staff_count > (SELECT MIN(staff_count) FROM museums);"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.museums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "482": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 482,
    "query": "Return the country codes for countries that do not speak English.",
    "turn_history": {
      "actions": [
        "SELECT code FROM countries WHERE language <> 'English';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "483": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 483,
    "query": "What are the names of all stadiums that did not have a concert in 2014?",
    "turn_history": {
      "actions": [
        "SELECT name FROM stadiums WHERE id NOT IN (SELECT stadium_id FROM concerts WHERE year = 2014);"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "484": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 484,
    "query": "What is the date and id of the transcript with the least number of results?",
    "turn_history": {
      "actions": [
        "SELECT date, id FROM transcripts ORDER BY results ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "485": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 485,
    "query": "What are the final tables made and best finishes for all poker players?",
    "turn_history": {
      "actions": [
        "SELECT player_name, final_tables, best_finishes FROM poker_players;"
      ],
      "observations": [
        "Error executing query: Unknown column 'best_finishes' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "486": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 486,
    "query": "Find the average grade of all students who have some friends.",
    "turn_history": {
      "actions": [
        "SELECT AVG(grade) FROM students WHERE id IN (SELECT student_id FROM friends);"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "487": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 487,
    "query": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
    "turn_history": {
      "actions": [
        "SELECT model FROM table_name WHERE weight < 3500 AND manufacturer <> 'Ford Motor Company';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "488": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 488,
    "query": "What region does Angola belong to and what is its population?",
    "turn_history": {
      "actions": [
        "SELECT region, population FROM countries WHERE name = 'Angola';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "489": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 489,
    "query": "Show the names of all of the high schooler Kyle's friends.",
    "turn_history": {
      "actions": [
        "SELECT h.name FROM Highschooler h, Friend f WHERE h.ID = f.friend_id AND f.highschooler_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')"
      ],
      "observations": [
        "Error executing query: Unknown column 'f.highschooler_id' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "490": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 490,
    "query": "Show the names and grades of each high schooler.",
    "turn_history": {
      "actions": [
        "SELECT name, grade FROM highschooler;"
      ],
      "observations": [
        "[('John', 12), ('Haley', 10), ('Alexis', 11), ('Jordan', 12), ('Austin', 11), ('Tiffany', 9), ('Kris', 10), ('Jessica', 11), ('Jordan', 9), ('Brittany', 10), ('Logan', 12), ('Gabriel', 9), ('Cassandra', 9), ('Andrew', 10), ('Gabriel', 11), ('Kyle', 12)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "491": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 491,
    "query": "What is the document name and template id for document with description with the letter 'w' in it?",
    "turn_history": {
      "actions": [
        "SELECT document_name, template_id FROM documents WHERE description LIKE '%w%';"
      ],
      "observations": [
        "Error executing query: Unknown column 'description' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "492": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 492,
    "query": "Return the type code of the template type with the description \"Book\".",
    "turn_history": {
      "actions": [
        "SELECT type_code FROM template_types WHERE description = 'Book';"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.template_types' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "493": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 493,
    "query": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
    "turn_history": {
      "actions": [
        "SELECT singer.name, singer.nation FROM singer INNER JOIN song ON singer.id = song.singer_id WHERE song.title LIKE '%Hey%';"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.song' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "494": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 494,
    "query": "Give the flight numbers of flights leaving from Aberdeen.",
    "turn_history": {
      "actions": [
        "SELECT flight_number FROM flights WHERE departure_city = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'flight_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "495": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 495,
    "query": "Which airlines have a flight with source airport AHD?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT airline_name FROM flights WHERE source_airport = 'AHD';"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "496": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 496,
    "query": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
    "turn_history": {
      "actions": [
        "SELECT p.id, p.role, p.email FROM professionals p LEFT JOIN treatments t ON p.id = t.professional_id AND t.animal_type = 'dog' WHERE t.id IS NULL;"
      ],
      "observations": [
        "Error executing query: Unknown column 'p.id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "497": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 497,
    "query": "Show the names of conductors that have conducted more than one orchestras.",
    "turn_history": {
      "actions": [
        "SELECT conductor_name FROM performances GROUP BY conductor_name HAVING COUNT(DISTINCT orchestra_name) > 1;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.performances' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "498": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 498,
    "query": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
    "turn_history": {
      "actions": [
        "SELECT name, age, weight FROM dogs WHERE abandoned = 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'abandoned' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "499": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 499,
    "query": "Return the names of cities that have a population between 160000 and 900000 .",
    "turn_history": {
      "actions": [
        "SELECT name FROM cities WHERE population BETWEEN 160000 AND 900000;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.cities' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "500": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 500,
    "query": "Which of the countries has the most car makers? List the country name.",
    "turn_history": {
      "actions": [
        "SELECT country_name FROM car_makers WHERE car_makers = (SELECT MAX(car_makers) FROM car_makers);"
      ],
      "observations": [
        "Error executing query: Unknown column 'country_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "501": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 501,
    "query": "Find number of pets owned by students who are older than 20.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM pets WHERE owner_id IN (SELECT student_id FROM students WHERE age > 20);"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "502": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 502,
    "query": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
    "turn_history": {
      "actions": [
        "SELECT record_company FROM orchestra WHERE year_founded < 2003 INTERSECT SELECT record_company FROM orchestra WHERE year_founded > 2003;"
      ],
      "observations": [
        "Error executing query: Unknown column 'year_founded' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "503": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 503,
    "query": "What type of pet is the youngest animal, and how much does it weigh?",
    "turn_history": {
      "actions": [
        "SELECT type, weight FROM pets ORDER BY birth_date DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "504": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 504,
    "query": "Show names of teachers and the number of courses they teach.",
    "turn_history": {
      "actions": [
        "SELECT teacher.name, COUNT(course.teacher_id) AS num_courses FROM teacher LEFT JOIN course ON teacher.id = course.teacher_id GROUP BY teacher.id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'course.teacher_id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "505": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 505,
    "query": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
    "turn_history": {
      "actions": [
        "SELECT id, role, first_name FROM professionals WHERE id IN (   SELECT professional_id   FROM treatments   GROUP BY professional_id   HAVING COUNT(*) >= 2 );"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "506": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 506,
    "query": "What is the mobile phone number of the student named Timmothy Ward ?",
    "turn_history": {
      "actions": [
        "SELECT mobile_phone_number FROM students WHERE name = 'Timmothy Ward';"
      ],
      "observations": [
        "Error executing query: Unknown column 'mobile_phone_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "507": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 507,
    "query": "What are the names of the people who teach math courses?",
    "turn_history": {
      "actions": [
        "SELECT name FROM teachers WHERE course = 'math';"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "508": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 508,
    "query": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT v.name FROM visitors v JOIN visits v1 ON v.id = v1.visitor_id JOIN museums m1 ON v1.museum_id = m1.id JOIN visits v2 ON v.id = v2.visitor_id JOIN museums m2 ON v2.museum_id = m2.id WHERE m1.opened < '2009-01-01' AND m2.opened > '2011-01-01';"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visitors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "509": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 509,
    "query": "What are the first names of all players, and their total ranking points?",
    "turn_history": {
      "actions": [
        "SELECT first_name, SUM(ranking_points) AS total_ranking_points FROM players GROUP BY first_name;"
      ],
      "observations": [
        "Error executing query: Unknown column 'ranking_points' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "510": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 510,
    "query": "List pairs of the owner's first name and the dogs's name.",
    "turn_history": {
      "actions": [
        "SELECT owner.first_name, dog.name FROM owner JOIN dog ON owner.id = dog.owner_id;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.owner' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "511": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 511,
    "query": "What is the age of the oldest dog?",
    "turn_history": {
      "actions": [
        "SELECT MAX(age) FROM dogs;"
      ],
      "observations": [
        "[('9',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "512": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 512,
    "query": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
    "turn_history": {
      "actions": [
        "SELECT s.id, s.first_name, s.middle_name, s.last_name, COUNT(*) AS num_enrollments FROM students s JOIN enrollments e ON s.id = e.student_id GROUP BY s.id ORDER BY num_enrollments DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "513": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 513,
    "query": "Return the number of flights departing from Aberdeen.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE departure_city = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'departure_city' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "514": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 514,
    "query": "What model has the most different versions?",
    "turn_history": {
      "actions": [
        "SELECT model FROM cars GROUP BY model ORDER BY COUNT(DISTINCT version) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "515": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 515,
    "query": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.",
    "turn_history": {
      "actions": [
        "SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;"
      ],
      "observations": [
        "[('A Love of a Lifetime', '5.8'), ('Friendly Skies', '5.3'), ('Game Three', '4.4')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "516": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 516,
    "query": "List the names and birth dates of people in ascending alphabetical order of name.",
    "turn_history": {
      "actions": [
        "SELECT name, birth_date FROM people ORDER BY name ASC;"
      ],
      "observations": [
        "[('Aleksey Ostapenko', 'May 26, 1986'), ('Maksim Botin', 'July 14, 1983'), ('Roman Bragin', 'April 17, 1987'), ('Semen Poltavskiy', 'February 8, 1981'), ('Sergey Grankin', 'January 22, 1987'), ('Teodor Salparov', 'August 16, 1982'), ('Yevgeni Sivozhelez', 'August 8, 1986')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "517": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 517,
    "query": "How many 'United Airlines' flights go to Airport 'ASY'?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND destination = 'ASY';"
      ],
      "observations": [
        "Error executing query: Unknown column 'destination' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "518": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 518,
    "query": "Show all document ids and the number of paragraphs in each document. Order by document id.",
    "turn_history": {
      "actions": [
        "SELECT document_id, COUNT(paragraph_id) AS num_paragraphs FROM documents GROUP BY document_id ORDER BY document_id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'paragraph_id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "519": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 519,
    "query": "For each language, list the number of TV Channels that use it.",
    "turn_history": {
      "actions": [
        "SELECT language, COUNT(*) AS num_channels FROM tv_channels GROUP BY language;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "520": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 520,
    "query": "What is the name of the high schooler who has the greatest number of likes?",
    "turn_history": {
      "actions": [
        "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1);"
      ],
      "observations": [
        "[('Gabriel',)]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "521": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 521,
    "query": "How many courses are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM courses;"
      ],
      "observations": [
        "[(15,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "522": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 522,
    "query": "For model volvo, how many cylinders does the car with the least accelerate have?",
    "turn_history": {
      "actions": [
        "SELECT MIN(cylinders) FROM cars WHERE model = 'volvo' AND accelerate = (SELECT MIN(accelerate) FROM cars WHERE model = 'volvo');"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "523": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 523,
    "query": "What is the earliest date of a transcript release, and what details can you tell me?",
    "turn_history": {
      "actions": [
        "SELECT MIN(release_date), * FROM transcripts;"
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* FROM transcripts' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "524": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 524,
    "query": "Give the airline with abbreviation 'UAL'.",
    "turn_history": {
      "actions": [
        "SELECT * FROM airlines WHERE abbreviation = 'UAL';"
      ],
      "observations": [
        "[(1, 'United Airlines', 'UAL', 'USA')]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "525": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 525,
    "query": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
    "turn_history": {
      "actions": [
        "SELECT countrycode, language FROM (   SELECT countrycode, language, percentage,    ROW_NUMBER() OVER (PARTITION BY countrycode ORDER BY percentage DESC) AS rn   FROM countrylanguage ) AS t WHERE rn = 1;"
      ],
      "observations": [
        "[('ABW', 'Papiamento'), ('AFG', 'Pashto'), ('AGO', 'Ovimbundu'), ('AIA', 'English'), ('ALB', 'Albaniana'), ('AND', 'Spanish'), ('ANT', 'Papiamento'), ('ARE', 'Arabic'), ('ARG', 'Spanish'), ('ARM', 'Armenian'), ('ASM', 'Samoan'), ('ATG', 'Creole English'), ('AUS', 'English'), ('AUT', 'German'), ('AZE', 'Azerbaijani'), ('BDI', 'Kirundi'), ('BEL', 'Dutch'), ('BEN', 'Fon'), ('BFA', 'Mossi'), ('BGD', 'Bengali'), ('BGR', 'Bulgariana'), ('BHR', 'Arabic'), ('BHS', 'Creole English'), ('BIH', 'Serbo-Croatian'), ('BLR', 'Belorussian'), ('BLZ', 'English'), ('BMU', 'English'), ('BOL', 'Spanish'), ('BRA', 'Portuguese'), ('BRB', 'Bajan'), ('BRN', 'Malay'), ('BTN', 'Dzongkha'), ('BWA', 'Tswana'), ('CAF', 'Gbaya'), ('CAN', 'English'), ('CCK', 'English'), ('CHE', 'German'), ('CHL', 'Spanish'), ('CHN', 'Chinese'), ('CIV', 'Akan'), ('CMR', 'Fang'), ('COD', 'Luba'), ('COG', 'Kongo'), ('COK', 'English'), ('COL', 'Spanish'), ('COM', 'Comorian'), ('CPV', 'Crioulo'), ('CRI', 'Spanish'), ('CUB', 'Spanish'), ('CXR', 'Chinese'), ('CYM', 'English'), ('CYP', 'Greek'), ('CZE', 'Czech'), ('DEU', 'German'), ('DJI', 'Somali'), ('DMA', 'Creole English'), ('DNK', 'Danish'), ('DOM', 'Spanish'), ('DZA', 'Arabic'), ('ECU', 'Spanish'), ('EGY', 'Arabic'), ('ERI', 'Tigrinja'), ('ESH', 'Arabic'), ('ESP', 'Spanish'), ('EST', 'Estonian'), ('ETH', 'Oromo'), ('FIN', 'Finnish'), ('FJI', 'Fijian'), ('FLK', 'English'), ('FRA', 'French'), ('FRO', 'Faroese'), ('FSM', 'Trukese'), ('GAB', 'Fang'), ('GBR', 'English'), ('GEO', 'Georgiana'), ('GHA', 'Akan'), ('GIB', 'English'), ('GIN', 'Ful'), ('GLP', 'Creole French'), ('GMB', 'Malinke'), ('GNB', 'Crioulo'), ('GNQ', 'Fang'), ('GRC', 'Greek'), ('GRD', 'Creole English'), ('GRL', 'Greenlandic'), ('GTM', 'Spanish'), ('GUF', 'Creole French'), ('GUM', 'English'), ('GUY', 'Creole English'), ('HKG', 'Canton Chinese'), ('HND', 'Spanish'), ('HRV', 'Serbo-Croatian'), ('HTI', 'Haiti Creole'), ('HUN', 'Hungarian'), ('IDN', 'Javanese'), ('IND', 'Hindi'), ('IRL', 'English'), ('IRN', 'Persian'), ('IRQ', 'Arabic'), ('ISL', 'Icelandic'), ('ISR', 'Hebrew'), ('ITA', 'Italian'), ('JAM', 'Creole English'), ('JOR', 'Arabic'), ('JPN', 'Japanese'), ('KAZ', 'Kazakh'), ('KEN', 'Kikuyu'), ('KGZ', 'Kirgiz'), ('KHM', 'Khmer'), ('KIR', 'Kiribati'), ('KNA', 'Creole English'), ('KOR', 'Korean'), ('KWT', 'Arabic'), ('LAO', 'Lao'), ('LBN', 'Arabic'), ('LBR', 'Kpelle'), ('LBY', 'Arabic'), ('LCA', 'Creole French'), ('LIE', 'German'), ('LKA', 'Singali'), ('LSO', 'Sotho'), ('LTU', 'Lithuanian'), ('LUX', 'Luxembourgish'), ('LVA', 'Latvian'), ('MAC', 'Canton Chinese'), ('MAR', 'Arabic'), ('MCO', 'French'), ('MDA', 'Romanian'), ('MDG', 'Malagasy'), ('MDV', 'Dhivehi'), ('MEX', 'Spanish'), ('MHL', 'Marshallese'), ('MKD', 'Macedonian'), ('MLI', 'Bambara'), ('MLT', 'Maltese'), ('MMR', 'Burmese'), ('MNG', 'Mongolian'), ('MNP', 'Philippene Languages'), ('MOZ', 'Makua'), ('MRT', 'Hassaniya'), ('MSR', 'English'), ('MTQ', 'Creole French'), ('MUS', 'Creole French'), ('MWI', 'Chichewa'), ('MYS', 'Malay'), ('MYT', 'Mahor\u00e9'), ('NAM', 'Ovambo'), ('NCL', 'Malenasian Languages'), ('NER', 'Hausa'), ('NFK', 'English'), ('NGA', 'Joruba'), ('NIC', 'Spanish'), ('NIU', 'English'), ('NLD', 'Dutch'), ('NOR', 'Norwegian'), ('NPL', 'Nepali'), ('NRU', 'Nauru'), ('NZL', 'English'), ('OMN', 'Arabic'), ('PAK', 'Punjabi'), ('PAN', 'Spanish'), ('PCN', 'Pitcairnese'), ('PER', 'Spanish'), ('PHL', 'Pilipino'), ('PLW', 'Palau'), ('PNG', 'Papuan Languages'), ('POL', 'Polish'), ('PRI', 'Spanish'), ('PRK', 'Korean'), ('PRT', 'Portuguese'), ('PRY', 'Spanish'), ('PSE', 'Arabic'), ('PYF', 'Tahitian'), ('QAT', 'Arabic'), ('REU', 'Creole French'), ('ROM', 'Romanian'), ('RUS', 'Russian'), ('RWA', 'Rwanda'), ('SAU', 'Arabic'), ('SDN', 'Arabic'), ('SEN', 'Wolof'), ('SGP', 'Chinese'), ('SHN', 'English'), ('SJM', 'Norwegian'), ('SLB', 'Malenasian Languages'), ('SLE', 'Mende'), ('SLV', 'Spanish'), ('SMR', 'Italian'), ('SOM', 'Somali'), ('SPM', 'French'), ('STP', 'Crioulo'), ('SUR', 'Sranantonga'), ('SVK', 'Slovak'), ('SVN', 'Slovene'), ('SWE', 'Swedish'), ('SWZ', 'Swazi'), ('SYC', 'Seselwa'), ('SYR', 'Arabic'), ('TCA', 'English'), ('TCD', 'Sara'), ('TGO', 'Ewe'), ('THA', 'Thai'), ('TJK', 'Tadzhik'), ('TKL', 'English'), ('TKM', 'Turkmenian'), ('TMP', 'Portuguese'), ('TON', 'Tongan'), ('TTO', 'English'), ('TUN', 'Arabic'), ('TUR', 'Turkish'), ('TUV', 'Tuvalu'), ('TWN', 'Min'), ('TZA', 'Nyamwesi'), ('UGA', 'Ganda'), ('UKR', 'Ukrainian'), ('UMI', 'English'), ('URY', 'Spanish'), ('USA', 'English'), ('UZB', 'Uzbek'), ('VAT', 'Italian'), ('VCT', 'Creole English'), ('VEN', 'Spanish'), ('VGB', 'English'), ('VIR', 'English'), ('VNM', 'Vietnamese'), ('VUT', 'Bislama'), ('WLF', 'Futuna'), ('WSM', 'Samoan-English'), ('YEM', 'Arabic'), ('YUG', 'Serbo-Croatian'), ('ZAF', 'Zulu'), ('ZMB', 'Bemba'), ('ZWE', 'Shona')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "526": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 526,
    "query": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT City.Name FROM City JOIN CountryLanguage ON City.CountryCode = CountryLanguage.CountryCode WHERE City.CountryCode IN (     SELECT Country.Code     FROM Country     WHERE Country.Continent = 'Asia' ) AND CountryLanguage.Language = 'Chinese' AND CountryLanguage.IsOfficial = 'T';"
      ],
      "observations": [
        "[('Shanghai',), ('Peking',), ('Chongqing',), ('Tianjin',), ('Wuhan',), ('Harbin',), ('Shenyang',), ('Kanton [Guangzhou]',), ('Chengdu',), ('Nanking [Nanjing]',), ('Changchun',), ('Xi\u00b4an',), ('Dalian',), ('Qingdao',), ('Jinan',), ('Hangzhou',), ('Zhengzhou',), ('Shijiazhuang',), ('Taiyuan',), ('Kunming',), ('Changsha',), ('Nanchang',), ('Fuzhou',), ('Lanzhou',), ('Guiyang',), ('Ningbo',), ('Hefei',), ('Urumt\u0161i [\u00dcr\u00fcmqi]',), ('Anshan',), ('Fushun',), ('Nanning',), ('Zibo',), ('Qiqihar',), ('Jilin',), ('Tangshan',), ('Baotou',), ('Shenzhen',), ('Hohhot',), ('Handan',), ('Wuxi',), ('Xuzhou',), ('Datong',), ('Yichun',), ('Benxi',), ('Luoyang',), ('Suzhou',), ('Xining',), ('Huainan',), ('Jixi',), ('Daqing',), ('Fuxin',), ('Amoy [Xiamen]',), ('Liuzhou',), ('Shantou',), ('Jinzhou',), ('Mudanjiang',), ('Yinchuan',), ('Changzhou',), ('Zhangjiakou',), ('Dandong',), ('Hegang',), ('Kaifeng',), ('Jiamusi',), ('Liaoyang',), ('Hengyang',), ('Baoding',), ('Hunjiang',), ('Xinxiang',), ('Huangshi',), ('Haikou',), ('Yantai',), ('Bengbu',), ('Xiangtan',), ('Weifang',), ('Wuhu',), ('Pingxiang',), ('Yingkou',), ('Anyang',), ('Panzhihua',), ('Pingdingshan',), ('Xiangfan',), ('Zhuzhou',), ('Jiaozuo',), ('Wenzhou',), ('Zhangjiang',), ('Zigong',), ('Shuangyashan',), ('Zaozhuang',), ('Yakeshi',), ('Yichang',), ('Zhenjiang',), ('Huaibei',), ('Qinhuangdao',), ('Guilin',), ('Liupanshui',), ('Panjin',), ('Yangquan',), ('Jinxi',), ('Liaoyuan',), ('Lianyungang',), ('Xianyang',), ('Tai\u00b4an',), ('Chifeng',), ('Shaoguan',), ('Nantong',), ('Leshan',), ('Baoji',), ('Linyi',), ('Tonghua',), ('Siping',), ('Changzhi',), ('Tengzhou',), ('Chaozhou',), ('Yangzhou',), ('Dongwan',), ('Ma\u00b4anshan',), ('Foshan',), ('Yueyang',), ('Xingtai',), ('Changde',), ('Shihezi',), ('Yancheng',), ('Jiujiang',), ('Dongying',), ('Shashi',), ('Xintai',), ('Jingdezhen',), ('Tongchuan',), ('Zhongshan',), ('Shiyan',), ('Tieli',), ('Jining',), ('Wuhai',), ('Mianyang',), ('Luzhou',), ('Zunyi',), ('Shizuishan',), ('Neijiang',), ('Tongliao',), ('Tieling',), ('Wafangdian',), ('Anqing',), ('Shaoyang',), ('Laiwu',), ('Chengde',), ('Tianshui',), ('Nanyang',), ('Cangzhou',), ('Yibin',), ('Huaiyin',), ('Dunhua',), ('Yanji',), ('Jiangmen',), ('Tongling',), ('Suihua',), ('Gongziling',), ('Xiantao',), ('Chaoyang',), ('Ganzhou',), ('Huzhou',), ('Baicheng',), ('Shangzi',), ('Yangjiang',), ('Qitaihe',), ('Gejiu',), ('Jiangyin',), ('Hebi',), ('Jiaxing',), ('Wuzhou',), ('Meihekou',), ('Xuchang',), ('Liaocheng',), ('Haicheng',), ('Qianjiang',), ('Baiyin',), ('Bei\u00b4an',), ('Yixing',), ('Laizhou',), ('Qaramay',), ('Acheng',), ('Dezhou',), ('Nanping',), ('Zhaoqing',), ('Beipiao',), ('Fengcheng',), ('Fuyu',), ('Xinyang',), ('Dongtai',), ('Yuci',), ('Honghu',), ('Ezhou',), ('Heze',), ('Daxian',), ('Linfen',), ('Tianmen',), ('Yiyang',), ('Quanzhou',), ('Rizhao',), ('Deyang',), ('Guangyuan',), ('Changshu',), ('Zhangzhou',), ('Hailar',), ('Nanchong',), ('Jiutai',), ('Zhaodong',), ('Shaoxing',), ('Fuyang',), ('Maoming',), ('Qujing',), ('Ghulja',), ('Jiaohe',), ('Puyang',), ('Huadian',), ('Jiangyou',), ('Qashqar',), ('Anshun',), ('Fuling',), ('Xinyu',), ('Hanzhong',), ('Danyang',), ('Chenzhou',), ('Xiaogan',), ('Shangqiu',), ('Zhuhai',), ('Qingyuan',), ('Aqsu',), ('Xiaoshan',), ('Zaoyang',), ('Xinghua',), ('Hami',), ('Huizhou',), ('Jinmen',), ('Sanming',), ('Ulanhot',), ('Korla',), ('Wanxian',), ('Rui\u00b4an',), ('Zhoushan',), ('Liangcheng',), ('Jiaozhou',), ('Taizhou',), ('Taonan',), ('Pingdu',), ('Ji\u00b4an',), ('Longkou',), ('Langfang',), ('Zhoukou',), ('Suining',), ('Yulin',), ('Jinhua',), ('Liu\u00b4an',), ('Shuangcheng',), ('Suizhou',), ('Ankang',), ('Weinan',), ('Longjing',), ('Da\u00b4an',), ('Lengshuijiang',), ('Laiyang',), ('Xianning',), ('Dali',), ('Anda',), ('Jincheng',), ('Longyan',), ('Xichang',), ('Wendeng',), ('Hailun',), ('Binzhou',), ('Linhe',), ('Wuwei',), ('Duyun',), ('Mishan',), ('Shangrao',), ('Changji',), ('Meixian',), ('Yushu',), ('Tiefa',), ('Huai\u00b4an',), ('Leiyang',), ('Zalantun',), ('Weihai',), ('Loudi',), ('Qingzhou',), ('Qidong',), ('Huaihua',), ('Luohe',), ('Chuzhou',), ('Kaiyuan',), ('Linqing',), ('Chaohu',), ('Laohekou',), ('Dujiangyan',), ('Zhumadian',), ('Linchuan',), ('Jiaonan',), ('Sanmenxia',), ('Heyuan',), ('Manzhouli',), ('Lhasa',), ('Lianyuan',), ('Kuytun',), ('Puqi',), ('Hongjiang',), ('Qinzhou',), ('Renqiu',), ('Yuyao',), ('Guigang',), ('Kaili',), ('Yan\u00b4an',), ('Beihai',), ('Xuangzhou',), ('Quzhou',), ('Yong\u00b4an',), ('Zixing',), ('Liyang',), ('Yizheng',), ('Yumen',), ('Liling',), ('Yuncheng',), ('Shanwei',), ('Cixi',), ('Yuanjiang',), ('Bozhou',), ('Jinchang',), ('Fu\u00b4an',), ('Suqian',), ('Shishou',), ('Hengshui',), ('Danjiangkou',), ('Fujin',), ('Sanya',), ('Guangshui',), ('Huangshan',), ('Xingcheng',), ('Zhucheng',), ('Kunshan',), ('Haining',), ('Pingliang',), ('Fuqing',), ('Xinzhou',), ('Jieyang',), ('Zhangjiagang',), ('Tong Xian',), ('Ya\u00b4an',), ('Emeishan',), ('Enshi',), ('Bose',), ('Yuzhou',), ('Tumen',), ('Putian',), ('Linhai',), ('Xilin Hot',), ('Shaowu',), ('Junan',), ('Huaying',), ('Pingyi',), ('Huangyan',), ('Singapore',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "527": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 527,
    "query": "How many concerts are there in year 2014 or 2015?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM concerts WHERE year IN (2014, 2015);"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "528": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 528,
    "query": "List each charge type and its amount.",
    "turn_history": {
      "actions": [
        "SELECT charge_type, amount FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "529": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 529,
    "query": "What are all of the episodes ordered by ratings?",
    "turn_history": {
      "actions": [
        "SELECT * FROM episodes ORDER BY rating DESC;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.episodes' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "530": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 530,
    "query": "What is the total population of Gelderland district?",
    "turn_history": {
      "actions": [
        "SELECT SUM(population) FROM districts WHERE name = 'Gelderland';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.districts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "531": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 531,
    "query": "What is the language that is used by the largest number of Asian nations?",
    "turn_history": {
      "actions": [
        "SELECT language, COUNT(*) AS num_countries FROM countries WHERE continent = 'Asia' GROUP BY language ORDER BY num_countries DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "532": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 532,
    "query": "What is the name and capacity for the stadium with highest average attendance?",
    "turn_history": {
      "actions": [
        "SELECT name, capacity FROM stadiums ORDER BY average_attendance DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "533": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 533,
    "query": "How many flights have destination ATO?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE destination = 'ATO';"
      ],
      "observations": [
        "Error executing query: Unknown column 'destination' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "534": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 534,
    "query": "How many matches were played in each year?",
    "turn_history": {
      "actions": [
        "SELECT YEAR(date) AS year, COUNT(*) AS matches_played FROM matches GROUP BY YEAR(date);"
      ],
      "observations": [
        "Error executing query: Unknown column 'date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "535": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 535,
    "query": "What is the average weight of cars each year?",
    "turn_history": {
      "actions": [
        "SELECT YEAR(date_column), AVG(weight_column) FROM table_name GROUP BY YEAR(date_column);"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "536": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 536,
    "query": "Return the names of the contestants whose names contain the substring 'Al' .",
    "turn_history": {
      "actions": [
        "SELECT name FROM contestants WHERE name LIKE '%Al%';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "537": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 537,
    "query": "Show the names of singers and the total sales of their songs.",
    "turn_history": {
      "actions": [
        "SELECT singers.name, SUM(songs.sales) AS total_sales FROM singers JOIN songs ON singers.id = songs.singer_id GROUP BY singers.name;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "538": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 538,
    "query": "Return the names of the 3 countries with the fewest people.",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries ORDER BY population LIMIT 3;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "539": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 539,
    "query": "When did the episode \"A Love of a Lifetime\" air?",
    "turn_history": {
      "actions": [
        "SELECT air_date FROM episodes WHERE title = 'A Love of a Lifetime';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.episodes' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "540": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 540,
    "query": "What is the id and weight of every pet who is older than 1?",
    "turn_history": {
      "actions": [
        "SELECT id, weight FROM pets WHERE age > 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "541": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 541,
    "query": "What is the number of makers of care in France?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT Maker) FROM Product WHERE Type = 'Care' AND Country = 'France';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.product' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "542": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 542,
    "query": "Find the number of cities in each district whose population is greater than the average population of cities?",
    "turn_history": {
      "actions": [
        "SELECT district, COUNT(city)  FROM city  WHERE population > (SELECT AVG(population) FROM city)  GROUP BY district;"
      ],
      "observations": [
        "Error executing query: Unknown column 'city' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "543": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 543,
    "query": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
    "turn_history": {
      "actions": [
        "SELECT email FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';"
      ],
      "observations": [
        "Error executing query: Unknown column 'email' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "544": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 544,
    "query": "Find the names of employees who never won any award in the evaluation.",
    "turn_history": {
      "actions": [
        "SELECT name FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM awards);"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "545": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 545,
    "query": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .",
    "turn_history": {
      "actions": [
        "SELECT id, maker FROM car_makers WHERE id IN (   SELECT maker_id   FROM car_models   GROUP BY maker_id   HAVING COUNT(*) >= 2 ) AND id IN (   SELECT maker_id   FROM car_models   GROUP BY maker_id   HAVING COUNT(DISTINCT maker_id) > 3 );"
      ],
      "observations": [
        "Error executing query: Table 'car_1.car_models' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "546": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 546,
    "query": "What are the template ids with template type description \"Presentation\".",
    "turn_history": {
      "actions": [
        "SELECT id FROM templates WHERE type_description = 'Presentation';"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "547": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 547,
    "query": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
    "turn_history": {
      "actions": [
        "SELECT first_name, country_code, birth_date FROM players WHERE rank_points = (SELECT MAX(rank_points) FROM players) AND player_id IN (SELECT player_id FROM matches WHERE winner = players.player_id)"
      ],
      "observations": [
        "Error executing query: Unknown column 'rank_points' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "548": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 548,
    "query": "Show all distinct template type codes for all templates.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT template_type_code FROM templates;"
      ],
      "observations": [
        "[('AD',), ('BK',), ('CV',), ('PP',), ('PPT',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "549": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 549,
    "query": "Which shop has the most employees? Give me the shop name.",
    "turn_history": {
      "actions": [
        "SELECT shop_name FROM employees GROUP BY shop_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "550": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 550,
    "query": "Show different citizenships and the maximum net worth of singers of each citizenship.",
    "turn_history": {
      "actions": [
        "SELECT citizenship, MAX(net_worth) FROM singers GROUP BY citizenship;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "551": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 551,
    "query": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
    "turn_history": {
      "actions": [
        "SELECT enrollment.course_id, COUNT(*) AS num_transcripts FROM enrollment GROUP BY enrollment.course_id ORDER BY num_transcripts DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollment' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "552": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 552,
    "query": "Return the number of airlines in the USA.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM airlines WHERE country = 'USA';"
      ],
      "observations": [
        "[(12,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "553": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 553,
    "query": "List names of conductors in descending order of years of work.",
    "turn_history": {
      "actions": [
        "SELECT name FROM conductors ORDER BY years_of_work DESC;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "554": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 554,
    "query": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
    "turn_history": {
      "actions": [
        "SELECT email FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';"
      ],
      "observations": [
        "Error executing query: Unknown column 'email' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "555": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 555,
    "query": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT name FROM battles WHERE (attacker_commander='Kaloyan' AND defender_commander='Baldwin I') OR (attacker_commander='Baldwin I' AND defender_commander='Kaloyan');"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.battles' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "556": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 556,
    "query": "What are the region and population of Angola?",
    "turn_history": {
      "actions": [
        "SELECT region, population FROM countries WHERE name = 'Angola';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "557": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 557,
    "query": "What are all the course names of the courses which ever have students enrolled in?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT course_name FROM courses INNER JOIN enrollments ON courses.course_id = enrollments.course_id;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "558": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 558,
    "query": "Give me Brazil\u2019s population and life expectancies.",
    "turn_history": {
      "actions": [
        "SELECT population, life_expectancy FROM table_name WHERE country = 'Brazil';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "559": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 559,
    "query": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",
    "turn_history": {
      "actions": [
        "SELECT make_id, make_name FROM cars WHERE cylinders < 4 AND horsepower > (SELECT MIN(horsepower) FROM cars)"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "560": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 560,
    "query": "How many different store locations are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT store_location) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "561": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 561,
    "query": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?",
    "turn_history": {
      "actions": [
        "SELECT MAX(mpg) FROM cars WHERE cylinders = 8 AND year < 1980;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "562": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 562,
    "query": "What are flight numbers of Airline \"United Airlines\"?",
    "turn_history": {
      "actions": [
        "SELECT flight_number FROM flights WHERE airline = 'United Airlines';"
      ],
      "observations": [
        "Error executing query: Unknown column 'flight_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "563": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 563,
    "query": "What are the id and name of the museum visited most times?",
    "turn_history": {
      "actions": [
        "SELECT museum_id, museum_name FROM visits GROUP BY museum_id, museum_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visits' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "564": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 564,
    "query": "What is the average weight and year for each year?",
    "turn_history": {
      "actions": [
        "SELECT year, AVG(weight) FROM table_name GROUP BY year;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "565": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 565,
    "query": "What is the birth date of the poker player with the lowest earnings?",
    "turn_history": {
      "actions": [
        "SELECT birth_date FROM poker_players ORDER BY earnings ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'birth_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "566": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 566,
    "query": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT year FROM cars WHERE weight >= 3000 AND weight <= 4000;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "567": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 567,
    "query": "What are the names of the singers that have more than one songs?",
    "turn_history": {
      "actions": [
        "SELECT singer_name FROM songs GROUP BY singer_name HAVING COUNT(*) > 1;"
      ],
      "observations": [
        "Error executing query: Table 'singer.songs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "568": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 568,
    "query": "How many high schoolers are in each grade?",
    "turn_history": {
      "actions": [
        "SELECT grade, COUNT(*) FROM Highschoolers GROUP BY grade;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.highschoolers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "569": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 569,
    "query": "What is the name of the course with the most students enrolled?",
    "turn_history": {
      "actions": [
        "SELECT course_name FROM courses  WHERE course_id = (SELECT course_id FROM enrollments                     GROUP BY course_id                     ORDER BY COUNT(student_id) DESC                     LIMIT 1);"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "570": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 570,
    "query": "What is the total ticket expense of the visitors whose membership level is 1?",
    "turn_history": {
      "actions": [
        "SELECT SUM(ticket_expense) FROM visitors WHERE membership_level = 1;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visitors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "571": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 571,
    "query": "Who owns the youngest dog? Give me his or her last name.",
    "turn_history": {
      "actions": [
        "SELECT last_name FROM owners WHERE id = (SELECT owner_id FROM dogs             ORDER BY birth_date DESC             LIMIT 1);"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "572": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 572,
    "query": "What are the names of singers ordered by ascending net worth?",
    "turn_history": {
      "actions": [
        "SELECT name FROM singers ORDER BY net_worth ASC;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "573": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 573,
    "query": "Show template ids, version numbers, and template type codes for all templates.",
    "turn_history": {
      "actions": [
        "SELECT template_id, version_number, template_type_code FROM templates;"
      ],
      "observations": [
        "[(1, 5, 'PP'), (4, 4, 'BK'), (6, 2, 'PPT'), (7, 8, 'PPT'), (8, 3, 'BK'), (9, 2, 'BK'), (10, 1, 'PPT'), (11, 6, 'BK'), (14, 7, 'AD'), (15, 9, 'CV'), (16, 5, 'CV'), (18, 5, 'PP'), (19, 7, 'AD'), (20, 6, 'BK'), (21, 9, 'AD'), (22, 0, 'PP'), (23, 2, 'BK'), (24, 8, 'PP'), (25, 5, 'PP')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "574": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 574,
    "query": "What is the total number of singers?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM singers;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "575": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 575,
    "query": "What is the number of cartoones written by Joseph Kuhr?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cartoons WHERE written_by = 'Joseph Kuhr';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "576": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 576,
    "query": "Count the number of high schoolers in grades 9 or 10.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM students WHERE grade IN (9, 10) AND school_level = 'High School';"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "577": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 577,
    "query": "What is the document id, template id and description for document named \"Robbin CV\"?",
    "turn_history": {
      "actions": [
        "SELECT document_id, template_id, description FROM documents WHERE document_name = 'Robbin CV';"
      ],
      "observations": [
        "Error executing query: Unknown column 'description' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "578": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 578,
    "query": "Count the number of documents that use the PPT template type.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM documents WHERE template_type = 'PPT';"
      ],
      "observations": [
        "Error executing query: Unknown column 'template_type' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "579": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 579,
    "query": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
    "turn_history": {
      "actions": [
        "SELECT code FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "580": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 580,
    "query": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT citizenship FROM singers WHERE birth_year < 1945 OR birth_year > 1955;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "581": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 581,
    "query": "What are the codes of countries with more than 50 players?",
    "turn_history": {
      "actions": [
        "SELECT code FROM countries WHERE players > 50;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "582": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 582,
    "query": "What is the abbreviation of Airline \"JetBlue Airways\"?",
    "turn_history": {
      "actions": [
        "SELECT abbreviation FROM airlines WHERE name = 'JetBlue Airways';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "583": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 583,
    "query": "How many distinct nationalities are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT nationality) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'poker_player.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "584": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 584,
    "query": "What is the name of the breed with the most dogs?",
    "turn_history": {
      "actions": [
        "SELECT breed_name FROM dogs GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'breed_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "585": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 585,
    "query": "What is the number of car models created by the car maker American Motor Company?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM car_models WHERE car_maker = 'American Motor Company';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.car_models' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "586": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 586,
    "query": "What are the names of conductors, sorted descending by the number of years they have worked?",
    "turn_history": {
      "actions": [
        "SELECT conductor_name FROM conductors ORDER BY years_worked DESC;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "587": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 587,
    "query": "List all airline names and their abbreviations in \"USA\".",
    "turn_history": {
      "actions": [
        "SELECT name, abbreviation FROM airlines WHERE country = 'USA';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "588": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 588,
    "query": "Show all template type codes and the number of documents using each type.",
    "turn_history": {
      "actions": [
        "SELECT template_type_code, COUNT(*) AS num_documents FROM documents GROUP BY template_type_code;"
      ],
      "observations": [
        "Error executing query: Unknown column 'template_type_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "589": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 589,
    "query": "How many distinct countries do players come from?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT country) FROM players;"
      ],
      "observations": [
        "Error executing query: Unknown column 'country' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "590": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 590,
    "query": "Show all template type codes with less than three templates.",
    "turn_history": {
      "actions": [
        "SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(*) < 3;"
      ],
      "observations": [
        "[('CV',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "591": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 591,
    "query": "Find the name, population and expected life length of asian country with the largest area?",
    "turn_history": {
      "actions": [
        "SELECT name, population, life_expectancy FROM countries WHERE continent = 'Asia' ORDER BY surface_area DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "592": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 592,
    "query": "How many poker players are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM poker_players;"
      ],
      "observations": [
        "[(5,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "593": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 593,
    "query": "What is the number of distinct continents where Chinese is spoken?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT continent) FROM countries WHERE language = 'Chinese';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "594": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 594,
    "query": "Which cities do more than one employee under age 30 come from?",
    "turn_history": {
      "actions": [
        "SELECT city FROM employees WHERE age < 30 GROUP BY city HAVING COUNT(*) > 1;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "595": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 595,
    "query": "What are the names of conductors whose nationalities are not \"USA\"?",
    "turn_history": {
      "actions": [
        "SELECT name FROM conductors WHERE nationality <> 'USA';"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "596": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 596,
    "query": "How many total tours were there for each ranking date?",
    "turn_history": {
      "actions": [
        "SELECT ranking_date, COUNT(*) AS total_tours FROM tour GROUP BY ranking_date;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.tour' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "597": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 597,
    "query": "On average, when were the transcripts printed?",
    "turn_history": {
      "actions": [
        "SELECT AVG(print_date) FROM transcripts;"
      ],
      "observations": [
        "Error executing query: Unknown column 'print_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "598": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 598,
    "query": "What is the name of the semester with no students enrolled?",
    "turn_history": {
      "actions": [
        "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT DISTINCT semester_id FROM enrollments);"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "599": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 599,
    "query": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT package_options  FROM tv_channels  WHERE channel_id NOT IN      (SELECT channel_id       FROM tv_shows       WHERE director = 'Ben Jones' AND genre = 'Cartoon')"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "600": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 600,
    "query": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
    "turn_history": {
      "actions": [
        "SELECT p.id, p.cell_phone FROM professionals p INNER JOIN treatments t ON p.id = t.professional_id GROUP BY p.id, p.cell_phone HAVING COUNT(DISTINCT t.type) >= 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'p.id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "601": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 601,
    "query": "Find the average age of the dogs who went through treatments.",
    "turn_history": {
      "actions": [
        "SELECT AVG(age) FROM dogs WHERE treatment = 'yes';"
      ],
      "observations": [
        "Error executing query: Unknown column 'treatment' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "602": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 602,
    "query": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
    "turn_history": {
      "actions": [
        "SELECT weekly_rank FROM tv_series WHERE episode = 'A Love of a Lifetime';"
      ],
      "observations": [
        "[(43.0,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "603": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 603,
    "query": "Count the number of employees",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM employees;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "604": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 604,
    "query": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
    "turn_history": {
      "actions": [
        "SELECT id, text FROM paragraphs WHERE document_title = 'Welcome to NY';"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "605": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 605,
    "query": "Count the number of orchestras that have CD or DVD as their record format.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM orchestras WHERE record_format IN ('CD', 'DVD');"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "606": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 606,
    "query": "Return the maximum final tables made across all poker players who have earnings below 200000.",
    "turn_history": {
      "actions": [
        "SELECT MAX(final_tables) FROM poker_players WHERE earnings < 200000;"
      ],
      "observations": [
        "Error executing query: Unknown column 'earnings' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "607": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 607,
    "query": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
    "turn_history": {
      "actions": [
        "SELECT maker.maker_id, maker.maker_name, COUNT(car.model) AS num_models FROM maker JOIN car ON maker.maker_id = car.maker_id GROUP BY maker.maker_id, maker.maker_name;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.maker' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "608": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 608,
    "query": "Return the version numbers and template type codes of templates with a version number greater than 5.",
    "turn_history": {
      "actions": [
        "SELECT version_number, template_type_code FROM templates WHERE version_number > 5;"
      ],
      "observations": [
        "[(8, 'PPT'), (6, 'BK'), (7, 'AD'), (9, 'CV'), (7, 'AD'), (6, 'BK'), (9, 'AD'), (8, 'PP')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "609": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 609,
    "query": "How many cartoons did each director create?",
    "turn_history": {
      "actions": [
        "SELECT director, COUNT(cartoon) FROM cartoons GROUP BY director;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "610": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 610,
    "query": "Show distinct names of singers that have songs with sales more than 300000.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT singer_name FROM songs WHERE sales > 300000;"
      ],
      "observations": [
        "Error executing query: Table 'singer.songs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "611": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 611,
    "query": "Find the number of visitors who did not visit any museum opened after 2010.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT visitor_id)  FROM visitors  WHERE visitor_id NOT IN      (SELECT DISTINCT visitor_id       FROM visits       JOIN museums ON visits.museum_id = museums.museum_id       WHERE year > 2010)"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visitors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "612": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 612,
    "query": "Find the id of students who do not have a cat pet.",
    "turn_history": {
      "actions": [
        "SELECT id FROM students WHERE pet <> 'cat';"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "613": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 613,
    "query": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
    "turn_history": {
      "actions": [
        "SELECT district  FROM shops  GROUP BY district  HAVING SUM(CASE WHEN products_sold < 3000 THEN 1 ELSE 0 END) > 0  AND SUM(CASE WHEN products_sold > 10000 THEN 1 ELSE 0 END) > 0;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "614": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 614,
    "query": "What is the produdction code and channel of the most recent cartoon ?",
    "turn_history": {
      "actions": [
        "SELECT production_code, channel  FROM cartoon  WHERE air_date = (SELECT MAX(air_date) FROM cartoon)"
      ],
      "observations": [
        "Error executing query: Unknown column 'air_date' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "615": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 615,
    "query": "Return the number of flights arriving in Aberdeen.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE destination = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'destination' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "616": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 616,
    "query": "List the section_name in reversed lexicographical order.",
    "turn_history": {
      "actions": [
        "SELECT section_name FROM table_name ORDER BY section_name DESC;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "617": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 617,
    "query": "How many airlines do we have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM airlines;"
      ],
      "observations": [
        "[(12,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "618": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 618,
    "query": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
    "turn_history": {
      "actions": [
        "SELECT AVG(mpg) FROM cars WHERE cylinders = 4;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "619": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 619,
    "query": "Count the number of distinct store locations.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT store_location) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "620": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 620,
    "query": "What are the names of the stadiums without any concerts?",
    "turn_history": {
      "actions": [
        "SELECT name FROM stadiums WHERE id NOT IN (SELECT stadium_id FROM concerts);"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "621": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 621,
    "query": "Count the number of countries for which Spanish is the predominantly spoken language.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countries WHERE language='Spanish' AND percentage > 50;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "622": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 622,
    "query": "How many shops are there in each location?",
    "turn_history": {
      "actions": [
        "SELECT location, COUNT(shop_id) AS num_shops FROM shops GROUP BY location;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "623": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 623,
    "query": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
    "turn_history": {
      "actions": [
        "SELECT continent, AVG(lifeExpectancy), SUM(population) FROM country GROUP BY continent HAVING AVG(lifeExpectancy) < 72;"
      ],
      "observations": [
        "[('Asia', 67.44118, Decimal('3705025700')), ('Africa', 52.57193, Decimal('784475000')), ('South America', 70.94615, Decimal('345780000')), ('Oceania', 69.715, Decimal('30401150'))]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "624": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 624,
    "query": "How many TV Channels use the English language?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM channels WHERE language = 'English' AND category = 'TV';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "625": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 625,
    "query": "Show the name of singers whose birth year is either 1948 or 1949?",
    "turn_history": {
      "actions": [
        "SELECT name FROM singers WHERE birth_year IN (1948, 1949);"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "626": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 626,
    "query": "What is the first name of the student whose permanent address is different from his or her current one?",
    "turn_history": {
      "actions": [
        "SELECT first_name FROM students WHERE permanent_address <> current_address LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'permanent_address' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "627": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 627,
    "query": "What is the average age of all the dogs?",
    "turn_history": {
      "actions": [
        "SELECT AVG(age) FROM dogs;"
      ],
      "observations": [
        "[(5.066666666666666,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "628": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 628,
    "query": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
    "turn_history": {
      "actions": [
        "SELECT owner.first_name, dog.name FROM owner JOIN dog ON owner.id = dog.owner_id WHERE owner.state = 'Virginia';"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.owner' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "629": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 629,
    "query": "find the number of distinct country codes of all players.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT country_code) FROM players;"
      ],
      "observations": [
        "[(0,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "630": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 630,
    "query": "how many countries are in Asia?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countries WHERE continent = 'Asia';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "631": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 631,
    "query": "What are the names of airports in Aberdeen?",
    "turn_history": {
      "actions": [
        "SELECT name FROM airports WHERE city = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "632": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 632,
    "query": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
    "turn_history": {
      "actions": [
        "SELECT arriving_date, departing_date FROM dogs WHERE treatment = 'done';"
      ],
      "observations": [
        "Error executing query: Unknown column 'arriving_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "633": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 633,
    "query": "How many paragraphs for the document with name 'Summer Show'?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM document WHERE name = 'Summer Show' AND type = 'paragraph';"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.document' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "634": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 634,
    "query": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .",
    "turn_history": {
      "actions": [
        "SELECT SUM(population), AVG(surface_area) FROM countries WHERE continent = 'North America' AND surface_area > 3000;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "635": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 635,
    "query": "What is the zip code of the address in the city Port Chelsea?",
    "turn_history": {
      "actions": [
        "SELECT zip_code FROM addresses WHERE city = 'Port Chelsea';"
      ],
      "observations": [
        "Error executing query: Unknown column 'zip_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "636": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 636,
    "query": "What is the grade of each high schooler?",
    "turn_history": {
      "actions": [
        "SELECT grade FROM high_schoolers;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.high_schoolers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "637": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 637,
    "query": "What are the names of high schoolers who both have friends and are liked?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT h.name FROM Highschooler h, Friend f, Likes l WHERE h.ID = f.ID1 AND h.ID = l.ID1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'f.ID1' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "638": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 638,
    "query": "Which language is the most popular on the Asian continent?",
    "turn_history": {
      "actions": [
        "I'm sorry, but the question \"Which language is the most popular on the Asian continent?\" cannot be answered with a SQL command. SQL is used for managing and manipulating data in a database, not for analyzing or determining the popularity of languages on a continent. This question would require a different approach, such as conducting a survey or analyzing demographic data."
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'I'm sorry, but the question \"Which language is the most popular on the Asian con' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "639": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 639,
    "query": "List the name of singers in ascending order of net worth.",
    "turn_history": {
      "actions": [
        "SELECT name FROM singers ORDER BY net_worth ASC;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "640": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 640,
    "query": "Count the number of conductors.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM conductors;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "641": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 641,
    "query": "Find the year that has the most number of matches.",
    "turn_history": {
      "actions": [
        "SELECT YEAR(date) AS year, COUNT(*) AS num_matches FROM matches GROUP BY YEAR(date) ORDER BY num_matches DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "642": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 642,
    "query": "What are the countries where either English or Dutch is the official language ?",
    "turn_history": {
      "actions": [
        "SELECT country_name  FROM countries  WHERE official_language = 'English' OR official_language = 'Dutch';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "643": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 643,
    "query": "What is the airport name for airport 'AKO'?",
    "turn_history": {
      "actions": [
        "SELECT name FROM airports WHERE iata_code = 'AKO';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "644": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 644,
    "query": "What are the earnings of poker players, ordered descending by value?",
    "turn_history": {
      "actions": [
        "SELECT earnings FROM poker_players ORDER BY earnings DESC;"
      ],
      "observations": [
        "Error executing query: Unknown column 'earnings' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "645": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 645,
    "query": "How many templates do we have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM templates;"
      ],
      "observations": [
        "[(19,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "646": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 646,
    "query": "List the final tables made and the best finishes of poker players.",
    "turn_history": {
      "actions": [
        "SELECT final_tables_made, best_finishes FROM poker_players;"
      ],
      "observations": [
        "Error executing query: Unknown column 'final_tables_made' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "647": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 647,
    "query": "What are all different template ids used for documents, and how many times were each of them used?",
    "turn_history": {
      "actions": [
        "SELECT template_id, COUNT(*) as usage_count FROM documents GROUP BY template_id;"
      ],
      "observations": [
        "[(1, 1), (4, 1), (6, 1), (7, 1), (8, 1), (10, 1), (11, 2), (14, 2), (20, 1), (21, 1), (22, 1), (25, 1)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "648": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 648,
    "query": "What is the average number of injuries caused each time?",
    "turn_history": {
      "actions": [
        "SELECT AVG(injuries) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "649": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 649,
    "query": "What are the name of the countries where there is not a single car maker?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT CountryName FROM Countries WHERE CountryCode NOT IN (SELECT DISTINCT CountryCode FROM CarMakers)"
      ],
      "observations": [
        "Error executing query: Table 'car_1.carmakers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "650": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 650,
    "query": "How many dogs have not gone through any treatment?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM dogs WHERE treatment_done = 0;"
      ],
      "observations": [
        "Error executing query: Unknown column 'treatment_done' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "651": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 651,
    "query": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
    "turn_history": {
      "actions": [
        "SELECT location, name FROM stadiums WHERE capacity BETWEEN 5000 AND 10000;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "652": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 652,
    "query": "How many employees are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM employees;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "653": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 653,
    "query": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
    "turn_history": {
      "actions": [
        "SELECT name, birth_date FROM people ORDER BY name ASC;"
      ],
      "observations": [
        "[('Aleksey Ostapenko', 'May 26, 1986'), ('Maksim Botin', 'July 14, 1983'), ('Roman Bragin', 'April 17, 1987'), ('Semen Poltavskiy', 'February 8, 1981'), ('Sergey Grankin', 'January 22, 1987'), ('Teodor Salparov', 'August 16, 1982'), ('Yevgeni Sivozhelez', 'August 8, 1986')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "654": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 654,
    "query": "Find all airlines that have at least 10 flights.",
    "turn_history": {
      "actions": [
        "SELECT airline_name FROM flights GROUP BY airline_name HAVING COUNT(*) >= 10;"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "655": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 655,
    "query": "Find the average ranking for each player and their first name.",
    "turn_history": {
      "actions": [
        "SELECT AVG(ranking), first_name FROM players GROUP BY first_name;"
      ],
      "observations": [
        "Error executing query: Unknown column 'ranking' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "656": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 656,
    "query": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
    "turn_history": {
      "actions": [
        "I'm sorry, but I cannot generate the SQL command for this question as there is no information provided about the database schema and tables involved. Please provide more details about the database structure and the tables involved in the query."
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'I'm sorry, but I cannot generate the SQL command for this question as there is n' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "657": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 657,
    "query": "What is total bonus given in all evaluations?",
    "turn_history": {
      "actions": [
        "SELECT SUM(bonus) FROM evaluations;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.evaluations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "658": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 658,
    "query": "Find the number of distinct name of losers.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT name) FROM losers;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.losers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "659": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 659,
    "query": "What is the first, middle, and last name of the first student to register?",
    "turn_history": {
      "actions": [
        "SELECT first_name, middle_name, last_name FROM students ORDER BY registration_date LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'registration_date' in 'order clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "660": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 660,
    "query": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
    "turn_history": {
      "actions": [
        "SELECT phone_number FROM table_name WHERE first_name = 'Timmothy' AND last_name = 'Ward';"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "661": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 661,
    "query": "What are the airline names and abbreviations for airlines in the USA?",
    "turn_history": {
      "actions": [
        "SELECT name, abbreviation FROM airlines WHERE country = 'USA';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "662": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 662,
    "query": "What region is Kabul in?",
    "turn_history": {
      "actions": [
        "SELECT region FROM cities WHERE name = 'Kabul';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.cities' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "663": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 663,
    "query": "How many different departments offer degrees?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT department) FROM degrees;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.degrees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "664": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 664,
    "query": "Count the number of United Airlines flights arriving in ASY Airport.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND destination_airport = 'ASY';"
      ],
      "observations": [
        "Error executing query: Unknown column 'destination_airport' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "665": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 665,
    "query": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
    "turn_history": {
      "actions": [
        "SELECT battle.name, outcome.result, commander.name FROM battle JOIN outcome ON battle.name = outcome.battle JOIN ship ON battle.name = ship.battle JOIN classes ON ship.class = classes.class JOIN ships ON ship.name = ships.name JOIN commander ON outcome.commander = commander.name WHERE classes.type = 'bb' AND outcome.result = 'sunk' AND battle.name NOT IN (     SELECT ship.battle     FROM ship     WHERE ship.losses > 0 ) AND battle.name IN (     SELECT DISTINCT battle     FROM ship     JOIN classes ON ship.class = classes.class     WHERE classes.country = 'Bulgaria' ) AND battle.name IN (     SELECT DISTINCT battle     FROM ship     JOIN classes ON ship.class = classes.class     JOIN ships ON ship.name = ships.name     WHERE ships.launched >= classes.service ) AND battle.name IN (     SELECT DISTINCT battle     FROM ship     JOIN classes ON ship.class = classes.class     WHERE classes.numGuns >= 8 )  AND battle.engagement IS NOT NULL AND battle.engagement LIKE '%English Channel%'"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.outcome' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "666": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 666,
    "query": "What are the names of poker players in descending order of earnings?",
    "turn_history": {
      "actions": [
        "SELECT name FROM poker_players ORDER BY earnings DESC;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "667": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 667,
    "query": "What is the model for the car with a weight smaller than the average?",
    "turn_history": {
      "actions": [
        "SELECT model FROM cars WHERE weight < (SELECT AVG(weight) FROM cars);"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "668": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 668,
    "query": "How many likes correspond to each student id?",
    "turn_history": {
      "actions": [
        "SELECT student_id, COUNT(*) AS likes_count FROM likes GROUP BY student_id;"
      ],
      "observations": [
        "[(1025, 1), (1247, 1), (1316, 1), (1501, 1), (1641, 1), (1689, 1), (1709, 1), (1782, 1), (1911, 1), (1934, 1)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "669": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 669,
    "query": "Which dogs are of the rarest breed? Show their names and treatment dates.",
    "turn_history": {
      "actions": [
        "SELECT dogs.name, treatments.date FROM dogs JOIN breeds ON dogs.breed_id = breeds.id JOIN treatments ON dogs.id = treatments.dog_id WHERE breeds.rarity = 'rarest'"
      ],
      "observations": [
        "Error executing query: Unknown column 'treatments.date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "670": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 670,
    "query": "What is the hometown of the youngest teacher?",
    "turn_history": {
      "actions": [
        "SELECT hometown FROM teachers WHERE age = (SELECT MIN(age) FROM teachers)"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "671": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 671,
    "query": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
    "turn_history": {
      "actions": [
        "SELECT first_name, country_code FROM players WHERE player_id IN (   SELECT player_id   FROM grand_slam_titles   WHERE tournament_name = 'WTA Championships' ) AND player_id IN (   SELECT player_id   FROM grand_slam_titles   WHERE tournament_name = 'Australian Open' );"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.grand_slam_titles' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "672": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 672,
    "query": "Which semesters do not have any student enrolled? List the semester name.",
    "turn_history": {
      "actions": [
        "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT DISTINCT semester_id FROM enrollments);"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "673": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 673,
    "query": "What are the different addresses that have students living there?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT address FROM students;"
      ],
      "observations": [
        "Error executing query: Unknown column 'address' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "674": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 674,
    "query": "What is the model of the car with the smallest amount of horsepower?",
    "turn_history": {
      "actions": [
        "SELECT model FROM cars ORDER BY horsepower ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "675": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 675,
    "query": "Show names of teachers that teach at least two courses.",
    "turn_history": {
      "actions": [
        "SELECT teacher_name FROM courses GROUP BY teacher_name HAVING COUNT(*) >= 2;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.courses' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "676": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 676,
    "query": "How many models does each car maker produce? List maker full name, id and the number.",
    "turn_history": {
      "actions": [
        "SELECT maker.id, maker.name, COUNT(model.id) AS number FROM maker JOIN model ON maker.id = model.maker_id GROUP BY maker.id, maker.name;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.maker' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "677": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 677,
    "query": "What are the descriptions for all the math courses?",
    "turn_history": {
      "actions": [
        "SELECT description FROM courses WHERE subject = 'Math';"
      ],
      "observations": [
        "Error executing query: Unknown column 'description' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "678": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 678,
    "query": "What is the description for the section named h?",
    "turn_history": {
      "actions": [
        "SELECT description FROM sections WHERE name = 'h';"
      ],
      "observations": [
        "Error executing query: Unknown column 'description' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "679": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 679,
    "query": "What are the names and ids of all makers with more than 3 models?",
    "turn_history": {
      "actions": [
        "SELECT maker_id, maker_name FROM makers WHERE maker_id IN (SELECT maker_id FROM models GROUP BY maker_id HAVING COUNT(*) > 3);"
      ],
      "observations": [
        "Error executing query: Table 'car_1.makers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "680": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 680,
    "query": "What is the name of the high schooler who has the greatest number of friends?",
    "turn_history": {
      "actions": [
        "SELECT name FROM Highschooler WHERE ID IN (SELECT ID1 FROM Friend GROUP BY ID1 ORDER BY COUNT(ID2) DESC LIMIT 1);"
      ],
      "observations": [
        "Error executing query: This version of MySQL doesn't yet support 'LIMIT & IN/ALL/ANY/SOME subquery'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "681": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 681,
    "query": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
    "turn_history": {
      "actions": [
        "SELECT s.id, s.first_name, s.middle_name, s.last_name FROM students s INNER JOIN enrollments e ON s.id = e.student_id WHERE e.semester = 'SEMESTER_NAME' GROUP BY s.id, s.first_name, s.middle_name, s.last_name HAVING COUNT(DISTINCT e.degree_program) = 2;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "682": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 682,
    "query": "What is the average edispl for all volvos?",
    "turn_history": {
      "actions": [
        "SELECT AVG(edispl) FROM table_name WHERE make = 'volvo';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "683": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 683,
    "query": "Find the name of the makers that produced some cars in the year of 1970?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT maker FROM Cars WHERE year=1970;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "684": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 684,
    "query": "Which airlines have at least 10 flights?",
    "turn_history": {
      "actions": [
        "SELECT airline_name FROM flights GROUP BY airline_name HAVING COUNT(*) >= 10;"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "685": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 685,
    "query": "What is the car model with the highest mpg ?",
    "turn_history": {
      "actions": [
        "SELECT model FROM cars ORDER BY mpg DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "686": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 686,
    "query": "What are the first names and birth dates of players from the USA?",
    "turn_history": {
      "actions": [
        "SELECT first_name, birth_date FROM players WHERE country = 'USA';"
      ],
      "observations": [
        "Error executing query: Unknown column 'country' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "687": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 687,
    "query": "Which country does Airline \"JetBlue Airways\" belong to?",
    "turn_history": {
      "actions": [
        "SELECT country FROM airlines WHERE name = 'JetBlue Airways';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "688": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 688,
    "query": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
    "turn_history": {
      "actions": [
        "SELECT first_name, country_code, birth_date FROM players WHERE player_id = (   SELECT player_id   FROM player_rankings   ORDER BY winner_rank_points DESC   LIMIT 1 );"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.player_rankings' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "689": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 689,
    "query": "What is the template type code of the template used by document with the name \"Data base\"?",
    "turn_history": {
      "actions": [
        "SELECT template_type_code FROM templates WHERE template_name = 'Data base';"
      ],
      "observations": [
        "Error executing query: Unknown column 'template_name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "690": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 690,
    "query": "How many unique languages are spoken in the world?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT language) FROM world;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.world' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "691": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 691,
    "query": "How many flights do we have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights;"
      ],
      "observations": [
        "[(50,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "692": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 692,
    "query": "What are the names of students who have 2 or more likes?",
    "turn_history": {
      "actions": [
        "SELECT name FROM students WHERE likes >= 2;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "693": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 693,
    "query": "What is the name of each continent and how many car makers are there in each one?",
    "turn_history": {
      "actions": [
        "SELECT c.continent_name, COUNT(DISTINCT cm.car_maker_name) AS num_car_makers FROM continents c JOIN countries co ON c.continent_id = co.continent_id JOIN car_makers cm ON co.country_id = cm.country_id GROUP BY c.continent_name;"
      ],
      "observations": [
        "Error executing query: Unknown column 'c.continent_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "694": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 694,
    "query": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
    "turn_history": {
      "actions": [
        "SELECT role, street, city, state FROM professionals WHERE city LIKE '%West%';"
      ],
      "observations": [
        "Error executing query: Unknown column 'role' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "695": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 695,
    "query": "Which city has most number of departing flights?",
    "turn_history": {
      "actions": [
        "SELECT departure_city, COUNT(*) AS num_departures FROM flights GROUP BY departure_city ORDER BY num_departures DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'departure_city' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "696": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 696,
    "query": "What are the names of students who have no friends?",
    "turn_history": {
      "actions": [
        "SELECT s.name  FROM students s  LEFT JOIN friendships f ON s.id = f.student_id  WHERE f.student_id IS NULL;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "697": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 697,
    "query": "What is the number of countries with more than 2 car makers ?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT country) FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 2;"
      ],
      "observations": [
        "[(1,), (1,), (1,), (1,)]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "698": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 698,
    "query": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
    "turn_history": {
      "actions": [
        "SELECT p.country_code, p.first_name FROM players p INNER JOIN results r ON p.player_id = r.winner_id INNER JOIN tourneys t ON r.tourney_id = t.tourney_id WHERE t.tourney_name = 'WTA Championships' AND t.tourney_level = 'F' AND t.surface = 'Hard' AND EXISTS (   SELECT 1   FROM results r2   INNER JOIN tourneys t2 ON r2.tourney_id = t2.tourney_id   WHERE r2.winner_id = r.winner_id AND t2.tourney_name = 'Australian Open' AND t2.tourney_level = 'G' AND t2.surface = 'Hard' );"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.results' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "699": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 699,
    "query": "How many likes does Kyle have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM likes WHERE user='Kyle';"
      ],
      "observations": [
        "Error executing query: Unknown column 'user' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "700": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 700,
    "query": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
    "turn_history": {
      "actions": [
        "SELECT country_name, COUNT(language) AS num_languages FROM countries GROUP BY country_name HAVING COUNT(language) >= 3;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "701": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 701,
    "query": "List the names of teachers who have not been arranged to teach courses.",
    "turn_history": {
      "actions": [
        "SELECT name FROM teachers WHERE teacher_id NOT IN (SELECT teacher_id FROM courses);"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "702": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 702,
    "query": "What is the average earnings of poker players?",
    "turn_history": {
      "actions": [
        "SELECT AVG(earnings) FROM poker_players;"
      ],
      "observations": [
        "Error executing query: Unknown column 'earnings' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "703": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 703,
    "query": "What is the lowest grade of students who do not have any friends?",
    "turn_history": {
      "actions": [
        "SELECT MIN(grade) FROM students WHERE NOT EXISTS (SELECT * FROM friendships WHERE (friendships.student1 = students.id OR friendships.student2 = students.id))"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "704": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 704,
    "query": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
    "turn_history": {
      "actions": [
        "SELECT name, rank_points FROM players WHERE matches_won = (SELECT MAX(matches_won) FROM players)"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "705": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 705,
    "query": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
    "turn_history": {
      "actions": [
        "SELECT name FROM teachers WHERE hometown <> 'Little Lever Urban District';"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "706": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 706,
    "query": "What are the names of people who do not play poker?",
    "turn_history": {
      "actions": [
        "SELECT name FROM people WHERE game <> 'poker';"
      ],
      "observations": [
        "Error executing query: Unknown column 'game' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "707": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 707,
    "query": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
    "turn_history": {
      "actions": [
        "SELECT package_option FROM TV_Channel WHERE serial_name = 'Sky Radio';"
      ],
      "observations": [
        "Error executing query: Unknown column 'serial_name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "708": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 708,
    "query": "What is the total number of people living in the nations that do not use English?",
    "turn_history": {
      "actions": [
        "SELECT SUM(population) FROM countries WHERE language <> 'English';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "709": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 709,
    "query": "What is the name of the singer with the largest net worth?",
    "turn_history": {
      "actions": [
        "SELECT name FROM singers ORDER BY net_worth DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "710": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 710,
    "query": "find id of the tv channels that from the countries where have more than two tv channels.",
    "turn_history": {
      "actions": [
        "SELECT id FROM tv_channels WHERE country IN (SELECT country FROM tv_channels GROUP BY country HAVING COUNT(*) > 2);"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "711": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 711,
    "query": "Count the number of templates.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM templates;"
      ],
      "observations": [
        "[(19,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "712": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 712,
    "query": "Show different hometown of teachers and the number of teachers from each hometown.",
    "turn_history": {
      "actions": [
        "SELECT hometown, COUNT(*) as num_teachers FROM teachers GROUP BY hometown;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "713": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 713,
    "query": "Give the name of the student with the most likes.",
    "turn_history": {
      "actions": [
        "SELECT name FROM students ORDER BY likes DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "714": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 714,
    "query": "Find the total amount of bonus given in all the evaluations.",
    "turn_history": {
      "actions": [
        "SELECT SUM(bonus) FROM evaluations;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.evaluations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "715": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 715,
    "query": "What is the best rank of losers across all matches?",
    "turn_history": {
      "actions": [
        "SELECT MAX(rank) FROM losers;"
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') FROM losers' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "716": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 716,
    "query": "Count the number of flights departing from 'APG'.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE departure_airport = 'APG';"
      ],
      "observations": [
        "Error executing query: Unknown column 'departure_airport' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "717": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 717,
    "query": "What are the names of conductors who have conducted at more than one orchestra?",
    "turn_history": {
      "actions": [
        "SELECT conductor_name FROM performances GROUP BY conductor_name HAVING COUNT(DISTINCT orchestra_name) > 1;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.performances' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "718": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 718,
    "query": "Return the names and surface areas of the 5 largest countries.",
    "turn_history": {
      "actions": [
        "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5;"
      ],
      "observations": [
        "[('Russian Federation', 17075400.0), ('Antarctica', 13120000.0), ('Canada', 9970610.0), ('China', 9572900.0), ('United States', 9363520.0)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "719": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 719,
    "query": "How many high schoolers are there in grade 9 or 10?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM students WHERE grade IN (9, 10) AND school_level = 'high school';"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "720": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 720,
    "query": "Find the number of pets for each student who has any pet and student id.",
    "turn_history": {
      "actions": [
        "SELECT student_id, COUNT(*) AS num_pets FROM pet GROUP BY student_id HAVING COUNT(*) > 0;"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.pet' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "721": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 721,
    "query": "Find the package choice and series name of the TV channel that has high definition TV.",
    "turn_history": {
      "actions": [
        "SELECT package_choice, series_name FROM TV_channel WHERE high_definition = 'Yes';"
      ],
      "observations": [
        "Error executing query: Unknown column 'package_choice' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "722": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 722,
    "query": "List the most common hometown of teachers.",
    "turn_history": {
      "actions": [
        "SELECT hometown, COUNT(*) AS count FROM teachers GROUP BY hometown ORDER BY count DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "723": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 723,
    "query": "What is the number of carsw ith over 6 cylinders?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE cylinders > 6;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "724": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 724,
    "query": "What are the names of the sections in reverse alphabetical order?",
    "turn_history": {
      "actions": [
        "SELECT section_name FROM sections ORDER BY section_name DESC;"
      ],
      "observations": [
        "[('y',), ('u',), ('p',), ('o',), ('l',), ('k',), ('j',), ('h',), ('g',), ('f',), ('e',), ('d',), ('c',), ('b',), ('a',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "725": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 725,
    "query": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
    "turn_history": {
      "actions": [
        "SELECT MAX(horsepower), make FROM table_name WHERE cylinders = 3;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "726": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 726,
    "query": "List the contestant numbers and names, ordered by contestant name descending.",
    "turn_history": {
      "actions": [
        "SELECT contestant_number, contestant_name FROM table_name ORDER BY contestant_name DESC;"
      ],
      "observations": [
        "Error executing query: Table 'voter_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "727": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 727,
    "query": "How much does the most expensive charge type costs?",
    "turn_history": {
      "actions": [
        "SELECT MAX(cost) FROM charge_type;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.charge_type' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "728": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 728,
    "query": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT s.name, s.location FROM stadiums s INNER JOIN concerts c1 ON s.id = c1.stadium_id AND YEAR(c1.date) = 2014 INNER JOIN concerts c2 ON s.id = c2.stadium_id AND YEAR(c2.date) = 2015;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "729": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 729,
    "query": "Show the name of teachers aged either 32 or 33?",
    "turn_history": {
      "actions": [
        "SELECT name FROM teachers WHERE age IN (32, 33);"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "730": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 730,
    "query": "Which flight numbers correspond to United Airlines flights?",
    "turn_history": {
      "actions": [
        "SELECT flight_number FROM flights WHERE airline = 'United Airlines';"
      ],
      "observations": [
        "Error executing query: Unknown column 'flight_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "731": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 731,
    "query": "Show all document names using templates with template type code BK.",
    "turn_history": {
      "actions": [
        "SELECT document_name FROM templates WHERE template_type_code = 'BK';"
      ],
      "observations": [
        "Error executing query: Unknown column 'document_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "732": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 732,
    "query": "What are the names of nations where both English and French are official languages?",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries WHERE english_official = 1 AND french_official = 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "733": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 733,
    "query": "Return the names of all the poker players.",
    "turn_history": {
      "actions": [
        "SELECT name FROM poker_players;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "734": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 734,
    "query": "Return the number of flights.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights;"
      ],
      "observations": [
        "[(50,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "735": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 735,
    "query": "What is the smallest weight of the car produced with 8 cylinders on 1974 ?",
    "turn_history": {
      "actions": [
        "SELECT MIN(weight) FROM cars WHERE cylinders = 8 AND year = 1974;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "736": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 736,
    "query": "Which cities are in European countries where English is not the official language?",
    "turn_history": {
      "actions": [
        "SELECT city FROM cities WHERE country IN (   SELECT country   FROM countries   WHERE continent = 'Europe' AND official_language <> 'English' );"
      ],
      "observations": [
        "Error executing query: Table 'world_1.cities' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "737": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 737,
    "query": "Return the different descriptions for templates that have been used in a document.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT description FROM templates INNER JOIN documents ON templates.template_id = documents.template_id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'description' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "738": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 738,
    "query": "What is the year that had the most concerts?",
    "turn_history": {
      "actions": [
        "SELECT YEAR(date) AS year, COUNT(*) AS num_concerts FROM concerts GROUP BY YEAR(date) ORDER BY num_concerts DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "739": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 739,
    "query": "How much does the most recent treatment cost?",
    "turn_history": {
      "actions": [
        "SELECT cost FROM treatment ORDER BY treatment_date DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.treatment' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "740": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 740,
    "query": "How many cars has over 6 cylinders?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE cylinders > 6;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "741": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 741,
    "query": "What is all the information about hiring?",
    "turn_history": {
      "actions": [
        "SELECT * FROM hiring;"
      ],
      "observations": [
        "[(1, 1, '2009', 'T'), (1, 2, '2003', 'T'), (8, 3, '2011', 'F'), (4, 4, '2012', 'T'), (5, 5, '2013', 'T'), (2, 6, '2010', 'F'), (6, 7, '2008', 'T')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "742": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 742,
    "query": "Find the number of concerts happened in the stadium with the highest capacity .",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM concerts WHERE stadium_capacity = (SELECT MAX(stadium_capacity) FROM concerts);"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "743": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 743,
    "query": "Which airline has most number of flights?",
    "turn_history": {
      "actions": [
        "SELECT airline_name, COUNT(*) AS num_flights FROM flights GROUP BY airline_name ORDER BY num_flights DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "744": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 744,
    "query": "Find the names of stores whose number products is more than the average number of products.",
    "turn_history": {
      "actions": [
        "SELECT store_name FROM stores WHERE num_products > (SELECT AVG(num_products) FROM stores);"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.stores' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "745": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 745,
    "query": "Which continent has the most diverse languages?",
    "turn_history": {
      "actions": [
        "SELECT continent FROM countries GROUP BY continent ORDER BY COUNT(DISTINCT language) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "746": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 746,
    "query": "What are the ids of students who both have friends and are liked?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT f.student_id FROM friends AS f INNER JOIN likes AS l ON f.student_id = l.student_id;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.friends' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "747": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 747,
    "query": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
    "turn_history": {
      "actions": [
        "SELECT conductor_name FROM orchestras WHERE foundation_year > 2008;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "748": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 748,
    "query": "Where is the youngest teacher from?",
    "turn_history": {
      "actions": [
        "SELECT MIN(age), country FROM teachers;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "749": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 749,
    "query": "List the Episode of all TV series sorted by rating.",
    "turn_history": {
      "actions": [
        "SELECT * FROM episodes ORDER BY rating DESC;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.episodes' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "750": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 750,
    "query": "Find the first name and country code of the player who did the most number of tours.",
    "turn_history": {
      "actions": [
        "SELECT first_name, country_code FROM players WHERE tours = (SELECT MAX(tours) FROM players);"
      ],
      "observations": [
        "Error executing query: Unknown column 'tours' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "751": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 751,
    "query": "Give the name, year of independence, and surface area of the country that has the lowest population.",
    "turn_history": {
      "actions": [
        "SELECT name, year_of_independence, surface_area FROM countries WHERE population = (SELECT MIN(population) FROM countries);"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "752": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 752,
    "query": "What are all distinct countries where singers above age 20 are from?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT country FROM singers WHERE age > 20;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "753": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 753,
    "query": "Find the production code and channel of the most recently aired cartoon .",
    "turn_history": {
      "actions": [
        "SELECT production_code, channel FROM cartoons WHERE air_date = (SELECT MAX(air_date) FROM cartoons)"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "754": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 754,
    "query": "Show ids for all templates that are used by more than one document.",
    "turn_history": {
      "actions": [
        "SELECT template_id FROM documents GROUP BY template_id HAVING COUNT(*) > 1;"
      ],
      "observations": [
        "[(11,), (14,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "755": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 755,
    "query": "Find all airlines that have fewer than 200 flights.",
    "turn_history": {
      "actions": [
        "SELECT airline_name FROM flights GROUP BY airline_name HAVING COUNT(*) < 200;"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "756": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 756,
    "query": "Which airports do not have departing or arriving flights?",
    "turn_history": {
      "actions": [
        "SELECT * FROM airports WHERE airport_code NOT IN (SELECT DISTINCT departure_airport_code FROM flights UNION SELECT DISTINCT arrival_airport_code FROM flights);"
      ],
      "observations": [
        "Error executing query: Unknown column 'airport_code' in 'IN/ALL/ANY subquery'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "757": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 757,
    "query": "For each citizenship, how many singers are from that country?",
    "turn_history": {
      "actions": [
        "SELECT citizenship, COUNT(*) AS num_singers FROM singers GROUP BY citizenship;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "758": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 758,
    "query": "Show all document ids, names and the number of paragraphs in each document.",
    "turn_history": {
      "actions": [
        "SELECT id, name, COUNT(paragraphs) AS num_paragraphs FROM documents GROUP BY id, name;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "759": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 759,
    "query": "Return the number of  airports.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM airports;"
      ],
      "observations": [
        "[(100,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "760": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 760,
    "query": "Show all template type codes that are not used by any document.",
    "turn_history": {
      "actions": [
        "SELECT code FROM template_types WHERE code NOT IN (SELECT DISTINCT template_type_code FROM documents);"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.template_types' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "761": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 761,
    "query": "List the last name of the owner owning the youngest dog.",
    "turn_history": {
      "actions": [
        "SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM dogs)"
      ],
      "observations": [
        "[('Nicolas',)]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "762": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 762,
    "query": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
    "turn_history": {
      "actions": [
        "SELECT conductor_name  FROM conductors  JOIN orchestras ON conductors.orchestra_id = orchestras.orchestra_id  WHERE orchestras.founded_year > 2008;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "763": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 763,
    "query": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
    "turn_history": {
      "actions": [
        "SELECT stadium_name, capacity FROM concerts WHERE year >= 2014 ORDER BY concerts DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "764": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 764,
    "query": "Find the first names of owners living in Virginia and the names of dogs they own.",
    "turn_history": {
      "actions": [
        "SELECT owners.first_name, dogs.name FROM owners JOIN dogs ON owners.id = dogs.owner_id WHERE owners.state = 'Virginia';"
      ],
      "observations": [
        "Error executing query: Unknown column 'owners.id' in 'on clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "765": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 765,
    "query": "What are the names and release years for all the songs of the youngest singer?",
    "turn_history": {
      "actions": [
        "SELECT name, release_year FROM songs WHERE singer_id = (SELECT id FROM singers ORDER BY birthdate DESC LIMIT 1);"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.songs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "766": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 766,
    "query": "Which airlines have departures from CVO but not from APG airports?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT airline_name  FROM flights  WHERE departure_airport = 'CVO'  AND airline_name NOT IN (SELECT airline_name FROM flights WHERE departure_airport = 'APG');"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "767": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 767,
    "query": "Which countries have either English or Dutch as an official language?",
    "turn_history": {
      "actions": [
        "SELECT country_name  FROM countries  WHERE official_language = 'English' OR official_language = 'Dutch';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "768": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 768,
    "query": "Return the average earnings across all poker players.",
    "turn_history": {
      "actions": [
        "SELECT AVG(earnings) FROM poker_players;"
      ],
      "observations": [
        "Error executing query: Unknown column 'earnings' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "769": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 769,
    "query": "Which template type code has most number of templates?",
    "turn_history": {
      "actions": [
        "SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "[('BK',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "770": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 770,
    "query": "Find the total ranking points for each player and their first name.",
    "turn_history": {
      "actions": [
        "SELECT first_name, SUM(ranking_points) AS total_ranking_points FROM players GROUP BY first_name;"
      ],
      "observations": [
        "Error executing query: Unknown column 'ranking_points' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "771": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 771,
    "query": "How many players are from each country?",
    "turn_history": {
      "actions": [
        "SELECT country, COUNT(*) as num_players FROM players GROUP BY country;"
      ],
      "observations": [
        "Error executing query: Unknown column 'country' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "772": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 772,
    "query": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
    "turn_history": {
      "actions": [
        "SELECT first_name, middle_name, last_name FROM graduates WHERE graduation_date = (SELECT MIN(graduation_date) FROM graduates)"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.graduates' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "773": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 773,
    "query": "List the record company shared by the most number of orchestras.",
    "turn_history": {
      "actions": [
        "SELECT record_company FROM orchestras GROUP BY record_company ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "774": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 774,
    "query": "What is the maximum accelerate for all the different cylinders?",
    "turn_history": {
      "actions": [
        "SELECT MAX(accelerate) FROM table_name GROUP BY cylinders;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "775": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 775,
    "query": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
    "turn_history": {
      "actions": [
        "SELECT model FROM cars WHERE mpg = (SELECT MAX(mpg) FROM cars);"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "776": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 776,
    "query": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
    "turn_history": {
      "actions": [
        "SELECT s.id, s.first_name, s.middle_name, s.last_name, COUNT(*) AS num_enrollments FROM students s JOIN enrollments e ON s.id = e.student_id GROUP BY s.id ORDER BY num_enrollments DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "777": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 777,
    "query": "What are the average and maximum number of tickets bought in all visits?",
    "turn_history": {
      "actions": [
        "SELECT AVG(num_tickets), MAX(num_tickets) FROM visits;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visits' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "778": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 778,
    "query": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
    "turn_history": {
      "actions": [
        "SELECT id, name FROM countries  WHERE id IN (SELECT country_id FROM car_makers GROUP BY country_id HAVING COUNT(*) > 3) OR id IN (SELECT country_id FROM car_models WHERE name = 'fiat')"
      ],
      "observations": [
        "Error executing query: Table 'car_1.car_models' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "779": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 779,
    "query": "What is the maker of the carr produced in the earliest year and what year was it?",
    "turn_history": {
      "actions": [
        "SELECT maker, MIN(year) FROM cars;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "780": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 780,
    "query": "Count the number of employees for each city.",
    "turn_history": {
      "actions": [
        "SELECT city, COUNT(*) as num_employees FROM employees GROUP BY city;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "781": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 781,
    "query": "How many cities in each district have a population that is above the average population across all cities?",
    "turn_history": {
      "actions": [
        "SELECT district, COUNT(city)  FROM city  WHERE population > (SELECT AVG(population) FROM city)  GROUP BY district;"
      ],
      "observations": [
        "Error executing query: Unknown column 'city' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "782": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 782,
    "query": "What are the names of cities in Europe for which English is not the official language?",
    "turn_history": {
      "actions": [
        "SELECT Name FROM City WHERE CountryCode IN (SELECT Code FROM Country WHERE Continent = 'Europe' AND Language != 'English') ORDER BY Name;"
      ],
      "observations": [
        "Error executing query: Unknown column 'Language' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "783": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 783,
    "query": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
    "turn_history": {
      "actions": [
        "SELECT MAX(shares), MIN(shares) FROM performances WHERE type <> 'Live final';"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.performances' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "784": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 784,
    "query": "What is the last name of the student who has a cat that is 3 years old?",
    "turn_history": {
      "actions": [
        "SELECT last_name FROM students WHERE pet_type = 'cat' AND pet_age = 3;"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "785": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 785,
    "query": "What are the names of the singers who are not French citizens?",
    "turn_history": {
      "actions": [
        "SELECT name FROM singers WHERE nationality <> 'French';"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "786": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 786,
    "query": "find the name of employee who was awarded the most times in the evaluation.",
    "turn_history": {
      "actions": [
        "SELECT employee_name FROM evaluation GROUP BY employee_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'employee_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "787": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 787,
    "query": "What is the first name and country code of the player with the most tours?",
    "turn_history": {
      "actions": [
        "SELECT first_name, country_code FROM players WHERE tours = (SELECT MAX(tours) FROM players);"
      ],
      "observations": [
        "Error executing query: Unknown column 'tours' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "788": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 788,
    "query": "What is the official language used in the country the name of whose head of state is Beatrix.",
    "turn_history": {
      "actions": [
        "SELECT language FROM countries WHERE head_of_state = 'Beatrix';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "789": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 789,
    "query": "what are all the addresses including line 1 and line 2?",
    "turn_history": {
      "actions": [
        "SELECT line_1, line_2, city, state, zip FROM addresses;"
      ],
      "observations": [
        "Error executing query: Unknown column 'state' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "790": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 790,
    "query": "What is the most commmon hometowns for teachers?",
    "turn_history": {
      "actions": [
        "SELECT hometown, COUNT(*) as count FROM teachers GROUP BY hometown ORDER BY count DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "791": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 791,
    "query": "Show all template type codes and descriptions.",
    "turn_history": {
      "actions": [
        "SELECT template_type_code, description FROM template_types;"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.template_types' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "792": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 792,
    "query": "What is the name of the different car makers who produced a car in 1970?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT maker_name FROM car_makers INNER JOIN cars ON car_makers.maker_id = cars.maker_id WHERE cars.year = 1970;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "793": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 793,
    "query": "What are the names of documents that use templates with the code BK?",
    "turn_history": {
      "actions": [
        "SELECT document_name FROM documents WHERE template_code = 'BK';"
      ],
      "observations": [
        "Error executing query: Unknown column 'template_code' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "794": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 794,
    "query": "What is the total number of languages used in Aruba?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT language) FROM aruba_languages;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.aruba_languages' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "795": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 795,
    "query": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
    "turn_history": {
      "actions": [
        "SELECT MAX(horsepower), make FROM car_models WHERE cylinders = 3;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.car_models' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "796": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 796,
    "query": "How many available features are there in total?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM features WHERE is_available = 1;"
      ],
      "observations": [
        "Error executing query: Table 'real_estate_properties.features' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "797": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 797,
    "query": "What are the codes of template types that have fewer than 3 templates?",
    "turn_history": {
      "actions": [
        "SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(*) < 3;"
      ],
      "observations": [
        "[('CV',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "798": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 798,
    "query": "Return the lowest version number, along with its corresponding template type code.",
    "turn_history": {
      "actions": [
        "SELECT MIN(version_number), template_type_code FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "799": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 799,
    "query": "which countries' tv channels are playing some cartoon written by Todd Casey?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT country  FROM tv_channels  WHERE cartoon LIKE '%Todd Casey%';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "800": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 800,
    "query": "How many documents do we have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM documents;"
      ],
      "observations": [
        "[(14,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "801": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 801,
    "query": "How many courses in total are listed?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM courses;"
      ],
      "observations": [
        "[(15,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "802": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 802,
    "query": "What is the average attendance of shows?",
    "turn_history": {
      "actions": [
        "SELECT AVG(attendance) FROM shows;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.shows' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "803": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 803,
    "query": "What is the maximum capacity and the average of all stadiums ?",
    "turn_history": {
      "actions": [
        "SELECT MAX(capacity), AVG(capacity) FROM stadiums;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "804": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 804,
    "query": "How many states are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM states;"
      ],
      "observations": [
        "Error executing query: Table 'voter_1.states' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "805": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 805,
    "query": "What are the countries that have greater surface area than any country in Europe?",
    "turn_history": {
      "actions": [
        "SELECT Name FROM world WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM world WHERE Continent = 'Europe')"
      ],
      "observations": [
        "Error executing query: Table 'world_1.world' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "806": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 806,
    "query": "Show names for all stadiums except for stadiums having a concert in year 2014.",
    "turn_history": {
      "actions": [
        "SELECT name FROM stadiums WHERE id NOT IN (SELECT stadium_id FROM concerts WHERE year = 2014);"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "807": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 807,
    "query": "what are the different names of the singers that have sales more than 300000?",
    "turn_history": {
      "actions": [
        "SELECT name FROM singers WHERE sales > 300000;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "808": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 808,
    "query": "How is the math course described?",
    "turn_history": {
      "actions": [
        "SELECT description FROM courses WHERE course_name = 'math';"
      ],
      "observations": [
        "Error executing query: Unknown column 'description' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "809": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 809,
    "query": "Which languages are spoken by only one country in republic governments?",
    "turn_history": {
      "actions": [
        "SELECT language FROM countrylanguage WHERE countrycode IN (   SELECT code FROM country WHERE governmentform LIKE '%Republic%' ) GROUP BY language HAVING COUNT(*) = 1;"
      ],
      "observations": [
        "[('Ambo',), ('Luchazi',), ('Luimbe-nganguela',), ('Luvale',), ('Mbundu',), ('Nyaneka-nkhumbi',), ('Ovimbundu',), ('Lezgian',), ('Kirundi',), ('Adja',), ('Aizo',), ('Bariba',), ('Fon',), ('Somba',), ('Busansi',), ('Dagara',), ('Dyula',), ('Chakma',), ('Garo',), ('Khasi',), ('Marma',), ('Santhali',), ('Tripuri',), ('Khoekhoe',), ('Banda',), ('Gbaya',), ('Mandjia',), ('Mbum',), ('Ngbaka',), ('Araucan',), ('Rapa nui',), ('Dong',), ('Hui',), ('Mant\u0161u',), ('Puyi',), ('Tibetan',), ('Tujia',), ('Uighur',), ('Yi',), ('Zhuang',), ('Gur',), ('[South]Mande',), ('Bamileke-bamum',), ('Duala',), ('Maka',), ('Mandara',), ('Masana',), ('Tikar',), ('Boa',), ('Luba',), ('Mongo',), ('Ngala and Bangi',), ('Rundi',), ('Mboshi',), ('Punu',), ('Sango',), ('Comorian',), ('Comorian-Arabic',), ('Comorian-French',), ('Comorian-madagassi',), ('Comorian-Swahili',), ('Moravian',), ('Silesiana',), ('Southern Slavic Languages',), ('Berberi',), ('Sinaberberi',), ('Bilin',), ('Hadareb',), ('Saho',), ('Tigre',), ('Amhara',), ('Gurage',), ('Oromo',), ('Sidamo',), ('Walaita',), ('Saame',), ('Swedish',), ('Fijian',), ('Kosrean',), ('Mortlock',), ('Pohnpei',), ('Trukese',), ('Wolea',), ('Yap',), ('Mpongwe',), ('Punu-sira-nzebi',), ('Abhyasi',), ('Georgiana',), ('Osseetti',), ('Ga-adangme',), ('Kissi',), ('Susu',), ('Balante',), ('Mandyako',), ('Bubi',), ('Cakchiquel',), ('Kekch\u00ed',), ('Mam',), ('Quich\u00e9',), ('Garifuna',), ('Haiti Creole',), ('Bali',), ('Banja',), ('Batakki',), ('Bugi',), ('Javanese',), ('Madura',), ('Minangkabau',), ('Sunda',), ('Asami',), ('Gujarati',), ('Kannada',), ('Malajalam',), ('Orija',), ('Telugu',), ('Irish',), ('Bakhtyari',), ('Gilaki',), ('Luri',), ('Mazandarani',), ('Assyrian',), ('Icelandic',), ('Hebrew',), ('Friuli',), ('Sardinian',), ('Gusii',), ('Kalenjin',), ('Kamba',), ('Kikuyu',), ('Luhya',), ('Luo',), ('Masai',), ('Meru',), ('Nyika',), ('Turkana',), ('Kirgiz',), ('Lao',), ('Lao-Soung',), ('Mon-khmer',), ('Bassa',), ('Gio',), ('Grebo',), ('Mano',), ('Mixed Languages',), ('Singali',), ('Latvian',), ('Gagauzi',), ('Malagasy',), ('Dhivehi',), ('Mixtec',), ('N\u00e1huatl',), ('Otom\u00ed',), ('Yucatec',), ('Zapotec',), ('Marshallese',), ('Bambara',), ('Senufo and Minianka',), ('Songhai',), ('Maltese',), ('Burmese',), ('Chin',), ('Kachin',), ('Karen',), ('Kayah',), ('Mon',), ('Rakhine',), ('Shan',), ('Bajad',), ('Buryat',), ('Dariganga',), ('Dorbet',), ('Chuabo',), ('Makua',), ('Marendje',), ('Ronga',), ('Sena',), ('Tswa',), ('Hassaniya',), ('Tukulor',), ('Zenaga',), ('Bhojpuri',), ('Chichewa',), ('Ngoni',), ('Yao',), ('Caprivi',), ('Herero',), ('Kavango',), ('Nama',), ('Ovambo',), ('Songhai-zerma',), ('Bura',), ('Edo',), ('Ibibio',), ('Ibo',), ('Ijo',), ('Tiv',), ('Sumo',), ('Nauru',), ('Brahui',), ('Hindko',), ('Pashto',), ('Saraiki',), ('Sindhi',), ('Cuna',), ('Embera',), ('Guaym\u00ed',), ('Bicol',), ('Cebuano',), ('Hiligaynon',), ('Ilocano',), ('Maguindanao',), ('Maranao',), ('Pampango',), ('Pangasinan',), ('Pilipino',), ('Waray-waray',), ('Palau',), ('Philippene Languages',), ('Avarian',), ('Bashkir',), ('Chechen',), ('Chuvash',), ('Mari',), ('Mordva',), ('Udmur',), ('Bari',), ('Beja',), ('Chilluk',), ('Dinka',), ('Fur',), ('Lotuko',), ('Nubian Languages',), ('Nuer',), ('Serer',), ('Bullom-sherbro',), ('Kono-vai',), ('Kuranko',), ('Limba',), ('Mende',), ('Temne',), ('Nahua',), ('Sranantonga',), ('Czech and Moravian',), ('Ukrainian and Russian',), ('Seselwa',), ('Gorane',), ('Hadjarai',), ('Kanem-bornu',), ('Mayo-kebbi',), ('Ouaddai',), ('Tandjile',), ('Ane',), ('Kaby\u00e9',), ('Kotokoli',), ('Moba',), ('Naudemba',), ('Watyi',), ('Arabic-French',), ('Arabic-French-English',), ('Ami',), ('Atayal',), ('Hakka',), ('Mandarin Chinese',), ('Min',), ('Paiwan',), ('Chaga and Pare',), ('Gogo',), ('Ha',), ('Haya',), ('Hehet',), ('Luguru',), ('Makonde',), ('Nyakusa',), ('Nyamwesi',), ('Shambala',), ('Acholi',), ('Ganda',), ('Gisu',), ('Kiga',), ('Lango',), ('Lugbara',), ('Nkole',), ('Soga',), ('Teso',), ('Tagalog',), ('Karakalpak',), ('Goajiro',), ('Warrau',), ('Khmer',), ('Man',), ('Muong',), ('Nung',), ('Tho',), ('Bislama',), ('Soqutri',), ('Northsotho',), ('Southsotho',), ('Swazi',), ('Venda',), ('Xhosa',), ('Zulu',), ('Bemba',), ('Chewa',), ('Lozi',), ('Nsenga',), ('Tongan',)]"
      ],
      "rewards": [
        0.9457364341085271
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.9457364341085271,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "810": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 810,
    "query": "For each continent, list its id, name, and how many countries it has?",
    "turn_history": {
      "actions": [
        "SELECT continent_id, continent_name, COUNT(country_id) AS num_countries FROM countries GROUP BY continent_id, continent_name;"
      ],
      "observations": [
        "Error executing query: Unknown column 'continent_id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "811": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 811,
    "query": "What is the document id with least number of paragraphs?",
    "turn_history": {
      "actions": [
        "SELECT document_id FROM document_table ORDER BY num_paragraphs ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.document_table' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "812": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 812,
    "query": "What are the names and grades for each high schooler?",
    "turn_history": {
      "actions": [
        "SELECT name, grade FROM highschooler;"
      ],
      "observations": [
        "[('John', 12), ('Haley', 10), ('Alexis', 11), ('Jordan', 12), ('Austin', 11), ('Tiffany', 9), ('Kris', 10), ('Jessica', 11), ('Jordan', 9), ('Brittany', 10), ('Logan', 12), ('Gabriel', 9), ('Cassandra', 9), ('Andrew', 10), ('Gabriel', 11), ('Kyle', 12)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "813": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 813,
    "query": "How many car models are produced in the usa?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM car_models WHERE country = 'USA';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.car_models' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "814": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 814,
    "query": "What are the names of the contestants whose names are not 'Jessie Alloway'",
    "turn_history": {
      "actions": [
        "SELECT name FROM contestants WHERE name <> 'Jessie Alloway';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "815": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 815,
    "query": "What is the record company used by the greatest number of orchestras?",
    "turn_history": {
      "actions": [
        "SELECT record_company, COUNT(*) as num_orchestras FROM orchestras GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "816": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 816,
    "query": "What is the last transcript release date?",
    "turn_history": {
      "actions": [
        "SELECT MAX(release_date) FROM transcripts;"
      ],
      "observations": [
        "Error executing query: Unknown column 'release_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "817": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 817,
    "query": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?",
    "turn_history": {
      "actions": [
        "SELECT SUM(population), AVG(area) FROM countries WHERE continent = 'North America' AND area > 3000;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "818": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 818,
    "query": "Give the number of Jetblue Airways flights.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways';"
      ],
      "observations": [
        "[(0,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "819": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 819,
    "query": "Return the number of likes that the high schooler named Kyle has.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM Likes WHERE ID = (SELECT ID FROM Highschooler WHERE name = 'Kyle');"
      ],
      "observations": [
        "Error executing query: Unknown column 'ID' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "820": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 820,
    "query": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT Package_Options FROM TV_Channels WHERE Series_Name = 'Sky Radio';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "821": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 821,
    "query": "What are the cost and treatment type description of each treatment?",
    "turn_history": {
      "actions": [
        "SELECT cost, treatment_type_description FROM treatment;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.treatment' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "822": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 822,
    "query": "Which first names are used for professionals or owners but are not used as dog names?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (   SELECT first_name   FROM dogs ) AND profession IS NOT NULL;"
      ],
      "observations": [
        "Error executing query: Unknown column 'profession' in 'IN/ALL/ANY subquery'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "823": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 823,
    "query": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
    "turn_history": {
      "actions": [
        "SELECT singers.name, singers.country  FROM singers  JOIN songs ON singers.id = songs.singer_id  WHERE songs.title LIKE '%Hey%';"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "824": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 824,
    "query": "find the names of loser and winner who played in the match with greatest number of minutes.",
    "turn_history": {
      "actions": [
        "SELECT loser.name, winner.name FROM match JOIN team AS loser ON match.loser_id = loser.id JOIN team AS winner ON match.winner_id = winner.id WHERE match.minutes = (SELECT MAX(minutes) FROM match)"
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'match JOIN team AS loser ON match.loser_id = loser.id JOIN team AS winner ON mat' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "825": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 825,
    "query": "Which model has the most version(make) of cars?",
    "turn_history": {
      "actions": [
        "SELECT model FROM cars GROUP BY model ORDER BY COUNT(make) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "826": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 826,
    "query": "How many countries are listed?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countries;"
      ],
      "observations": [
        "[(15,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "827": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 827,
    "query": "For each stadium, how many concerts play there?",
    "turn_history": {
      "actions": [
        "SELECT stadiums.stadium_name, COUNT(concerts.concert_id) AS num_concerts FROM stadiums LEFT JOIN concerts ON stadiums.stadium_id = concerts.stadium_id GROUP BY stadiums.stadium_id;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stadiums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "828": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 828,
    "query": "Show the names of singers that have more than one song.",
    "turn_history": {
      "actions": [
        "SELECT singer_name FROM songs GROUP BY singer_name HAVING COUNT(*) > 1;"
      ],
      "observations": [
        "Error executing query: Table 'singer.songs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "829": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 829,
    "query": "How many cars have a larger accelerate than the car with the largest horsepower?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE accelerate > (SELECT MAX(horsepower) FROM cars);"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "830": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 830,
    "query": "How many professionals did not operate any treatment on dogs?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT professional_id) FROM appointments WHERE animal_type = 'dog' AND treatment_type IS NULL;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.appointments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "831": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 831,
    "query": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
    "turn_history": {
      "actions": [
        "SELECT document_id FROM paragraphs WHERE paragraph_text LIKE '%Brazil%' AND paragraph_text LIKE '%Ireland%';"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "832": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 832,
    "query": "List the name of the conductor with the most years of work.",
    "turn_history": {
      "actions": [
        "SELECT conductor_name FROM conductor WHERE years_of_work = (SELECT MAX(years_of_work) FROM conductor)"
      ],
      "observations": [
        "Error executing query: Unknown column 'conductor_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "833": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 833,
    "query": "What is the program id and the summary of the degree that has the most students enrolled?",
    "turn_history": {
      "actions": [
        "SELECT program_id, summary FROM degrees WHERE num_students = (SELECT MAX(num_students) FROM degrees);"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.degrees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "834": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 834,
    "query": "Find the name of tourney that has more than 10 matches.",
    "turn_history": {
      "actions": [
        "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "835": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 835,
    "query": "List all cartoon directed by \"Ben Jones\".",
    "turn_history": {
      "actions": [
        "SELECT * FROM cartoons WHERE director = 'Ben Jones';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "836": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 836,
    "query": "How many singers are from each country?",
    "turn_history": {
      "actions": [
        "SELECT country, COUNT(*) AS num_singers FROM singers GROUP BY country;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "837": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 837,
    "query": "What are the population, name and leader of the country with the largest area?",
    "turn_history": {
      "actions": [
        "SELECT population, name, leader FROM countries ORDER BY area DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "838": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 838,
    "query": "What are the number of votes from state 'NY' or 'CA'?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM table_name WHERE state IN ('NY', 'CA');"
      ],
      "observations": [
        "Error executing query: Table 'voter_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "839": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 839,
    "query": "What is the first name of every student who has a dog but does not have a cat?",
    "turn_history": {
      "actions": [
        "SELECT first_name FROM students WHERE has_dog = 1 AND has_cat = 0;"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "840": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 840,
    "query": "Find the average weight for each pet type.",
    "turn_history": {
      "actions": [
        "SELECT type, AVG(weight) FROM pets GROUP BY type;"
      ],
      "observations": [
        "Error executing query: Unknown column 'type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "841": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 841,
    "query": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
    "turn_history": {
      "actions": [
        "SELECT TV_Channel, Series_Name FROM TV_Series WHERE Episode_Name = 'A Love of a Lifetime';"
      ],
      "observations": [
        "Error executing query: Unknown column 'TV_Channel' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "842": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 842,
    "query": "Show the name of the conductor that has conducted the most number of orchestras.",
    "turn_history": {
      "actions": [
        "SELECT conductor_name FROM orchestras GROUP BY conductor_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "843": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 843,
    "query": "Which airline has abbreviation 'UAL'?",
    "turn_history": {
      "actions": [
        "SELECT * FROM airlines WHERE IATA = 'UAL';"
      ],
      "observations": [
        "Error executing query: Unknown column 'IATA' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "844": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 844,
    "query": "How many flights depart from 'APG'?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE departure_airport = 'APG';"
      ],
      "observations": [
        "Error executing query: Unknown column 'departure_airport' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "845": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 845,
    "query": "What is the count of singers?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM singers;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "846": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 846,
    "query": "What are the titles of the cartoons sorted alphabetically?",
    "turn_history": {
      "actions": [
        "SELECT title FROM cartoons ORDER BY title ASC;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartoons' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "847": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 847,
    "query": "For students who have pets , how many pets does each student have ? list their ids instead of names .",
    "turn_history": {
      "actions": [
        "SELECT student_id, COUNT(*) AS num_pets FROM student_pet GROUP BY student_id;"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.student_pet' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "848": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 848,
    "query": "List the number of different series names and contents in the TV Channel table.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT content) FROM TV_Channel;"
      ],
      "observations": [
        "[(15, 1)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "849": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 849,
    "query": "Which shops' number products is above the average? Give me the shop names.",
    "turn_history": {
      "actions": [
        "SELECT shop_name FROM products GROUP BY shop_name HAVING COUNT(*) > (SELECT AVG(product_count) FROM (SELECT COUNT(*) as product_count FROM products GROUP BY shop_name) as counts)"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.products' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "850": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 850,
    "query": "What is the language spoken by the largest percentage of people in each country?",
    "turn_history": {
      "actions": [
        "SELECT country, language FROM (   SELECT country, language,           ROW_NUMBER() OVER (PARTITION BY country ORDER BY percentage DESC) AS rn   FROM country_language ) AS sub WHERE rn = 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.country_language' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "851": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 851,
    "query": "What is the full name of each car maker, along with its id and how many models it produces?",
    "turn_history": {
      "actions": [
        "SELECT car_maker.id, car_maker.name, COUNT(car_model.id) AS num_models FROM car_maker JOIN car_model ON car_maker.id = car_model.car_maker_id GROUP BY car_maker.id, car_maker.name;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.car_maker' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "852": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 852,
    "query": "Which owner owns the most dogs? List the owner id, first name and last name.",
    "turn_history": {
      "actions": [
        "SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1;"
      ],
      "observations": [
        "[(14, 'Rachelle', 'Funk')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "853": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 853,
    "query": "What are airlines that have some flight departing from airport 'AHD'?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT airline_name FROM flights WHERE departure_airport = 'AHD';"
      ],
      "observations": [
        "Error executing query: Unknown column 'airline_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "854": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 854,
    "query": "What are all the song names by singers who are older than average?",
    "turn_history": {
      "actions": [
        "SELECT song_name  FROM songs  WHERE singer_age > (SELECT AVG(singer_age) FROM songs);"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.songs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "855": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 855,
    "query": "How many official languages does Afghanistan have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM countrylanguage WHERE CountryCode='AFG' AND IsOfficial='T';"
      ],
      "observations": [
        "[(2,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "856": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 856,
    "query": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
    "turn_history": {
      "actions": [
        "SELECT pixel_aspect_ratio, country_of_origin FROM TV_channels WHERE language != 'English'"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "857": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 857,
    "query": "What is average life expectancy in the countries where English is not the official language?",
    "turn_history": {
      "actions": [
        "SELECT AVG(life_expectancy) FROM countries WHERE official_language != 'English';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "858": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 858,
    "query": "List singer names and number of concerts for each singer.",
    "turn_history": {
      "actions": [
        "SELECT singers.name, COUNT(concerts.id) AS num_concerts FROM singers LEFT JOIN concerts ON singers.id = concerts.singer_id GROUP BY singers.id;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "859": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 859,
    "query": "What are the names and descriptions of all the sections?",
    "turn_history": {
      "actions": [
        "SELECT name, description FROM sections;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "860": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 860,
    "query": "Return the names of poker players sorted by their earnings descending.",
    "turn_history": {
      "actions": [
        "SELECT name FROM poker_players ORDER BY earnings DESC;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "861": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 861,
    "query": "What is the content of the series Sky Radio?",
    "turn_history": {
      "actions": [
        "SELECT content FROM series WHERE name = 'Sky Radio';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.series' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "862": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 862,
    "query": "What is the official language spoken in the country whose head of state is Beatrix?",
    "turn_history": {
      "actions": [
        "SELECT Language FROM CountryLanguage WHERE CountryCode = (SELECT Code FROM Country WHERE HeadOfState = 'Beatrix' LIMIT 1) AND IsOfficial = 'T'"
      ],
      "observations": [
        "[('Dutch',)]"
      ],
      "rewards": [
        0.25
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.25,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "863": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 863,
    "query": "What is the document id with 1 to 2 paragraphs?",
    "turn_history": {
      "actions": [
        "SELECT document_id FROM document_table WHERE paragraph_count BETWEEN 1 AND 2;"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.document_table' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "864": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 864,
    "query": "What are the names of poker players whose earnings is higher than 300000?",
    "turn_history": {
      "actions": [
        "SELECT name FROM poker_players WHERE earnings > 300000;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "865": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 865,
    "query": "What are the names of properties that are either houses or apartments with more than 1 room?",
    "turn_history": {
      "actions": [
        "SELECT name FROM properties WHERE (type = 'house' OR type = 'apartment') AND rooms > 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "866": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 866,
    "query": "What are the record companies of orchestras in descending order of years in which they were founded?",
    "turn_history": {
      "actions": [
        "SELECT record_company, MAX(year_founded) AS latest_year_founded FROM orchestras GROUP BY record_company ORDER BY latest_year_founded DESC;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "867": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 867,
    "query": "How many different loser names are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT loser_name) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "868": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 868,
    "query": "What is the average rank for winners in all matches?",
    "turn_history": {
      "actions": [
        "SELECT AVG(rank) FROM matches WHERE winner IS NOT NULL;"
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') FROM matches WHERE winner IS NOT NULL' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "869": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 869,
    "query": "What are the major record formats of orchestras, sorted by their frequency?",
    "turn_history": {
      "actions": [
        "SELECT record_format, COUNT(*) AS frequency FROM orchestras GROUP BY record_format ORDER BY frequency DESC;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.orchestras' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "870": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 870,
    "query": "Find the number of owners who do not own any dogs at this moment.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs);"
      ],
      "observations": [
        "[(3,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "871": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 871,
    "query": "Give the name of the nation that uses the greatest amount of languages.",
    "turn_history": {
      "actions": [
        "SELECT Name FROM Country ORDER BY Languages DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'Languages' in 'order clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "872": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 872,
    "query": "What are the country codes for countries that do not speak English?",
    "turn_history": {
      "actions": [
        "SELECT code FROM countries WHERE language <> 'English';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "873": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 873,
    "query": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT maker, car_id FROM cars WHERE maker IN (     SELECT maker     FROM cars     GROUP BY maker     HAVING COUNT(DISTINCT model) >= 2 AND COUNT(*) > 3 )"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "874": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 874,
    "query": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
    "turn_history": {
      "actions": [
        "SELECT series_name, country  FROM TV_channels  WHERE cartoon_director IN ('Ben Jones', 'Michael Chang');"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "875": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 875,
    "query": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
    "turn_history": {
      "actions": [
        "SELECT district FROM stores WHERE products < 3000 AND district IN (SELECT district FROM stores WHERE products > 10000);"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.stores' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "876": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 876,
    "query": "What are the countries that are not playing cartoons written by Todd Casey?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT Country FROM Shows WHERE Title NOT IN (   SELECT Title   FROM Shows   WHERE Writer = 'Todd Casey' )"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.shows' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "877": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 877,
    "query": "Find the number of professionals who have not treated any dogs.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM professionals WHERE id NOT IN (SELECT DISTINCT professional_id FROM treatments WHERE animal_type = 'dog');"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'IN/ALL/ANY subquery'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "878": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 878,
    "query": "How many people live in Gelderland district?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM population WHERE district = 'Gelderland';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.population' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "879": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 879,
    "query": "How many dogs have an age below the average?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs);"
      ],
      "observations": [
        "[(9,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "880": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 880,
    "query": "What is the name of the country with the most car makers?",
    "turn_history": {
      "actions": [
        "SELECT country_name FROM car_makers GROUP BY country_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'country_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "881": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 881,
    "query": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
    "turn_history": {
      "actions": [
        "SELECT * FROM models WHERE weight < 3500 AND NOT manufacturer = 'Ford Motor Company';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.models' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "882": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 882,
    "query": "Return the type code of the template type that the most templates belong to.",
    "turn_history": {
      "actions": [
        "SELECT type_code FROM templates GROUP BY type_code ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'type_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "883": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 883,
    "query": "How many conductors are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM conductors;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "884": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 884,
    "query": "How many templates have template type code CV?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV';"
      ],
      "observations": [
        "[(2,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "885": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 885,
    "query": "What are the names of the teachers and how many courses do they teach?",
    "turn_history": {
      "actions": [
        "SELECT teachers.name, COUNT(courses.id) AS num_courses FROM teachers INNER JOIN courses ON teachers.id = courses.teacher_id GROUP BY teachers.id;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "886": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 886,
    "query": "What are the Asian countries which have a population larger than that of any country in Africa?",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM countries WHERE continent = 'Africa')"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "887": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 887,
    "query": "How many concerts occurred in 2014 or 2015?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM concerts WHERE year IN (2014, 2015);"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "888": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 888,
    "query": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
    "turn_history": {
      "actions": [
        "SELECT first_name, last_name FROM professionals WHERE id IN (   SELECT professional_id   FROM treatments   WHERE cost < (     SELECT AVG(cost)     FROM treatments   ) );"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'IN/ALL/ANY subquery'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "889": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 889,
    "query": "List the name, date and result of each battle.",
    "turn_history": {
      "actions": [
        "SELECT name, date, result FROM battle;"
      ],
      "observations": [
        "[('Battle of Adrianople', '14 April 1205', 'Bulgarian victory'), ('Battle of Serres', 'June 1205', 'Bulgarian victory'), ('Battle of Rusion', '31 January 1206', 'Bulgarian victory'), ('Battle of Rodosto', 'February 1206', 'Bulgarian victory'), ('Battle of Messinopolis', '4 September 1207', 'Bulgarian victory'), ('Battle of Boruy', 'June 1205', 'Bulgarian victory'), ('Battle of Philippopolis', '31 June 1208', 'Latin victory'), ('Siege of Constantinople', '1235', 'Two Year Truce')]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "890": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 890,
    "query": "Which African countries have a smaller population than that of any country in Asia?",
    "turn_history": {
      "actions": [
        "SELECT * FROM countries WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM countries WHERE continent = 'Asia')"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "891": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 891,
    "query": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
    "turn_history": {
      "actions": [
        "SELECT series_name, country FROM tv_channel JOIN program ON tv_channel.channel_id = program.channel_id JOIN series ON program.series_id = series.series_id JOIN director ON program.program_id = director.program_id WHERE director.director_name IN ('Ben Jones', 'Michael Chang') AND series.genre = 'Cartoon';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.program' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "892": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 892,
    "query": "Find the name and rank of the 3 youngest winners across all matches.",
    "turn_history": {
      "actions": [
        "SELECT name, rank FROM winners ORDER BY age DESC LIMIT 3;"
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM winners ORDER BY age DESC LIMIT 3' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "893": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 893,
    "query": "Find the cities that have more than one employee under age 30.",
    "turn_history": {
      "actions": [
        "SELECT city FROM employees WHERE age < 30 GROUP BY city HAVING COUNT(*) > 1;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "894": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 894,
    "query": "Find the average number of staff working for the museums that were open before 2009.",
    "turn_history": {
      "actions": [
        "SELECT AVG(num_staff) FROM museums WHERE year_opened < 2009;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.museums' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "895": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 895,
    "query": "How many different degree names are offered?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT degree_name) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "896": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 896,
    "query": "Count the number of matches.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM matches;"
      ],
      "observations": [
        "[(0,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "897": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 897,
    "query": "Which shops run with no employees? Find the shop names",
    "turn_history": {
      "actions": [
        "SELECT shop_name FROM shops WHERE NOT EXISTS (SELECT * FROM employees WHERE employees.shop_id = shops.shop_id);"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "898": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 898,
    "query": "find the number of players for each country.",
    "turn_history": {
      "actions": [
        "SELECT country, COUNT(player_id) AS num_players FROM players GROUP BY country;"
      ],
      "observations": [
        "Error executing query: Unknown column 'country' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "899": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 899,
    "query": "For each shop, return the number of employees working there and the name of the shop.",
    "turn_history": {
      "actions": [
        "SELECT shop.name, COUNT(employee.id) AS num_employees FROM shop LEFT JOIN employee ON shop.id = employee.shop_id GROUP BY shop.id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'employee.id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "900": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 900,
    "query": "Give the names of nations that speak both English and French.",
    "turn_history": {
      "actions": [
        "SELECT name FROM nations WHERE language IN ('English', 'French') GROUP BY name HAVING COUNT(DISTINCT language) = 2;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.nations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "901": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 901,
    "query": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
    "turn_history": {
      "actions": [
        "SELECT episode_name, rating FROM TV_series ORDER BY rating DESC LIMIT 3;"
      ],
      "observations": [
        "Error executing query: Unknown column 'episode_name' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "902": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 902,
    "query": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
    "turn_history": {
      "actions": [
        "SELECT continent, COUNT(country) AS num_countries FROM countries GROUP BY continent;"
      ],
      "observations": [
        "Error executing query: Unknown column 'country' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "903": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 903,
    "query": "How much surface area do the countires in the Carribean cover together?",
    "turn_history": {
      "actions": [
        "SELECT SUM(surface_area) FROM countries WHERE region = 'Caribbean';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "904": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 904,
    "query": "What are the names , themes , and number of singers for every concert ?",
    "turn_history": {
      "actions": [
        "SELECT c.name, c.theme, COUNT(s.id) AS number_of_singers FROM concerts c LEFT JOIN singers s ON c.id = s.concert_id GROUP BY c.id;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "905": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 905,
    "query": "What is maximum and minimum death toll caused each time?",
    "turn_history": {
      "actions": [
        "SELECT MAX(death_toll), MIN(death_toll) FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "906": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 906,
    "query": "What is the episode for the TV series named \"Sky Radio\"?",
    "turn_history": {
      "actions": [
        "SELECT episode FROM TV_series WHERE name = 'Sky Radio';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "907": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 907,
    "query": "What are the names of nations speak both English and French?",
    "turn_history": {
      "actions": [
        "SELECT name FROM nations WHERE english_speaking = 1 AND french_speaking = 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.nations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "908": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 908,
    "query": "What are the notes of the death events which has substring 'East'?",
    "turn_history": {
      "actions": [
        "SELECT notes FROM death_events WHERE notes LIKE '%East%';"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.death_events' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "909": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 909,
    "query": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
    "turn_history": {
      "actions": [
        "SELECT makeid, makename FROM cars WHERE horsepower > (SELECT MIN(horsepower) FROM cars) AND cylinders <= 3;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "910": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 910,
    "query": "How many friends does each student have?",
    "turn_history": {
      "actions": [
        "SELECT student_name, COUNT(friend_name) AS num_friends FROM student_friends GROUP BY student_name;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.student_friends' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "911": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 911,
    "query": "What is the average expected life expectancy for countries in the region of Central Africa?",
    "turn_history": {
      "actions": [
        "SELECT AVG(`LifeExpectancy`) FROM `countries` WHERE `Region` = 'Central Africa';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "912": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 912,
    "query": "Count the number of high schoolers.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM students WHERE grade = 'high school';"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "913": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 913,
    "query": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
    "turn_history": {
      "actions": [
        "SELECT name FROM students WHERE grade > 5 AND (SELECT COUNT(*) FROM friends WHERE friends.student_id = students.id) >= 2;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "914": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 914,
    "query": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
    "turn_history": {
      "actions": [
        "SELECT id, last_name, cell_phone FROM professionals WHERE state = 'Indiana' OR treatments_done > 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "915": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 915,
    "query": "What are the different template type codes?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT template_type_code FROM templates;"
      ],
      "observations": [
        "[('AD',), ('BK',), ('CV',), ('PP',), ('PPT',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "916": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 916,
    "query": "What is name of the country that speaks the largest number of languages?",
    "turn_history": {
      "actions": [
        "SELECT country_name FROM country_language GROUP BY country_code ORDER BY COUNT(language) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.country_language' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "917": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 917,
    "query": "What is the first name and country code of the oldest player?",
    "turn_history": {
      "actions": [
        "SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "918": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 918,
    "query": "List the earnings of poker players in descending order.",
    "turn_history": {
      "actions": [
        "SELECT earnings FROM poker_players ORDER BY earnings DESC;"
      ],
      "observations": [
        "Error executing query: Unknown column 'earnings' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "919": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 919,
    "query": "Who is the first student to register? List the first name, middle name and last name.",
    "turn_history": {
      "actions": [
        "SELECT first_name, middle_name, last_name FROM students ORDER BY registration_date ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'registration_date' in 'order clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "920": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 920,
    "query": "What are the locations and names of all stations with capacity between 5000 and 10000?",
    "turn_history": {
      "actions": [
        "SELECT name, location FROM stations WHERE capacity BETWEEN 5000 AND 10000;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.stations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "921": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 921,
    "query": "What are flight numbers of flights arriving at Airport \"APG\"?",
    "turn_history": {
      "actions": [
        "SELECT flight_number FROM flights WHERE arrival_airport = 'APG';"
      ],
      "observations": [
        "Error executing query: Unknown column 'flight_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "922": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 922,
    "query": "How many professionals have performed any treatment to dogs?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT professional_id) FROM treatments WHERE animal_type = 'dog';"
      ],
      "observations": [
        "Error executing query: Unknown column 'animal_type' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "923": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 923,
    "query": "List the names of people that are not poker players.",
    "turn_history": {
      "actions": [
        "SELECT name FROM people WHERE NOT game = 'poker';"
      ],
      "observations": [
        "Error executing query: Unknown column 'game' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "924": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 924,
    "query": "How many car makers are there in france?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT car_maker) FROM cars WHERE country = 'France';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "925": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 925,
    "query": "What are the ids and names of each document, as well as the number of paragraphs in each?",
    "turn_history": {
      "actions": [
        "SELECT id, name, COUNT(paragraphs) AS num_paragraphs FROM documents GROUP BY id, name;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "926": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 926,
    "query": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
    "turn_history": {
      "actions": [
        "SELECT continent, SUM(population), AVG(life_expectancy) FROM countries GROUP BY continent HAVING AVG(life_expectancy) < 72;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "927": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 927,
    "query": "Which Asian countries have a population that is larger than any country in Africa?",
    "turn_history": {
      "actions": [
        "SELECT * FROM countries WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM countries WHERE continent = 'Africa')"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "928": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 928,
    "query": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
    "turn_history": {
      "actions": [
        "SELECT id, role, email FROM professionals WHERE id NOT IN (   SELECT DISTINCT professional_id   FROM treatments   WHERE animal_type = 'dog' );"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "929": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 929,
    "query": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
    "turn_history": {
      "actions": [
        "SELECT name FROM teachers WHERE hometown <> 'Little Lever Urban District';"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "930": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 930,
    "query": "List the name and tonnage ordered by in descending alphaetical order for the names.",
    "turn_history": {
      "actions": [
        "SELECT name, tonnage FROM table_name ORDER BY name DESC;"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "931": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 931,
    "query": "What are  the different countries with singers above age 20?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT country FROM singers WHERE age > 20;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "932": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 932,
    "query": "Find the average and maximum age for each type of pet.",
    "turn_history": {
      "actions": [
        "SELECT type, AVG(age), MAX(age) FROM pets GROUP BY type;"
      ],
      "observations": [
        "Error executing query: Unknown column 'type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "933": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 933,
    "query": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
    "turn_history": {
      "actions": [
        "SELECT name, result FROM battles WHERE bulgarian_commander != 'Boril';"
      ],
      "observations": [
        "Error executing query: Table 'battle_death.battles' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "934": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 934,
    "query": "Show ids for all templates not used by any document.",
    "turn_history": {
      "actions": [
        "SELECT id FROM templates WHERE id NOT IN (SELECT template_id FROM documents);"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "935": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 935,
    "query": "Which grades have 4 or more high schoolers?",
    "turn_history": {
      "actions": [
        "SELECT grade FROM table_name WHERE students >= 4 AND school_type = 'high school';"
      ],
      "observations": [
        "Error executing query: Table 'network_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "936": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 936,
    "query": "What are the names of the nations with the 3 lowest populations?",
    "turn_history": {
      "actions": [
        "SELECT name FROM nations ORDER BY population ASC LIMIT 3;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.nations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "937": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 937,
    "query": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
    "turn_history": {
      "actions": [
        "SELECT winner_name  FROM tennis_tournaments  WHERE tournament_name = 'Australian Open'  ORDER BY rank_points DESC  LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'wta_1.tennis_tournaments' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "938": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 938,
    "query": "Show the date and id of the transcript with at least 2 course results.",
    "turn_history": {
      "actions": [
        "SELECT date, id FROM transcript WHERE course_results >= 2;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.transcript' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "939": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 939,
    "query": "How many TV Channel using language English?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM channels WHERE language = 'English';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "940": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 940,
    "query": "What are the paragraph texts for the document with the name 'Customer reviews'?",
    "turn_history": {
      "actions": [
        "SELECT paragraph_text FROM document WHERE name = 'Customer reviews';"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.document' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "941": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 941,
    "query": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
    "turn_history": {
      "actions": [
        "SELECT name FROM countries WHERE continent = 'Europe' AND population = 80000;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "942": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 942,
    "query": "What are the names and ranks of the three youngest winners across all matches?",
    "turn_history": {
      "actions": [
        "SELECT name, rank FROM winners ORDER BY age LIMIT 3;"
      ],
      "observations": [
        "Error executing query: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM winners ORDER BY age LIMIT 3' at line 1"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "943": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 943,
    "query": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
    "turn_history": {
      "actions": [
        "SELECT title FROM cartools WHERE tv_channel = 'Sky Radio' AND series_name = 'Sky Radio';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.cartools' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "944": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 944,
    "query": "What are the names of the winner and loser who played in the longest match?",
    "turn_history": {
      "actions": [
        "SELECT winner_name, loser_name FROM matches WHERE duration = (SELECT MAX(duration) FROM matches);"
      ],
      "observations": [
        "Error executing query: Unknown column 'duration' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "945": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 945,
    "query": "Show the hometowns shared by at least two teachers.",
    "turn_history": {
      "actions": [
        "SELECT hometown FROM teachers GROUP BY hometown HAVING COUNT(*) > 1;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "946": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 946,
    "query": "Tell me the age of the oldest dog.",
    "turn_history": {
      "actions": [
        "SELECT MAX(age) FROM dogs;"
      ],
      "observations": [
        "[('9',)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "947": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 947,
    "query": "Show different citizenship of singers and the number of singers of each citizenship.",
    "turn_history": {
      "actions": [
        "SELECT citizenship, COUNT(*) as num_singers FROM singers GROUP BY citizenship;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "948": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 948,
    "query": "Which city and country is the Alton airport at?",
    "turn_history": {
      "actions": [
        "SELECT city, country FROM airports WHERE name = 'Alton';"
      ],
      "observations": [
        "Error executing query: Unknown column 'name' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "949": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 949,
    "query": "Return the name of the high school student with the most friends.",
    "turn_history": {
      "actions": [
        "SELECT name FROM students WHERE high_school = 'high_school_name' ORDER BY friends DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "950": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 950,
    "query": "How many flights depart from City Aberdeen?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE departure_city = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'departure_city' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "951": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 951,
    "query": "Return the ids corresponding to templates with the description 'Presentation'.",
    "turn_history": {
      "actions": [
        "SELECT id FROM templates WHERE description = 'Presentation';"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "952": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 952,
    "query": "What are the names of the employees who never received any evaluation?",
    "turn_history": {
      "actions": [
        "SELECT name FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM evaluations);"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "953": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 953,
    "query": "find the id, name and age for visitors who visited some museums more than once.",
    "turn_history": {
      "actions": [
        "SELECT id, name, age FROM visitors WHERE id IN (   SELECT visitor_id   FROM visits   WHERE museum_id IN (     SELECT museum_id     FROM visits     GROUP BY museum_id     HAVING COUNT(DISTINCT visitor_id) > 1   ) );"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visitors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "954": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 954,
    "query": "What are the first names of every student who has a cat or dog as a pet?",
    "turn_history": {
      "actions": [
        "SELECT first_name FROM students WHERE pet IN ('cat', 'dog');"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "955": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 955,
    "query": "What are the names, countries, and ages for every singer in descending order of age?",
    "turn_history": {
      "actions": [
        "SELECT name, country, age FROM singers ORDER BY age DESC;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "956": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 956,
    "query": "Return the ids of templates that have the code PP or PPT.",
    "turn_history": {
      "actions": [
        "SELECT id FROM templates WHERE code IN ('PP', 'PPT');"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "957": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 957,
    "query": "Return the names of conductors that do not have the nationality \"USA\".",
    "turn_history": {
      "actions": [
        "SELECT name FROM conductors WHERE nationality != 'USA';"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "958": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 958,
    "query": "What are the makers and models?",
    "turn_history": {
      "actions": [
        "SELECT maker, model FROM table_name;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "959": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 959,
    "query": "Which model of the car has the minimum horsepower?",
    "turn_history": {
      "actions": [
        "SELECT model FROM cars WHERE horsepower = (SELECT MIN(horsepower) FROM cars);"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "960": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 960,
    "query": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
    "turn_history": {
      "actions": [
        "SELECT * FROM table_name WHERE (car_maker = 'General Motors' OR weight > 3500);"
      ],
      "observations": [
        "Error executing query: Table 'car_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "961": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 961,
    "query": "What are the ids of the students who do not own cats as pets?",
    "turn_history": {
      "actions": [
        "SELECT student_id FROM student_pet WHERE pet_type = 'cat' AND student_id NOT IN (SELECT student_id FROM student_pet WHERE pet_type = 'cat');"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.student_pet' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "962": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 962,
    "query": "How much does each charge type costs? List both charge type and amount.",
    "turn_history": {
      "actions": [
        "SELECT charge_type, amount FROM charges;"
      ],
      "observations": [
        "Error executing query: Unknown column 'amount' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "963": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 963,
    "query": "Show the ID of the high schooler named Kyle.",
    "turn_history": {
      "actions": [
        "SELECT ID FROM Highschooler WHERE name = 'Kyle';"
      ],
      "observations": [
        "[(1934,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "964": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 964,
    "query": "Show the date of the transcript which shows the least number of results, also list the id.",
    "turn_history": {
      "actions": [
        "SELECT id, date FROM transcript WHERE results = (SELECT MIN(results) FROM transcript);"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.transcript' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "965": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 965,
    "query": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
    "turn_history": {
      "actions": [
        "SELECT create_date, state, phone_number FROM votes WHERE contestant_name = 'Tabatha Gehling';"
      ],
      "observations": [
        "Error executing query: Unknown column 'create_date' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "966": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 966,
    "query": "Give the mean life expectancy of countries in which English is not the official language.",
    "turn_history": {
      "actions": [
        "SELECT AVG(life_expectancy) FROM countries WHERE official_language != 'English';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "967": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 967,
    "query": "What are the ids of all tv channels that have more than 2 TV channels?",
    "turn_history": {
      "actions": [
        "SELECT id FROM tv_channels GROUP BY id HAVING COUNT(*) > 2;"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.tv_channels' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "968": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 968,
    "query": "Count the number of friends Kyle has.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM friends WHERE name = 'Kyle';"
      ],
      "observations": [
        "Error executing query: Table 'network_1.friends' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "969": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 969,
    "query": "What is the document id and name with greatest number of paragraphs?",
    "turn_history": {
      "actions": [
        "SELECT id, name FROM documents ORDER BY paragraphs DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "970": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 970,
    "query": "Show the name and theme for all concerts and the number of singers in each concert.",
    "turn_history": {
      "actions": [
        "SELECT concerts.name, concerts.theme, COUNT(singers.id) AS num_singers FROM concerts LEFT JOIN concert_singer ON concerts.id = concert_singer.concert_id LEFT JOIN singers ON concert_singer.singer_id = singers.id GROUP BY concerts.id;"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.concerts' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "971": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 971,
    "query": "Show name of all students who have some friends and also are liked by someone else.",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT s.name FROM students s INNER JOIN friendships f ON s.id = f.student_id INNER JOIN likes l ON s.id = l.student_id WHERE f.friend_id IS NOT NULL AND l.liker_id != s.id;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "972": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 972,
    "query": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
    "turn_history": {
      "actions": [
        "SELECT Acceleration FROM cars WHERE Model = 'amc hornet sportabout (sw)';"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "973": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 973,
    "query": "Give the names of the nations that were founded after 1950.",
    "turn_history": {
      "actions": [
        "SELECT name FROM nations WHERE year_founded > 1950;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.nations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "974": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 974,
    "query": "How many airports do we have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM airports;"
      ],
      "observations": [
        "[(100,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "975": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 975,
    "query": "What are the towns from which at least two teachers come from?",
    "turn_history": {
      "actions": [
        "SELECT town FROM teachers GROUP BY town HAVING COUNT(DISTINCT teacher_name) >= 2;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "976": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 976,
    "query": "Show the name of the teacher for the math course.",
    "turn_history": {
      "actions": [
        "SELECT teacher_name FROM courses WHERE course_name = 'math';"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.courses' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "977": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 977,
    "query": "What are the birth years and citizenships of the singers?",
    "turn_history": {
      "actions": [
        "SELECT birth_year, citizenship FROM singers;"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "978": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 978,
    "query": "What is the id and type code for the template used by the most documents?",
    "turn_history": {
      "actions": [
        "SELECT id, type_code FROM templates WHERE id = (SELECT template_id FROM documents GROUP BY template_id ORDER BY COUNT(*) DESC LIMIT 1);"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "979": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 979,
    "query": "How many people are there of each nationality?",
    "turn_history": {
      "actions": [
        "SELECT nationality, COUNT(*) FROM people GROUP BY nationality;"
      ],
      "observations": [
        "[('Russia', 6), ('Bulgaria', 1)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "980": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 980,
    "query": "Find the kind of program which most number of students are enrolled in?",
    "turn_history": {
      "actions": [
        "SELECT program_name FROM enrollment GROUP BY program_name ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.enrollment' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "981": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 981,
    "query": "What are the details for the paragraph that includes the text 'Korea ' ?",
    "turn_history": {
      "actions": [
        "SELECT * FROM table_name WHERE paragraph_column LIKE '%Korea%';"
      ],
      "observations": [
        "Error executing query: Table 'cre_doc_template_mgt.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "982": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 982,
    "query": "Show the name and the release year of the song by the youngest singer.",
    "turn_history": {
      "actions": [
        "SELECT name, release_year FROM songs WHERE singer_age = (SELECT MIN(singer_age) FROM songs)"
      ],
      "observations": [
        "Error executing query: Table 'concert_singer.songs' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "983": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 983,
    "query": "List the name of singers whose citizenship is not \"France\".",
    "turn_history": {
      "actions": [
        "SELECT name FROM singers WHERE citizenship <> 'France';"
      ],
      "observations": [
        "Error executing query: Table 'singer.singers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "984": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 984,
    "query": "Find the name of the employee who got the highest one time bonus.",
    "turn_history": {
      "actions": [
        "SELECT name FROM employees WHERE one_time_bonus = (SELECT MAX(one_time_bonus) FROM employees);"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.employees' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "985": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 985,
    "query": "What are the names and id of courses having at most 2 sections?",
    "turn_history": {
      "actions": [
        "SELECT id, name FROM courses WHERE id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(*) <= 2);"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "986": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 986,
    "query": "Give the flight numbers of flights leaving from APG.",
    "turn_history": {
      "actions": [
        "SELECT flight_number FROM flights WHERE departure_airport = 'APG';"
      ],
      "observations": [
        "Error executing query: Unknown column 'flight_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "987": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 987,
    "query": "What are the name, independence year, and surface area of the country with the smallest population?",
    "turn_history": {
      "actions": [
        "SELECT name, independence_year, surface_area  FROM countries  WHERE population = (SELECT MIN(population) FROM countries);"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "988": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 988,
    "query": "Show all template type codes and number of templates for each.",
    "turn_history": {
      "actions": [
        "SELECT template_type_code, COUNT(*) AS num_templates FROM templates GROUP BY template_type_code;"
      ],
      "observations": [
        "[('AD', 3), ('BK', 6), ('CV', 2), ('PP', 5), ('PPT', 3)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "989": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 989,
    "query": "What is the average earnings of poker players with height higher than 200?",
    "turn_history": {
      "actions": [
        "SELECT AVG(earnings) FROM poker_players WHERE height > 200;"
      ],
      "observations": [
        "Error executing query: Unknown column 'earnings' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "990": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 990,
    "query": "What is the number of cars with a horsepower greater than 150?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE horsepower > 150;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "991": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 991,
    "query": "Return the id and name of the document with the most paragraphs.",
    "turn_history": {
      "actions": [
        "SELECT id, name FROM documents ORDER BY paragraphs DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "992": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 992,
    "query": "How many people live in countries that do not speak English?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM population WHERE country_language != 'English';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.population' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "993": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 993,
    "query": "Find the type and weight of the youngest pet.",
    "turn_history": {
      "actions": [
        "SELECT type, weight FROM pets ORDER BY age ASC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'type' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "994": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 994,
    "query": "Which states have both owners and professionals living there?",
    "turn_history": {
      "actions": [
        "SELECT state FROM table_name WHERE owner_count > 0 AND professional_count > 0;"
      ],
      "observations": [
        "Error executing query: Table 'dog_kennels.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "995": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 995,
    "query": "Return the number of United Airlines flights leaving from AHD Airport.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND origin = 'AHD';"
      ],
      "observations": [
        "Error executing query: Unknown column 'origin' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "996": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 996,
    "query": "Give me all the information about hiring.",
    "turn_history": {
      "actions": [
        "SELECT * FROM hiring;"
      ],
      "observations": [
        "[(1, 1, '2009', 'T'), (1, 2, '2003', 'T'), (8, 3, '2011', 'F'), (4, 4, '2012', 'T'), (5, 5, '2013', 'T'), (2, 6, '2010', 'F'), (6, 7, '2008', 'T')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "997": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 997,
    "query": "Show the names of students who have at least 2 likes.",
    "turn_history": {
      "actions": [
        "SELECT name FROM students WHERE likes >= 2;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "998": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 998,
    "query": "Count the number of templates of the type CV.",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM templates WHERE type = 'CV';"
      ],
      "observations": [
        "Error executing query: Unknown column 'type' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "999": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 999,
    "query": "Find the first name of students who have cat or dog pet.",
    "turn_history": {
      "actions": [
        "SELECT first_name FROM students WHERE pet IN ('cat', 'dog');"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "1000": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1000,
    "query": "What are the names of the high schoolers and how many friends does each have?",
    "turn_history": {
      "actions": [
        "SELECT h.name, COUNT(f.friend_id) AS num_friends FROM highschooler h LEFT JOIN friend f ON h.ID = f.highschooler_id GROUP BY h.ID ORDER BY num_friends DESC, h.name ASC;"
      ],
      "observations": [
        "Error executing query: Unknown column 'f.highschooler_id' in 'on clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1001": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1001,
    "query": "What is the minimum weight of the car with 8 cylinders produced in 1974 ?",
    "turn_history": {
      "actions": [
        "SELECT MIN(weight) FROM cars WHERE cylinders = 8 AND year = 1974;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1002": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1002,
    "query": "What are flight numbers of flights departing from City \"Aberdeen \"?",
    "turn_history": {
      "actions": [
        "SELECT flight_number FROM flights WHERE departure_city = 'Aberdeen';"
      ],
      "observations": [
        "Error executing query: Unknown column 'flight_number' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1003": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1003,
    "query": "How many contestants did not get voted?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM contestants WHERE voted = 0;"
      ],
      "observations": [
        "Error executing query: Unknown column 'voted' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "1004": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1004,
    "query": "Return the codes of countries that do not speak English and do not have Republics for governments.",
    "turn_history": {
      "actions": [
        "SELECT code FROM countries WHERE language <> 'English' AND government_form <> 'Republic';"
      ],
      "observations": [
        "Error executing query: Table 'world_1.countries' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "1005": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1005,
    "query": "How many transcripts are listed?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM transcripts;"
      ],
      "observations": [
        "[(15,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1006": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1006,
    "query": "What is the version number and template type code for the template with version number later than 5?",
    "turn_history": {
      "actions": [
        "SELECT version_number, template_type_code  FROM templates  WHERE version_number > 5;"
      ],
      "observations": [
        "[(8, 'PPT'), (6, 'BK'), (7, 'AD'), (9, 'CV'), (7, 'AD'), (6, 'BK'), (9, 'AD'), (8, 'PP')]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1007": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1007,
    "query": "List each owner's first name, last name, and the size of his for her dog.",
    "turn_history": {
      "actions": [
        "SELECT owners.first_name, owners.last_name, COUNT(dogs.id) AS dog_size FROM owners JOIN dogs ON owners.id = dogs.owner_id GROUP BY owners.id;"
      ],
      "observations": [
        "Error executing query: Unknown column 'dogs.id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1008": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1008,
    "query": "Find the number of employees hired in each shop; show the shop name as well.",
    "turn_history": {
      "actions": [
        "SELECT s.shop_name, COUNT(e.employee_id) AS num_hired FROM shops s JOIN employees e ON s.shop_id = e.shop_id GROUP BY s.shop_name;"
      ],
      "observations": [
        "Error executing query: Table 'employee_hire_evaluation.shops' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1009": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1009,
    "query": "Show all the grades of the high schoolers.",
    "turn_history": {
      "actions": [
        "SELECT grade FROM highschoolers;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.highschoolers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1010": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1010,
    "query": "How many different nationalities do conductors have?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT nationality) FROM conductors;"
      ],
      "observations": [
        "Error executing query: Table 'orchestra.conductors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1011": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1011,
    "query": "What are the average ages of losers and winners across matches?",
    "turn_history": {
      "actions": [
        "SELECT winner_age, loser_age FROM matches;"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1012": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1012,
    "query": "What are the distinct states and create time of all votes?",
    "turn_history": {
      "actions": [
        "SELECT DISTINCT state, create_time FROM votes;"
      ],
      "observations": [
        "Error executing query: Unknown column 'create_time' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1013": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1013,
    "query": "Which regions speak Dutch or English?",
    "turn_history": {
      "actions": [
        "SELECT region FROM table_name WHERE language IN ('Dutch', 'English');"
      ],
      "observations": [
        "Error executing query: Table 'world_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "1014": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1014,
    "query": "Show me all grades that have at least 4 students.",
    "turn_history": {
      "actions": [
        "SELECT grade, COUNT(*) as num_students FROM table_name GROUP BY grade HAVING num_students >= 4;"
      ],
      "observations": [
        "Error executing query: Table 'network_1.table_name' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1015": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1015,
    "query": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
    "turn_history": {
      "actions": [
        "SELECT weekly_rank FROM episodes WHERE episode_name = 'A Love of a Lifetime';"
      ],
      "observations": [
        "Error executing query: Table 'tvshow.episodes' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1016": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1016,
    "query": "Find the city with the largest population that uses English.",
    "turn_history": {
      "actions": [
        "SELECT city FROM population WHERE language = 'English' ORDER BY population DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'world_1.population' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "1017": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1017,
    "query": "Find the number of dog pets that are raised by female students (with sex F).",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM pets WHERE species = 'dog' AND owner_id IN (SELECT id FROM students WHERE sex = 'F')"
      ],
      "observations": [
        "Error executing query: Table 'pets_1.students' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "1018": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1018,
    "query": "What is the average age of the dogs who have gone through any treatments?",
    "turn_history": {
      "actions": [
        "SELECT AVG(age) FROM dogs WHERE treatment IS NOT NULL;"
      ],
      "observations": [
        "Error executing query: Unknown column 'treatment' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "1019": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1019,
    "query": "What is the first and second line for all addresses?",
    "turn_history": {
      "actions": [
        "SELECT address_line1, address_line2 FROM addresses;"
      ],
      "observations": [
        "Error executing query: Unknown column 'address_line1' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1020": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1020,
    "query": "For each semester, what is the name and id of the one with the most students registered?",
    "turn_history": {
      "actions": [
        "SELECT semester_name, semester_id FROM semesters WHERE semester_id IN (     SELECT semester_id     FROM registrations     GROUP BY semester_id     HAVING COUNT(*) = (         SELECT MAX(reg_count)         FROM (             SELECT semester_id, COUNT(*) AS reg_count             FROM registrations             GROUP BY semester_id         ) AS reg_counts     ) );"
      ],
      "observations": [
        "Error executing query: Table 'student_transcripts_tracking.registrations' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "1021": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1021,
    "query": "What are the ids for templates that are not used in any documents?",
    "turn_history": {
      "actions": [
        "SELECT id FROM templates WHERE id NOT IN (SELECT template_id FROM documents);"
      ],
      "observations": [
        "Error executing query: Unknown column 'id' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "1022": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1022,
    "query": "Find the name and age of the visitor who bought the most tickets at once.",
    "turn_history": {
      "actions": [
        "SELECT visitors.name, visitors.age FROM visitors JOIN tickets ON visitors.id = tickets.visitor_id GROUP BY tickets.visitor_id ORDER BY COUNT(*) DESC LIMIT 1;"
      ],
      "observations": [
        "Error executing query: Table 'museum_visit.visitors' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "1023": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1023,
    "query": "What is minimum and maximum share of TV series?",
    "turn_history": {
      "actions": [
        "SELECT MIN(share), MAX(share) FROM TV_series;"
      ],
      "observations": [
        "[(5.0, 9.0)]"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1024": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1024,
    "query": "What is the number of cars with more than 4 cylinders?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM cars WHERE cylinders > 4;"
      ],
      "observations": [
        "Error executing query: Table 'car_1.cars' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1025": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1025,
    "query": "How many different addresses do the students currently live?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(DISTINCT address) FROM students;"
      ],
      "observations": [
        "Error executing query: Unknown column 'address' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1026": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1026,
    "query": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
    "turn_history": {
      "actions": [
        "SELECT h.name FROM highschooler h, friend f WHERE h.grade > 5 AND h.ID = f.ID1 GROUP BY h.ID HAVING COUNT(*) >= 2;"
      ],
      "observations": [
        "Error executing query: Unknown column 'f.ID1' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "hard"
  },
  "1027": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1027,
    "query": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
    "turn_history": {
      "actions": [
        "SELECT name, age, weight FROM dogs WHERE abandoned = 1;"
      ],
      "observations": [
        "Error executing query: Unknown column 'abandoned' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  },
  "1028": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1028,
    "query": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
    "turn_history": {
      "actions": [
        "SELECT MAX(final_tables) FROM poker_players WHERE earnings < 200000;"
      ],
      "observations": [
        "Error executing query: Unknown column 'earnings' in 'where clause'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1029": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1029,
    "query": "How many teachers are there?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM teachers;"
      ],
      "observations": [
        "Error executing query: Table 'course_teach.teachers' doesn't exist"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1030": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1030,
    "query": "How many owners temporarily do not have any dogs?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT DISTINCT owner_id FROM dogs);"
      ],
      "observations": [
        "[(3,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "extra"
  },
  "1031": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1031,
    "query": "How many transcripts are released?",
    "turn_history": {
      "actions": [
        "SELECT COUNT(*) FROM transcripts;"
      ],
      "observations": [
        "[(15,)]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1032": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1032,
    "query": "Find the codes of countries that have more than 50 players.",
    "turn_history": {
      "actions": [
        "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50;"
      ],
      "observations": [
        "[]"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "easy"
  },
  "1033": {
    "environment": "ic_sql",
    "dataset": "./data/spider/dev_spider.json",
    "task_id": 1033,
    "query": "What are the different template type codes, and how many documents use each type?",
    "turn_history": {
      "actions": [
        "SELECT template_type_code, COUNT(*) as num_documents FROM documents GROUP BY template_type_code;"
      ],
      "observations": [
        "Error executing query: Unknown column 'template_type_code' in 'field list'"
      ],
      "rewards": [
        0.0
      ],
      "valid_action": [
        false
      ]
    },
    "summary": {
      "max_reward": 0.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 1
    },
    "hardness": "medium"
  }
}