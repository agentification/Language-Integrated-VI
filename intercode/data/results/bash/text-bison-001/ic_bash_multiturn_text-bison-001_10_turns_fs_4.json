{
  "0": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 0,
    "query": "Retrieve only build number of current kernel, ie. #104",
    "turn_history": {
      "actions": [
        "uname -r | cut -d \" \" -f 2",
        "uname -r | cut -d \" \" -f 2",
        "uname -r | cut -d \" \" -f 2",
        "uname -r | cut -d \" \" -f 2",
        "uname -r | cut -d \" \" -f 2",
        "uname -r | cut -d \" \" -f 2",
        "uname -r | cut -d \" \" -f 2",
        "uname -r | cut -d \" \" -f 2",
        "uname -r | cut -d \" \" -f 2",
        "uname -r | cut -d \" \" -f 2"
      ],
      "observations": [
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "1": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 1,
    "query": "Print reverse lookup for adress 127.0.0.1",
    "turn_history": {
      "actions": [
        "host 127.0.0.1",
        "host -t ptr 127.0.0.1",
        "host -t ptr 127.0.0.1",
        "host -t ptr 127.0.0.1",
        "host -t ptr 127.0.0.1",
        "host -t ptr 127.0.0.1",
        "host -t ptr 127.0.0.1",
        "host -t ptr 127.0.0.1",
        "host -t ptr 127.0.0.1",
        "host -t ptr 127.0.0.1"
      ],
      "observations": [
        "1.0.0.127.in-addr.arpa domain name pointer localhost.\n",
        "1.0.0.127.in-addr.arpa domain name pointer localhost.\n",
        "1.0.0.127.in-addr.arpa domain name pointer localhost.\n",
        "1.0.0.127.in-addr.arpa domain name pointer localhost.\n",
        "1.0.0.127.in-addr.arpa domain name pointer localhost.\n",
        "1.0.0.127.in-addr.arpa domain name pointer localhost.\n",
        "1.0.0.127.in-addr.arpa domain name pointer localhost.\n",
        "1.0.0.127.in-addr.arpa domain name pointer localhost.\n",
        "1.0.0.127.in-addr.arpa domain name pointer localhost.\n",
        "1.0.0.127.in-addr.arpa domain name pointer localhost.\n"
      ],
      "rewards": [
        0.75,
        0.75,
        0.75,
        0.75,
        0.75,
        0.75,
        0.75,
        0.75,
        0.75,
        0.75
      ],
      "valid_action": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.75,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "2": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 2,
    "query": "List file information of the full path of command \"c++\"",
    "turn_history": {
      "actions": [
        "ls -l /usr/bin/c++",
        "which c++",
        "which c++",
        "which c++",
        "which c++",
        "which c++",
        "which c++",
        "which c++",
        "which c++",
        "which c++"
      ],
      "observations": [
        "ls: cannot access '/usr/bin/c++': No such file or directory\n",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "3": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 3,
    "query": "Extract host name part from \"http://www.google.com\"",
    "turn_history": {
      "actions": [
        "echo `echo \"http://www.google.com\" | cut -d \"/\" -f 3`"
      ],
      "observations": [
        "www.google.com\n"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 10
    }
  },
  "4": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 4,
    "query": "List environment variables and their values, escaping all semicolons with a backslash.",
    "turn_history": {
      "actions": [
        "env | sed 's/;/\\\\;/g'",
        "env | sed 's/;/\\\\;/g'",
        "env | sed 's/;/\\\\;/g'",
        "env | sed 's/;/\\\\;/g'",
        "env | sed 's/;/\\\\;/g'",
        "env | sed 's/;/\\\\;/g'",
        "env | sed 's/;/\\\\;/g'",
        "env | sed 's/;/\\\\;/g'",
        "env | sed 's/;/\\\\;/g'",
        "env | sed 's/;/\\\\;/g'"
      ],
      "observations": [
        "HOSTNAME=8191dc145a2a\nscript=setup_nl2b_fs_4.sh\nPWD=/\nHOME=/root\nSHLVL=0\nfile_system_version=4\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\n",
        "HOSTNAME=8191dc145a2a\nscript=setup_nl2b_fs_4.sh\nPWD=/\nHOME=/root\nSHLVL=0\nfile_system_version=4\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\n",
        "HOSTNAME=8191dc145a2a\nscript=setup_nl2b_fs_4.sh\nPWD=/\nHOME=/root\nSHLVL=0\nfile_system_version=4\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\n",
        "HOSTNAME=8191dc145a2a\nscript=setup_nl2b_fs_4.sh\nPWD=/\nHOME=/root\nSHLVL=0\nfile_system_version=4\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\n",
        "HOSTNAME=8191dc145a2a\nscript=setup_nl2b_fs_4.sh\nPWD=/\nHOME=/root\nSHLVL=0\nfile_system_version=4\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\n",
        "HOSTNAME=8191dc145a2a\nscript=setup_nl2b_fs_4.sh\nPWD=/\nHOME=/root\nSHLVL=0\nfile_system_version=4\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\n",
        "HOSTNAME=8191dc145a2a\nscript=setup_nl2b_fs_4.sh\nPWD=/\nHOME=/root\nSHLVL=0\nfile_system_version=4\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\n",
        "HOSTNAME=8191dc145a2a\nscript=setup_nl2b_fs_4.sh\nPWD=/\nHOME=/root\nSHLVL=0\nfile_system_version=4\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\n",
        "HOSTNAME=8191dc145a2a\nscript=setup_nl2b_fs_4.sh\nPWD=/\nHOME=/root\nSHLVL=0\nfile_system_version=4\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\n",
        "HOSTNAME=8191dc145a2a\nscript=setup_nl2b_fs_4.sh\nPWD=/\nHOME=/root\nSHLVL=0\nfile_system_version=4\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\n"
      ],
      "rewards": [
        0.99,
        0.99,
        0.99,
        0.99,
        0.99,
        0.99,
        0.99,
        0.99,
        0.99,
        0.99
      ],
      "valid_action": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.99,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "5": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 5,
    "query": "Displays a tree of all process alongside their command line arguments.",
    "turn_history": {
      "actions": [
        "pstree -p"
      ],
      "observations": [
        "bash(1)\n"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 10
    }
  },
  "6": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 6,
    "query": "Create intermediate directories \"dir\" and \"subdir\" as required and create \"subsubdir\"",
    "turn_history": {
      "actions": [
        "mkdir dir mkdir dir/subdir mkdir dir/subdir/subsubdir",
        "mkdir dir mkdir dir/subdir mkdir dir/subdir/subsubdir",
        "mkdir dir mkdir dir/subdir mkdir dir/subdir/subsubdir",
        "mkdir dir mkdir dir/subdir mkdir dir/subdir/subsubdir",
        "mkdir dir mkdir dir/subdir mkdir dir/subdir/subsubdir",
        "mkdir dir mkdir dir/subdir mkdir dir/subdir/subsubdir",
        "mkdir dir mkdir dir/subdir mkdir dir/subdir/subsubdir",
        "mkdir dir mkdir dir/subdir mkdir dir/subdir/subsubdir",
        "mkdir dir mkdir dir/subdir mkdir dir/subdir/subsubdir",
        "mkdir dir mkdir dir/subdir mkdir dir/subdir/subsubdir"
      ],
      "observations": [
        "mkdir: cannot create directory 'mkdir': File exists\n",
        "mkdir: cannot create directory 'dir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir/subsubdir': File exists\n",
        "mkdir: cannot create directory 'dir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir/subsubdir': File exists\n",
        "mkdir: cannot create directory 'dir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir/subsubdir': File exists\n",
        "mkdir: cannot create directory 'dir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir/subsubdir': File exists\n",
        "mkdir: cannot create directory 'dir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir/subsubdir': File exists\n",
        "mkdir: cannot create directory 'dir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir/subsubdir': File exists\n",
        "mkdir: cannot create directory 'dir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir/subsubdir': File exists\n",
        "mkdir: cannot create directory 'dir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir/subsubdir': File exists\n",
        "mkdir: cannot create directory 'dir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir': File exists\nmkdir: cannot create directory 'mkdir': File exists\nmkdir: cannot create directory 'dir/subdir/subsubdir': File exists\n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "7": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 7,
    "query": "Change to the directory of the executable \"python\"",
    "turn_history": {
      "actions": [
        "cd \"$(dirname \"$(which python)\")\"",
        "cd \"$(dirname \"$(which python)\")\"",
        "cd \"$(dirname \"$(which python)\")\"",
        "cd \"$(dirname \"$(which python)\")\"",
        "cd \"$(dirname \"$(which python)\")\"",
        "cd \"$(dirname \"$(which python)\")\"",
        "cd \"$(dirname \"$(which python)\")\"",
        "cd \"$(dirname \"$(which python)\")\"",
        "cd \"$(dirname \"$(which python)\")\"",
        "cd \"$(dirname \"$(which python)\")\""
      ],
      "observations": [
        "$(which python)): -c: line 1: unexpected EOF while looking for matching `)'\n$(which python)): -c: line 2: syntax error: unexpected end of file\n",
        "$(which python)): -c: line 1: unexpected EOF while looking for matching `)'\n$(which python)): -c: line 2: syntax error: unexpected end of file\n",
        "$(which python)): -c: line 1: unexpected EOF while looking for matching `)'\n$(which python)): -c: line 2: syntax error: unexpected end of file\n",
        "$(which python)): -c: line 1: unexpected EOF while looking for matching `)'\n$(which python)): -c: line 2: syntax error: unexpected end of file\n",
        "$(which python)): -c: line 1: unexpected EOF while looking for matching `)'\n$(which python)): -c: line 2: syntax error: unexpected end of file\n",
        "$(which python)): -c: line 1: unexpected EOF while looking for matching `)'\n$(which python)): -c: line 2: syntax error: unexpected end of file\n",
        "$(which python)): -c: line 1: unexpected EOF while looking for matching `)'\n$(which python)): -c: line 2: syntax error: unexpected end of file\n",
        "$(which python)): -c: line 1: unexpected EOF while looking for matching `)'\n$(which python)): -c: line 2: syntax error: unexpected end of file\n",
        "$(which python)): -c: line 1: unexpected EOF while looking for matching `)'\n$(which python)): -c: line 2: syntax error: unexpected end of file\n",
        "$(which python)): -c: line 1: unexpected EOF while looking for matching `)'\n$(which python)): -c: line 2: syntax error: unexpected end of file\n"
      ],
      "rewards": [
        0.68,
        0.68,
        0.68,
        0.68,
        0.68,
        0.68,
        0.68,
        0.68,
        0.68,
        0.68
      ],
      "valid_action": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "summary": {
      "max_reward": 0.68,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "8": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 8,
    "query": "Print numbers 1 through 10 separated by \":\"",
    "turn_history": {
      "actions": [
        "for i in {1..10}; do echo -e \"$i : \"; done",
        "for i in {1..10}; do echo -e \"$i : \"; done",
        "for i in {1..10}; do echo -e \"$i : \"; done",
        "for i in {1..10}; do echo -e \"$i : \"; done",
        "for i in {1..10}; do echo -e \"$i : \"; done",
        "for i in {1..10}; do echo -e \"$i : \"; done",
        "for i in {1..10}; do echo -e \"$i : \"; done",
        "for i in {1..10}; do echo -e \"$i : \"; done",
        "for i in {1..10}; do echo -e \"$i : \"; done",
        "for i in {1..10}; do echo -e \"$i : \"; done"
      ],
      "observations": [
        ":: -c: line 2: syntax error: unexpected end of file\n",
        ":: -c: line 2: syntax error: unexpected end of file\n",
        ":: -c: line 2: syntax error: unexpected end of file\n",
        ":: -c: line 2: syntax error: unexpected end of file\n",
        ":: -c: line 2: syntax error: unexpected end of file\n",
        ":: -c: line 2: syntax error: unexpected end of file\n",
        ":: -c: line 2: syntax error: unexpected end of file\n",
        ":: -c: line 2: syntax error: unexpected end of file\n",
        ":: -c: line 2: syntax error: unexpected end of file\n",
        ":: -c: line 2: syntax error: unexpected end of file\n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "9": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 9,
    "query": "print all readline bindings",
    "turn_history": {
      "actions": [
        "set -o vi",
        "set -o vi",
        "set -o vi",
        "set -o vi",
        "set -o vi",
        "set -o vi",
        "set -o vi",
        "set -o vi",
        "set -o vi",
        "set -o vi"
      ],
      "observations": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "10": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 10,
    "query": "list names of bind functions containing \"p\"",
    "turn_history": {
      "actions": [
        "set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ \"p\" ]]; then echo $f fi done",
        "set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ \"p\" ]]; then echo $f fi done",
        "set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ \"p\" ]]; then echo $f fi done",
        "set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ \"p\" ]]; then echo $f fi done",
        "set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ \"p\" ]]; then echo $f fi done",
        "set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ \"p\" ]]; then echo $f fi done",
        "set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ \"p\" ]]; then echo $f fi done",
        "set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ \"p\" ]]; then echo $f fi done",
        "set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ \"p\" ]]; then echo $f fi done",
        "set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ \"p\" ]]; then echo $f fi done"
      ],
      "observations": [
        "/bin/bash: -c: line 1: syntax error near unexpected token `do'\n/bin/bash: -c: line 1: `set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ p ]]; then echo $f fi done'\n",
        "/bin/bash: -c: line 1: syntax error near unexpected token `do'\n/bin/bash: -c: line 1: `set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ p ]]; then echo $f fi done'\n",
        "/bin/bash: -c: line 1: syntax error near unexpected token `do'\n/bin/bash: -c: line 1: `set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ p ]]; then echo $f fi done'\n",
        "/bin/bash: -c: line 1: syntax error near unexpected token `do'\n/bin/bash: -c: line 1: `set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ p ]]; then echo $f fi done'\n",
        "/bin/bash: -c: line 1: syntax error near unexpected token `do'\n/bin/bash: -c: line 1: `set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ p ]]; then echo $f fi done'\n",
        "/bin/bash: -c: line 1: syntax error near unexpected token `do'\n/bin/bash: -c: line 1: `set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ p ]]; then echo $f fi done'\n",
        "/bin/bash: -c: line 1: syntax error near unexpected token `do'\n/bin/bash: -c: line 1: `set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ p ]]; then echo $f fi done'\n",
        "/bin/bash: -c: line 1: syntax error near unexpected token `do'\n/bin/bash: -c: line 1: `set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ p ]]; then echo $f fi done'\n",
        "/bin/bash: -c: line 1: syntax error near unexpected token `do'\n/bin/bash: -c: line 1: `set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ p ]]; then echo $f fi done'\n",
        "/bin/bash: -c: line 1: syntax error near unexpected token `do'\n/bin/bash: -c: line 1: `set -o nounset set -o errexit for f in $(sed -n 's/bind\\s*\\(\\([^)]*\\)\\s*;/\\1/p' /etc/inputrc); do if [[ $f =~ p ]]; then echo $f fi done'\n"
      ],
      "rewards": [
        0.6900000000000001,
        0.6900000000000001,
        0.6900000000000001,
        0.6900000000000001,
        0.6900000000000001,
        0.6900000000000001,
        0.6900000000000001,
        0.6900000000000001,
        0.6900000000000001,
        0.6900000000000001
      ],
      "valid_action": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "summary": {
      "max_reward": 0.6900000000000001,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "11": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 11,
    "query": "List all files on smbfs mounts",
    "turn_history": {
      "actions": [
        "ls -l /mnt/smbfs",
        "ls -l /mnt/smbfs",
        "ls -l /mnt/smbfs",
        "ls -l /mnt/smbfs",
        "ls -l /mnt/smbfs",
        "ls -l /mnt/smbfs",
        "ls -l /mnt/smbfs",
        "ls -l /mnt/smbfs",
        "ls -l /mnt/smbfs",
        "ls -l /mnt/smbfs"
      ],
      "observations": [
        "ls: cannot access '/mnt/smbfs': No such file or directory\n",
        "ls: cannot access '/mnt/smbfs': No such file or directory\n",
        "ls: cannot access '/mnt/smbfs': No such file or directory\n",
        "ls: cannot access '/mnt/smbfs': No such file or directory\n",
        "ls: cannot access '/mnt/smbfs': No such file or directory\n",
        "ls: cannot access '/mnt/smbfs': No such file or directory\n",
        "ls: cannot access '/mnt/smbfs': No such file or directory\n",
        "ls: cannot access '/mnt/smbfs': No such file or directory\n",
        "ls: cannot access '/mnt/smbfs': No such file or directory\n",
        "ls: cannot access '/mnt/smbfs': No such file or directory\n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "12": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 12,
    "query": "Save first IP address of domain 'google.com' in 'address' variable and display it",
    "turn_history": {
      "actions": [
        "address=$(dig +short google.com) echo $address",
        "address=$(dig +short google.com) echo $address",
        "address=$(dig +short google.com) echo $address",
        "address=$(dig +short google.com) echo $address",
        "address=$(dig +short google.com) echo $address",
        "address=$(dig +short google.com) echo $address",
        "address=$(dig +short google.com) echo $address",
        "address=$(dig +short google.com) echo $address",
        "address=$(dig +short google.com) echo $address",
        "address=$(dig +short google.com) echo $address"
      ],
      "observations": [
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "13": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 13,
    "query": "Remove all characters except \";\" and digits from the string \"  Hello world;876\t  \"",
    "turn_history": {
      "actions": [
        "echo 'hello world;876' | tr -d 'a-za-z'"
      ],
      "observations": [
        " ;876\n"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 10
    }
  },
  "14": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 14,
    "query": "Remove leading and trailing spaces or tabs from \"  Hello world!\t  \"",
    "turn_history": {
      "actions": [
        "echo \" hello world! \" | tr -d ' '",
        "echo \" hello world! \" | tr -d ' '",
        "echo \" hello world! \" | tr -d ' '",
        "echo \" hello world! \" | tr -d ' '",
        "echo \" hello world! \" | tr -d ' '",
        "echo \" hello world! \" | tr -d ' '",
        "echo \" hello world! \" | sed 's/[[:space:]]*$//;s/[[:space:]]^//'",
        "echo \" hello world! \" | sed 's/[[:space:]]*$//;s/[[:space:]]^//'",
        "echo \" hello world! \" | sed 's/[[:space:]]*$//;s/[[:space:]]^//'",
        "echo \" hello world! \" | sed 's/[[:space:]]*$//;s/[[:space:]]^//'"
      ],
      "observations": [
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "15": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 15,
    "query": "Remove the last 3 characters from \"987654321\"",
    "turn_history": {
      "actions": [
        "echo 987654321 | cut -c -10",
        "echo 987654321 | cut -c -10",
        "echo 987654321 | cut -c -10",
        "echo 987654321 | cut -c -10",
        "echo 987654321 | cut -c -10",
        "echo 987654321 | cut -c -10",
        "echo 987654321 | cut -c -10",
        "echo 987654321 | cut -c -10",
        "echo 987654321 | cut -c -10",
        "echo 987654321 | cut -c -10"
      ],
      "observations": [
        "987654321\n",
        "987654321\n",
        "987654321\n",
        "987654321\n",
        "987654321\n",
        "987654321\n",
        "987654321\n",
        "987654321\n",
        "987654321\n",
        "987654321\n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "16": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 16,
    "query": "Print source of the file system containing current working directory.",
    "turn_history": {
      "actions": [
        "echo $(pwd -p | sed 's/\\/[^\\/]*$//')",
        "echo $(pwd -p | sed 's/\\/[^\\/]*$//')",
        "echo $(pwd -p | sed 's/\\/[^\\/]*$//')",
        "echo $(pwd -p | sed 's/\\/[^\\/]*$//')",
        "echo $(pwd -p)",
        "echo $(pwd -p)",
        "echo $(pwd -p)",
        "echo $(pwd -p)",
        "echo $(pwd -p)",
        "echo $(pwd -p)"
      ],
      "observations": [
        "/bin/bash: line 1: pwd: -p: invalid option\npwd: usage: pwd [-LP]\n\n",
        "/bin/bash: line 1: pwd: -p: invalid option\npwd: usage: pwd [-LP]\n\n",
        "/bin/bash: line 1: pwd: -p: invalid option\npwd: usage: pwd [-LP]\n\n",
        "/bin/bash: line 1: pwd: -p: invalid option\npwd: usage: pwd [-LP]\n\n",
        "\n/bin/bash: line 1: pwd: -p: invalid option\npwd: usage: pwd [-LP]\n",
        "/bin/bash: line 1: pwd: -p: invalid option\npwd: usage: pwd [-LP]\n\n",
        "/bin/bash: line 1: pwd: -p: invalid option\npwd: usage: pwd [-LP]\n\n",
        "\n/bin/bash: line 1: pwd: -p: invalid option\npwd: usage: pwd [-LP]\n",
        "/bin/bash: line 1: pwd: -p: invalid option\npwd: usage: pwd [-LP]\n\n",
        "/bin/bash: line 1: pwd: -p: invalid option\npwd: usage: pwd [-LP]\n\n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "17": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 17,
    "query": "List all variables (names only) with names containing \"H\".",
    "turn_history": {
      "actions": [
        "set | grep -e '^h.*'",
        "set | grep -e '^h.*'",
        "set | grep -e '^h.*'",
        "set | grep -e '^h.*'",
        "set | grep -e '^h.*'",
        "set | grep -e '^h.*'",
        "set | grep -e '^h.*'",
        "set | grep -e '^h.*'",
        "set | grep -e '^h.*'",
        "set | grep -e '^h.*'"
      ],
      "observations": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "18": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 18,
    "query": "Print a list of unique users who are logged in",
    "turn_history": {
      "actions": [
        "who | cut -d \" \" -f 1 | sort | uniq",
        "who | cut -d \" \" -f 1 | sort | uniq -c",
        "who | cut -d \" \" -f 1 | sort | uniq -c",
        "who | cut -d \" \" -f 1 | sort | uniq",
        "who | cut -d \" \" -f 1 | sort | uniq -c",
        "who | cut -d \" \" -f 1 | sort | uniq -c",
        "who | cut -d \" \" -f 1 | sort | uniq",
        "who | cut -d \" \" -f 1 | sort | uniq",
        "who | cut -d \" \" -f 1 | sort | uniq",
        "who | cut -d \" \" -f 1 | sort | uniq"
      ],
      "observations": [
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "19": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 19,
    "query": "Ping hostname, grep for 192.168.11 and print the IP from the output",
    "turn_history": {
      "actions": [
        "ping -c 1 hostname | grep 192.168.11 | cut -d \" \" -f 4",
        "ping -c 1 hostname | grep 192.168.11 | cut -d \" \" -f 4",
        "ping -c 1 hostname | grep 192.168.11 | cut -d \" \" -f 4",
        "ping -c 1 hostname | grep 192.168.11 | cut -d \" \" -f 4",
        "ping -c 1 hostname | grep 192.168.11 | cut -d \" \" -f 4",
        "ping -c 1 hostname | grep 192.168.11 | cut -d \" \" -f 4",
        "ping -c 1 hostname | grep 192.168.11 | cut -d \" \" -f 4",
        "ping -c 1 hostname | grep 192.168.11 | cut -d \" \" -f 4",
        "ping -c 1 hostname | grep 192.168.11 | cut -d \" \" -f 4",
        "ping -c 1 hostname | grep 192.168.11 | cut -d \" \" -f 4"
      ],
      "observations": [
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\nping: hostname: Name or service not known\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\nping: hostname: Name or service not known\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\nping: hostname: Name or service not known\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\nping: hostname: Name or service not known\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\nping: hostname: Name or service not known\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\nping: hostname: Name or service not known\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\nping: hostname: Name or service not known\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\nping: hostname: Name or service not known\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\nping: hostname: Name or service not known\n",
        "cut: option requires an argument -- 'd'\nTry 'cut --help' for more information.\nping: hostname: Name or service not known\n"
      ],
      "rewards": [
        0.8200000000000001,
        0.8200000000000001,
        0.8200000000000001,
        0.8200000000000001,
        0.8200000000000001,
        0.8200000000000001,
        0.8200000000000001,
        0.8200000000000001,
        0.8200000000000001,
        0.8200000000000001
      ],
      "valid_action": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "summary": {
      "max_reward": 0.8200000000000001,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "20": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 20,
    "query": "Print a line of 99 '=' characters",
    "turn_history": {
      "actions": [
        "for i in {1..99}; do echo -n \"=\"; done",
        "for i in {1..99}; do echo -n \"=\"; done",
        "for i in {1..99}; do echo -n \"=\"; done",
        "for i in {1..99}; do echo -n \"=\"; done",
        "for i in {1..99}; do echo -n \"=\"; done",
        "for i in {1..99}; do echo -n \"=\"; done",
        "for i in {1..99}; do echo -n \"=\"; done",
        "for i in {1..99}; do echo -n \"=\"; done",
        "for i in {1..99}; do echo -n \"=\"; done",
        "for i in {1..99}; do echo -n \"=\"; done"
      ],
      "observations": [
        "===================================================================================================",
        "===================================================================================================",
        "===================================================================================================",
        "===================================================================================================",
        "===================================================================================================",
        "===================================================================================================",
        "===================================================================================================",
        "===================================================================================================",
        "===================================================================================================",
        "==================================================================================================="
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "21": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 21,
    "query": "Counts all business days in a current month.",
    "turn_history": {
      "actions": [
        "#!/bin/bash # get the current month month=$(date +%m) # get the number of days in the current month days=$(cal $month | awk '{print $3}') # get the number of business days in the current month business_days=$(cal $month | awk '{if ($3 != \"sun\" && $3 != \"sat\") print $3}') # print the number of business days in the current month echo $business_days",
        "#!/bin/bash # get the current month month=$(date +%m) # get the number of days in the current month days=$(cal $month | awk '{print $3}') # get the number of business days in the current month business_days=$(cal $month | awk '{if ($3 != \"sun\" && $3 != \"sat\") print $3}') # print the number of business days in the current month echo $business_days",
        "#!/bin/bash # get the current month month=$(date +%m) # get the number of days in the current month days=$(cal $month | awk '{print $3}') # get the number of business days in the current month business_days=$(cal $month | awk '{if ($3 != \"sun\" && $3 != \"sat\") print $3}') # print the number of business days in the current month echo $business_days",
        "#!/bin/bash # get the current month month=$(date +%m) # get the number of days in the current month days=$(cal $month | awk '{print $3}') # get the number of business days in the current month business_days=$(cal $month | awk '{if ($3 != \"sun\" && $3 != \"sat\") print $3}') # print the number of business days in the current month echo $business_days",
        "#!/bin/bash # get the current month month=$(date +%m) # get the number of days in the current month days=$(cal $month | awk '{print $3}') # get the number of business days in the current month business_days=$(cal $month | awk '{if ($3 != \"sun\" && $3 != \"sat\") print $3}') # print the number of business days in the current month echo $business_days",
        "#!/bin/bash # get the current month month=$(date +%m) # get the number of days in the current month days=$(cal $month | awk '{print $3}') # get the number of business days in the current month business_days=$(cal $month | awk '{if ($3 != \"sun\" && $3 != \"sat\") print $3}') # print the number of business days in the current month echo $business_days",
        "#!/bin/bash # get the current month month=$(date +%m) # get the number of days in the current month days=$(cal $month | awk '{print $3}') # get the number of business days in the current month business_days=$(cal $month | awk '{if ($3 != \"sun\" && $3 != \"sat\") print $3}') # print the number of business days in the current month echo $business_days",
        "#!/bin/bash # get the current month month=$(date +%m) # get the number of days in the current month days=$(cal $month | awk '{print $3}') # get the number of business days in the current month business_days=$(cal $month | awk '{if ($3 != \"sun\" && $3 != \"sat\") print $3}') # print the number of business days in the current month echo $business_days",
        "#!/bin/bash # get the current month month=$(date +%m) # get the number of days in the current month days=$(cal $month | awk '{print $3}') # get the number of business days in the current month business_days=$(cal $month | awk '{if ($3 != \"sun\" && $3 != \"sat\") print $3}') # print the number of business days in the current month echo $business_days",
        "#!/bin/bash # get the current month month=$(date +%m) # get the number of days in the current month days=$(cal $month | awk '{print $3}') # get the number of business days in the current month business_days=$(cal $month | awk '{if ($3 != \"sun\" && $3 != \"sat\") print $3}') # print the number of business days in the current month echo $business_days"
      ],
      "observations": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "22": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 22,
    "query": "Count number of users logged in",
    "turn_history": {
      "actions": [
        "who | wc -l"
      ],
      "observations": [
        "0\n"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 10
    }
  },
  "23": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 23,
    "query": "Displays calendar of a previous, current and next month for December of 2120 year.",
    "turn_history": {
      "actions": [
        "cal -m 12 2120 cal -m 11 2120 cal -m 1 2121",
        "cal -m 12 2120 cal -m 11 2120 cal -m 1 2121",
        "cal -m 12 2120",
        "cal -m 12 2120",
        "cal -m 12 2120 cal -m 11 2120 cal -m 1 2121",
        "cal -m 12 2120 cal -m 11 2120 cal -m 1 2121",
        "cal -m 12 2120 cal -m 11 2120 cal -m 1 2121",
        "cal -m 12 2120",
        "cal -m 12 2120",
        "blocked"
      ],
      "observations": [
        "Usage: cal [general options] [-jy] [[month] year]\n       cal [general options] [-j] [-m month] [year]\n       ncal -C [general options] [-jy] [[month] year]\n       ncal -C [general options] [-j] [-m month] [year]\n       ncal [general options] [-bhJjpwySM] [-H yyyy-mm-dd] [-s country_code] [-W number of days] [[month] year]\n       ncal [general options] [-Jeo] [year]\nGeneral options: [-31] [-A months] [-B months] [-d yyyy-mm]\n",
        "Usage: cal [general options] [-jy] [[month] year]\n       cal [general options] [-j] [-m month] [year]\n       ncal -C [general options] [-jy] [[month] year]\n       ncal -C [general options] [-j] [-m month] [year]\n       ncal [general options] [-bhJjpwySM] [-H yyyy-mm-dd] [-s country_code] [-W number of days] [[month] year]\n       ncal [general options] [-Jeo] [year]\nGeneral options: [-31] [-A months] [-B months] [-d yyyy-mm]\n",
        "   December 2120      \nSu Mo Tu We Th Fr Sa  \n 1  2  3  4  5  6  7  \n 8  9 10 11 12 13 14  \n15 16 17 18 19 20 21  \n22 23 24 25 26 27 28  \n29 30 31              \n                      \n",
        "   December 2120      \nSu Mo Tu We Th Fr Sa  \n 1  2  3  4  5  6  7  \n 8  9 10 11 12 13 14  \n15 16 17 18 19 20 21  \n22 23 24 25 26 27 28  \n29 30 31              \n                      \n",
        "Usage: cal [general options] [-jy] [[month] year]\n       cal [general options] [-j] [-m month] [year]\n       ncal -C [general options] [-jy] [[month] year]\n       ncal -C [general options] [-j] [-m month] [year]\n       ncal [general options] [-bhJjpwySM] [-H yyyy-mm-dd] [-s country_code] [-W number of days] [[month] year]\n       ncal [general options] [-Jeo] [year]\nGeneral options: [-31] [-A months] [-B months] [-d yyyy-mm]\n",
        "Usage: cal [general options] [-jy] [[month] year]\n       cal [general options] [-j] [-m month] [year]\n       ncal -C [general options] [-jy] [[month] year]\n       ncal -C [general options] [-j] [-m month] [year]\n       ncal [general options] [-bhJjpwySM] [-H yyyy-mm-dd] [-s country_code] [-W number of days] [[month] year]\n       ncal [general options] [-Jeo] [year]\nGeneral options: [-31] [-A months] [-B months] [-d yyyy-mm]\n",
        "Usage: cal [general options] [-jy] [[month] year]\n       cal [general options] [-j] [-m month] [year]\n       ncal -C [general options] [-jy] [[month] year]\n       ncal -C [general options] [-j] [-m month] [year]\n       ncal [general options] [-bhJjpwySM] [-H yyyy-mm-dd] [-s country_code] [-W number of days] [[month] year]\n       ncal [general options] [-Jeo] [year]\nGeneral options: [-31] [-A months] [-B months] [-d yyyy-mm]\n",
        "   December 2120      \nSu Mo Tu We Th Fr Sa  \n 1  2  3  4  5  6  7  \n 8  9 10 11 12 13 14  \n15 16 17 18 19 20 21  \n22 23 24 25 26 27 28  \n29 30 31              \n                      \n",
        "   December 2120      \nSu Mo Tu We Th Fr Sa  \n 1  2  3  4  5  6  7  \n 8  9 10 11 12 13 14  \n15 16 17 18 19 20 21  \n22 23 24 25 26 27 28  \n29 30 31              \n                      \n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.99,
        0.99,
        0.67,
        0.67,
        0.67,
        0.99,
        0.99,
        0
      ],
      "valid_action": [
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.99,
      "max_reward_idx": 2,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "24": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 24,
    "query": "Extract, sort and print only group names from /etc/group.",
    "turn_history": {
      "actions": [
        "cat /etc/group | cut -d: -f1 | sort"
      ],
      "observations": [
        "_ssh\nadm\naudio\nbackup\nbin\ncdrom\ncrontab\ndaemon\ndialout\ndip\ndisk\nfax\nfloppy\ngames\ngnats\nirc\nkmem\nlist\nlp\nmail\nman\nmessagebus\nnews\nnogroup\noperator\nplugdev\nproxy\nroot\nsasl\nshadow\nsrc\nstaff\nsudo\nsys\ntape\ntty\nusers\nutmp\nuucp\nvideo\nvoice\nwww-data\n"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 10
    }
  },
  "25": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 25,
    "query": "Store system load average number in the 'proc_load_average' variable and print it.",
    "turn_history": {
      "actions": [
        "proc_load_average=$(cat /proc/loadavg) echo $proc_load_average",
        "proc_load_average=$(cat /proc/loadavg) echo $proc_load_average",
        "proc_load_average=$(cat /proc/loadavg) echo $proc_load_average",
        "proc_load_average=$(cat /proc/loadavg) echo $proc_load_average",
        "proc_load_average=$(cat /proc/loadavg) echo $proc_load_average",
        "proc_load_average=$(cat /proc/loadavg) echo $proc_load_average",
        "proc_load_average=$(cat /proc/loadavg) echo $proc_load_average",
        "proc_load_average=$(cat /proc/loadavg) echo $proc_load_average",
        "proc_load_average=$(cat /proc/loadavg) echo $proc_load_average",
        "proc_load_average=$(cat /proc/loadavg) echo $proc_load_average"
      ],
      "observations": [
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "rewards": [
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67,
        0.67
      ],
      "valid_action": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ]
    },
    "summary": {
      "max_reward": 0.67,
      "max_reward_idx": 0,
      "turns_taken": 10,
      "turns_max": 10
    }
  },
  "26": {
    "environment": "ic_bash",
    "dataset": "./data/nl2bash/nl2bash_fs_4.json",
    "task_id": 26,
    "query": "Calculate the sum of all the numbers from 1 to 10",
    "turn_history": {
      "actions": [
        "echo $((1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10))"
      ],
      "observations": [
        "55\n"
      ],
      "rewards": [
        1.0
      ],
      "valid_action": [
        true
      ]
    },
    "summary": {
      "max_reward": 1.0,
      "max_reward_idx": 0,
      "turns_taken": 1,
      "turns_max": 10
    }
  }
}